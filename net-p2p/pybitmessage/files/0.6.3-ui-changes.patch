diff --git a/src/bitmessagemain.py b/src/bitmessagemain.py
index 2c3d10db..7a5cb0af 100755
--- a/src/bitmessagemain.py
+++ b/src/bitmessagemain.py
@@ -369,9 +369,9 @@ class Main:
                         time.time() - state.last_api_response >= 30):
                     self.stop()
         elif not state.enableGUI:
+            state.enableGUI = True
             from tests import core as test_core  # pylint: disable=relative-import
             test_core_result = test_core.run()
-            state.enableGUI = True
             self.stop()
             test_core.cleanup()
             sys.exit(
diff --git a/src/bitmessageqt/__init__.py b/src/bitmessageqt/__init__.py
index be26a0d0..4def7914 100644
--- a/src/bitmessageqt/__init__.py
+++ b/src/bitmessageqt/__init__.py
@@ -3,7 +3,6 @@ PyQt based UI for bitmessage, the main module
 """
 
 import hashlib
-import locale
 import os
 import random
 import string
@@ -20,9 +19,7 @@ from debug import logger
 from tr import _translate
 from addresses import decodeAddress, addBMIfNotPresent
 import shared
-from bitmessageui import Ui_MainWindow
 from bmconfigparser import BMConfigParser
-import defaults
 import namecoin
 from messageview import MessageView
 from migrationwizard import Ui_MigrationWizard
@@ -30,15 +27,13 @@ from foldertree import (
     AccountMixin, Ui_FolderWidget, Ui_AddressWidget, Ui_SubscriptionWidget,
     MessageList_AddressWidget, MessageList_SubjectWidget,
     Ui_AddressBookWidgetItemLabel, Ui_AddressBookWidgetItemAddress)
-from settings import Ui_settingsDialog
+from main import Window
 import settingsmixin
 import support
-import debug
 from helper_ackPayload import genAckPayload
 from helper_sql import sqlQuery, sqlExecute, sqlExecuteChunked, sqlStoredProcedure
 import helper_search
 import l10n
-import openclpow
 from utils import str_broadcast_subscribers, avatarize
 from account import (
     getSortedAccounts, getSortedSubscriptions, accountClass, BMAccount,
@@ -47,16 +42,13 @@ import dialogs
 from helper_generic import powQueueSize
 from network.stats import pendingDownload, pendingUpload
 from uisignaler import UISignaler
-import knownnodes
-import paths
 from proofofwork import getPowType
 import queues
 import shutdown
 import state
-from statusbar import BMStatusBar
-from network.asyncore_pollchoose import set_rates
 import sound
-
+# This is needed for tray icon
+import bitmessage_icons_rc  # noqa:F401 pylint: disable=unused-import
 
 try:
     from plugins.plugin import get_plugin, get_plugins
@@ -64,53 +56,7 @@ except ImportError:
     get_plugins = False
 
 
-def change_translation(newlocale):
-    global qmytranslator, qsystranslator
-    try:
-        if not qmytranslator.isEmpty():
-            QtGui.QApplication.removeTranslator(qmytranslator)
-    except:
-        pass
-    try:
-        if not qsystranslator.isEmpty():
-            QtGui.QApplication.removeTranslator(qsystranslator)
-    except:
-        pass
-
-    qmytranslator = QtCore.QTranslator()
-    translationpath = os.path.join (paths.codePath(), 'translations', 'bitmessage_' + newlocale)
-    qmytranslator.load(translationpath)
-    QtGui.QApplication.installTranslator(qmytranslator)
-
-    qsystranslator = QtCore.QTranslator()
-    if paths.frozen:
-        translationpath = os.path.join (paths.codePath(), 'translations', 'qt_' + newlocale)
-    else:
-        translationpath = os.path.join (str(QtCore.QLibraryInfo.location(QtCore.QLibraryInfo.TranslationsPath)), 'qt_' + newlocale)
-    qsystranslator.load(translationpath)
-    QtGui.QApplication.installTranslator(qsystranslator)
-
-    lang = locale.normalize(l10n.getTranslationLanguage())
-    langs = [lang.split(".")[0] + "." + l10n.encoding, lang.split(".")[0] + "." + 'UTF-8', lang]
-    if 'win32' in sys.platform or 'win64' in sys.platform:
-        langs = [l10n.getWindowsLocale(lang)]
-    for lang in langs:
-        try:
-            l10n.setlocale(locale.LC_ALL, lang)
-            if 'win32' not in sys.platform and 'win64' not in sys.platform:
-                l10n.encoding = locale.nl_langinfo(locale.CODESET)
-            else:
-                l10n.encoding = locale.getlocale()[1]
-            logger.info("Successfully set locale to %s", lang)
-            break
-        except:
-            logger.error("Failed to set locale to %s", lang, exc_info=True)
-
-
-class MyForm(settingsmixin.SMainWindow):
-
-    # the last time that a message arrival sound was played
-    lastSoundTime = datetime.now() - timedelta(days=1)
+class MainWindow(Window):
 
     # the maximum frequency of message sounds in seconds
     maxSoundFrequencySec = 60
@@ -118,140 +64,8 @@ class MyForm(settingsmixin.SMainWindow):
     REPLY_TYPE_SENDER = 0
     REPLY_TYPE_CHAN = 1
 
-    def init_file_menu(self):
-        QtCore.QObject.connect(self.ui.actionExit, QtCore.SIGNAL(
-            "triggered()"), self.quit)
-        QtCore.QObject.connect(self.ui.actionNetworkSwitch, QtCore.SIGNAL(
-            "triggered()"), self.network_switch)
-        QtCore.QObject.connect(self.ui.actionManageKeys, QtCore.SIGNAL(
-            "triggered()"), self.click_actionManageKeys)
-        QtCore.QObject.connect(self.ui.actionDeleteAllTrashedMessages,
-                               QtCore.SIGNAL(
-                                   "triggered()"),
-                               self.click_actionDeleteAllTrashedMessages)
-        QtCore.QObject.connect(self.ui.actionRegenerateDeterministicAddresses,
-                               QtCore.SIGNAL(
-                                   "triggered()"),
-                               self.click_actionRegenerateDeterministicAddresses)
-        QtCore.QObject.connect(self.ui.pushButtonAddChan, QtCore.SIGNAL(
-            "clicked()"),
-                               self.click_actionJoinChan) # also used for creating chans.
-        QtCore.QObject.connect(self.ui.pushButtonNewAddress, QtCore.SIGNAL(
-            "clicked()"), self.click_NewAddressDialog)
-        QtCore.QObject.connect(self.ui.pushButtonAddAddressBook, QtCore.SIGNAL(
-            "clicked()"), self.click_pushButtonAddAddressBook)
-        QtCore.QObject.connect(self.ui.pushButtonAddSubscription, QtCore.SIGNAL(
-            "clicked()"), self.click_pushButtonAddSubscription)
-        QtCore.QObject.connect(self.ui.pushButtonTTL, QtCore.SIGNAL(
-            "clicked()"), self.click_pushButtonTTL)
-        QtCore.QObject.connect(self.ui.pushButtonClear, QtCore.SIGNAL(
-            "clicked()"), self.click_pushButtonClear)
-        QtCore.QObject.connect(self.ui.pushButtonSend, QtCore.SIGNAL(
-            "clicked()"), self.click_pushButtonSend)
-        QtCore.QObject.connect(self.ui.pushButtonFetchNamecoinID, QtCore.SIGNAL(
-            "clicked()"), self.click_pushButtonFetchNamecoinID)
-        QtCore.QObject.connect(self.ui.actionSettings, QtCore.SIGNAL(
-            "triggered()"), self.click_actionSettings)
-        QtCore.QObject.connect(self.ui.actionAbout, QtCore.SIGNAL(
-            "triggered()"), self.click_actionAbout)
-        QtCore.QObject.connect(self.ui.actionSupport, QtCore.SIGNAL(
-            "triggered()"), self.click_actionSupport)
-        QtCore.QObject.connect(self.ui.actionHelp, QtCore.SIGNAL(
-            "triggered()"), self.click_actionHelp)
-
-    def init_inbox_popup_menu(self, connectSignal=True):
-        # Popup menu for the Inbox tab
-        self.ui.inboxContextMenuToolbar = QtGui.QToolBar()
-        # Actions
-        self.actionReply = self.ui.inboxContextMenuToolbar.addAction(_translate(
-            "MainWindow", "Reply to sender"), self.on_action_InboxReply)
-        self.actionReplyChan = self.ui.inboxContextMenuToolbar.addAction(_translate(
-            "MainWindow", "Reply to channel"), self.on_action_InboxReplyChan)
-        self.actionAddSenderToAddressBook = self.ui.inboxContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Add sender to your Address Book"),
-            self.on_action_InboxAddSenderToAddressBook)
-        self.actionAddSenderToBlackList = self.ui.inboxContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Add sender to your Blacklist"),
-            self.on_action_InboxAddSenderToBlackList)
-        self.actionTrashInboxMessage = self.ui.inboxContextMenuToolbar.addAction(
-            _translate("MainWindow", "Move to Trash"),
-            self.on_action_InboxTrash)
-        self.actionUndeleteTrashedMessage = self.ui.inboxContextMenuToolbar.addAction(
-            _translate("MainWindow", "Undelete"),
-            self.on_action_TrashUndelete)
-        self.actionForceHtml = self.ui.inboxContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "View HTML code as formatted text"),
-            self.on_action_InboxMessageForceHtml)
-        self.actionSaveMessageAs = self.ui.inboxContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Save message as..."),
-            self.on_action_InboxSaveMessageAs)
-        self.actionMarkUnread = self.ui.inboxContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Mark Unread"), self.on_action_InboxMarkUnread)
-
-        # contextmenu messagelists
-        self.ui.tableWidgetInbox.setContextMenuPolicy(
-            QtCore.Qt.CustomContextMenu)
-        if connectSignal:
-            self.connect(self.ui.tableWidgetInbox, QtCore.SIGNAL(
-                'customContextMenuRequested(const QPoint&)'),
-                        self.on_context_menuInbox)
-        self.ui.tableWidgetInboxSubscriptions.setContextMenuPolicy(
-            QtCore.Qt.CustomContextMenu)
-        if connectSignal:
-            self.connect(self.ui.tableWidgetInboxSubscriptions, QtCore.SIGNAL(
-                'customContextMenuRequested(const QPoint&)'),
-                        self.on_context_menuInbox)
-        self.ui.tableWidgetInboxChans.setContextMenuPolicy(
-            QtCore.Qt.CustomContextMenu)
-        if connectSignal:
-            self.connect(self.ui.tableWidgetInboxChans, QtCore.SIGNAL(
-                'customContextMenuRequested(const QPoint&)'),
-                        self.on_context_menuInbox)
-
     def init_identities_popup_menu(self, connectSignal=True):
         # Popup menu for the Your Identities tab
-        self.ui.addressContextMenuToolbarYourIdentities = QtGui.QToolBar()
-        # Actions
-        self.actionNewYourIdentities = self.ui.addressContextMenuToolbarYourIdentities.addAction(_translate(
-            "MainWindow", "New"), self.on_action_YourIdentitiesNew)
-        self.actionEnableYourIdentities = self.ui.addressContextMenuToolbarYourIdentities.addAction(
-            _translate(
-                "MainWindow", "Enable"), self.on_action_Enable)
-        self.actionDisableYourIdentities = self.ui.addressContextMenuToolbarYourIdentities.addAction(
-            _translate(
-                "MainWindow", "Disable"), self.on_action_Disable)
-        self.actionSetAvatarYourIdentities = self.ui.addressContextMenuToolbarYourIdentities.addAction(
-            _translate(
-                "MainWindow", "Set avatar..."),
-            self.on_action_TreeWidgetSetAvatar)
-        self.actionClipboardYourIdentities = self.ui.addressContextMenuToolbarYourIdentities.addAction(
-            _translate(
-                "MainWindow", "Copy address to clipboard"),
-            self.on_action_Clipboard)
-        self.actionSpecialAddressBehaviorYourIdentities = self.ui.addressContextMenuToolbarYourIdentities.addAction(
-            _translate(
-                "MainWindow", "Special address behavior..."),
-            self.on_action_SpecialAddressBehaviorDialog)
-        self.actionEmailGateway = self.ui.addressContextMenuToolbarYourIdentities.addAction(
-            _translate(
-                "MainWindow", "Email gateway"),
-            self.on_action_EmailGatewayDialog)
-        self.actionMarkAllRead = self.ui.addressContextMenuToolbarYourIdentities.addAction(
-            _translate(
-                "MainWindow", "Mark all messages as read"),
-            self.on_action_MarkAllRead)
-
-        self.ui.treeWidgetYourIdentities.setContextMenuPolicy(
-            QtCore.Qt.CustomContextMenu)
-        if connectSignal:
-            self.connect(self.ui.treeWidgetYourIdentities, QtCore.SIGNAL(
-                'customContextMenuRequested(const QPoint&)'),
-                        self.on_context_menuYourIdentities)
 
         # load all gui.menu plugins with prefix 'address'
         self.menu_plugins = {'address': []}
@@ -263,130 +77,12 @@ class MyForm(settingsmixin.SMainWindow):
             except TypeError:
                 continue
             self.menu_plugins['address'].append(
-                self.ui.addressContextMenuToolbarYourIdentities.addAction(
+                self.addressContextMenuToolbarYourIdentities.addAction(
                     title, handler
                 ))
 
-    def init_chan_popup_menu(self, connectSignal=True):
-        # Popup menu for the Channels tab
-        self.ui.addressContextMenuToolbar = QtGui.QToolBar()
-        # Actions
-        self.actionNew = self.ui.addressContextMenuToolbar.addAction(_translate(
-            "MainWindow", "New"), self.on_action_YourIdentitiesNew)
-        self.actionDelete = self.ui.addressContextMenuToolbar.addAction(
-            _translate("MainWindow", "Delete"),
-            self.on_action_YourIdentitiesDelete)
-        self.actionEnable = self.ui.addressContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Enable"), self.on_action_Enable)
-        self.actionDisable = self.ui.addressContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Disable"), self.on_action_Disable)
-        self.actionSetAvatar = self.ui.addressContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Set avatar..."),
-            self.on_action_TreeWidgetSetAvatar)
-        self.actionClipboard = self.ui.addressContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Copy address to clipboard"),
-            self.on_action_Clipboard)
-        self.actionSpecialAddressBehavior = self.ui.addressContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Special address behavior..."),
-            self.on_action_SpecialAddressBehaviorDialog)
-
-        self.ui.treeWidgetChans.setContextMenuPolicy(
-            QtCore.Qt.CustomContextMenu)
-        if connectSignal:
-            self.connect(self.ui.treeWidgetChans, QtCore.SIGNAL(
-                'customContextMenuRequested(const QPoint&)'),
-                        self.on_context_menuChan)
-
-    def init_addressbook_popup_menu(self, connectSignal=True):
-        # Popup menu for the Address Book page
-        self.ui.addressBookContextMenuToolbar = QtGui.QToolBar()
-        # Actions
-        self.actionAddressBookSend = self.ui.addressBookContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Send message to this address"),
-            self.on_action_AddressBookSend)
-        self.actionAddressBookClipboard = self.ui.addressBookContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Copy address to clipboard"),
-            self.on_action_AddressBookClipboard)
-        self.actionAddressBookSubscribe = self.ui.addressBookContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Subscribe to this address"),
-            self.on_action_AddressBookSubscribe)
-        self.actionAddressBookSetAvatar = self.ui.addressBookContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Set avatar..."),
-            self.on_action_AddressBookSetAvatar)
-        self.actionAddressBookSetSound = \
-            self.ui.addressBookContextMenuToolbar.addAction(
-                _translate("MainWindow", "Set notification sound..."),
-                self.on_action_AddressBookSetSound)
-        self.actionAddressBookNew = self.ui.addressBookContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Add New Address"), self.on_action_AddressBookNew)
-        self.actionAddressBookDelete = self.ui.addressBookContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Delete"), self.on_action_AddressBookDelete)
-        self.ui.tableWidgetAddressBook.setContextMenuPolicy(
-            QtCore.Qt.CustomContextMenu)
-        if connectSignal:
-            self.connect(self.ui.tableWidgetAddressBook, QtCore.SIGNAL(
-                'customContextMenuRequested(const QPoint&)'),
-                        self.on_context_menuAddressBook)
-
-    def init_subscriptions_popup_menu(self, connectSignal=True):
-        # Popup menu for the Subscriptions page
-        self.ui.subscriptionsContextMenuToolbar = QtGui.QToolBar()
-        # Actions
-        self.actionsubscriptionsNew = self.ui.subscriptionsContextMenuToolbar.addAction(
-            _translate("MainWindow", "New"), self.on_action_SubscriptionsNew)
-        self.actionsubscriptionsDelete = self.ui.subscriptionsContextMenuToolbar.addAction(
-            _translate("MainWindow", "Delete"),
-            self.on_action_SubscriptionsDelete)
-        self.actionsubscriptionsClipboard = self.ui.subscriptionsContextMenuToolbar.addAction(
-            _translate("MainWindow", "Copy address to clipboard"),
-            self.on_action_SubscriptionsClipboard)
-        self.actionsubscriptionsEnable = self.ui.subscriptionsContextMenuToolbar.addAction(
-            _translate("MainWindow", "Enable"),
-            self.on_action_SubscriptionsEnable)
-        self.actionsubscriptionsDisable = self.ui.subscriptionsContextMenuToolbar.addAction(
-            _translate("MainWindow", "Disable"),
-            self.on_action_SubscriptionsDisable)
-        self.actionsubscriptionsSetAvatar = self.ui.subscriptionsContextMenuToolbar.addAction(
-            _translate("MainWindow", "Set avatar..."),
-            self.on_action_TreeWidgetSetAvatar)
-        self.ui.treeWidgetSubscriptions.setContextMenuPolicy(
-            QtCore.Qt.CustomContextMenu)
-        if connectSignal:
-            self.connect(self.ui.treeWidgetSubscriptions, QtCore.SIGNAL(
-                'customContextMenuRequested(const QPoint&)'),
-                        self.on_context_menuSubscriptions)
-
-    def init_sent_popup_menu(self, connectSignal=True):
-        # Popup menu for the Sent page
-        self.ui.sentContextMenuToolbar = QtGui.QToolBar()
-        # Actions
-        self.actionTrashSentMessage = self.ui.sentContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Move to Trash"), self.on_action_SentTrash)
-        self.actionSentClipboard = self.ui.sentContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Copy destination address to clipboard"),
-            self.on_action_SentClipboard)
-        self.actionForceSend = self.ui.sentContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Force send"), self.on_action_ForceSend)
-        # self.popMenuSent = QtGui.QMenu( self )
-        # self.popMenuSent.addAction( self.actionSentClipboard )
-        # self.popMenuSent.addAction( self.actionTrashSentMessage )
-
     def rerenderTabTreeSubscriptions(self):
-        treeWidget = self.ui.treeWidgetSubscriptions
+        treeWidget = self.treeWidgetSubscriptions
         folders = Ui_FolderWidget.folderWeight.keys()
         folders.remove("new")
 
@@ -471,9 +167,9 @@ class MyForm(settingsmixin.SMainWindow):
         
     def rerenderTabTree(self, tab):
         if tab == 'messages':
-            treeWidget = self.ui.treeWidgetYourIdentities
+            treeWidget = self.treeWidgetYourIdentities
         elif tab == 'chan':
-            treeWidget = self.ui.treeWidgetChans
+            treeWidget = self.treeWidgetChans
         folders = Ui_FolderWidget.folderWeight.keys()
         
         # sort ascending when creating
@@ -492,10 +188,10 @@ class MyForm(settingsmixin.SMainWindow):
             isMaillinglist = BMConfigParser().safeGetBoolean(
                 toAddress, 'mailinglist')
 
-            if treeWidget == self.ui.treeWidgetYourIdentities:
+            if treeWidget == self.treeWidgetYourIdentities:
                 if isChan:
                     continue
-            elif treeWidget == self.ui.treeWidgetChans:
+            elif treeWidget == self.treeWidgetChans:
                 if not isChan:
                     continue
 
@@ -513,7 +209,7 @@ class MyForm(settingsmixin.SMainWindow):
             total += cnt
             if toaddress in db and folder in db[toaddress]:
                 db[toaddress][folder] = cnt
-        if treeWidget == self.ui.treeWidgetYourIdentities:
+        if treeWidget == self.treeWidgetYourIdentities:
             db[None] = {}
             db[None]["inbox"] = total
             db[None]["new"] = total
@@ -584,9 +280,13 @@ class MyForm(settingsmixin.SMainWindow):
         treeWidget.setSortingEnabled(True)
 
     def __init__(self, parent=None):
-        QtGui.QWidget.__init__(self, parent)
-        self.ui = Ui_MainWindow()
-        self.ui.setupUi(self)
+        super(MainWindow, self).__init__(parent)
+
+        self.indicatorUpdate = None
+        self.actionStatus = None
+
+        # the last time that a message arrival sound was played
+        self.lastSoundTime = datetime.now() - timedelta(days=1)
 
         # Ask the user if we may delete their old version 1 addresses if they
         # have any.
@@ -603,39 +303,18 @@ class MyForm(settingsmixin.SMainWindow):
                     BMConfigParser().remove_section(addressInKeysFile)
                     BMConfigParser().save()
 
-        # Configure Bitmessage to start on startup (or remove the
-        # configuration) based on the setting in the keys.dat file
-        if 'win32' in sys.platform or 'win64' in sys.platform:
-            # Auto-startup for Windows
-            RUN_PATH = "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run"
-            self.settings = QtCore.QSettings(RUN_PATH, QtCore.QSettings.NativeFormat)
-            self.settings.remove(
-                "PyBitmessage")  # In case the user moves the program and the registry entry is no longer valid, this will delete the old registry entry.
-            if BMConfigParser().getboolean('bitmessagesettings', 'startonlogon'):
-                self.settings.setValue("PyBitmessage", sys.argv[0])
-        elif 'darwin' in sys.platform:
-            # startup for mac
-            pass
-        elif 'linux' in sys.platform:
-            # startup for linux
-            pass
+        self.updateStartOnLogon()
 
         # e.g. for editing labels
         self.recurDepth = 0
-        
+
         # switch back to this when replying
         self.replyFromTab = None
 
         # so that quit won't loop
         self.wait = self.quitAccepted = False
 
-        self.init_file_menu()
-        self.init_inbox_popup_menu()
         self.init_identities_popup_menu()
-        self.init_addressbook_popup_menu()
-        self.init_subscriptions_popup_menu()
-        self.init_chan_popup_menu()
-        self.init_sent_popup_menu()
 
         # Initialize the user's list of addresses on the 'Chan' tab.
         self.rerenderTabTreeChans()
@@ -643,94 +322,17 @@ class MyForm(settingsmixin.SMainWindow):
         # Initialize the user's list of addresses on the 'Messages' tab.
         self.rerenderTabTreeMessages()
 
-        # Set welcome message
-        self.ui.textEditInboxMessage.setText(_translate("MainWindow", """
-        Welcome to easy and secure Bitmessage
-            * send messages to other people
-            * send broadcast messages like twitter or
-            * discuss in chan(nel)s with other people
-        """))
-
         # Initialize the address book
         self.rerenderAddressBook()
 
         # Initialize the Subscriptions
         self.rerenderSubscriptions()
 
-        # Initialize the inbox search
-        QtCore.QObject.connect(self.ui.inboxSearchLineEdit, QtCore.SIGNAL(
-            "returnPressed()"), self.inboxSearchLineEditReturnPressed)
-        QtCore.QObject.connect(self.ui.inboxSearchLineEditSubscriptions, QtCore.SIGNAL(
-            "returnPressed()"), self.inboxSearchLineEditReturnPressed)
-        QtCore.QObject.connect(self.ui.inboxSearchLineEditChans, QtCore.SIGNAL(
-            "returnPressed()"), self.inboxSearchLineEditReturnPressed)
-        QtCore.QObject.connect(self.ui.inboxSearchLineEdit, QtCore.SIGNAL(
-            "textChanged(QString)"), self.inboxSearchLineEditUpdated)
-        QtCore.QObject.connect(self.ui.inboxSearchLineEditSubscriptions, QtCore.SIGNAL(
-            "textChanged(QString)"), self.inboxSearchLineEditUpdated)
-        QtCore.QObject.connect(self.ui.inboxSearchLineEditChans, QtCore.SIGNAL(
-            "textChanged(QString)"), self.inboxSearchLineEditUpdated)
-
-        # Initialize addressbook
-        QtCore.QObject.connect(self.ui.tableWidgetAddressBook, QtCore.SIGNAL(
-            "itemChanged(QTableWidgetItem *)"), self.tableWidgetAddressBookItemChanged)
-        # This is necessary for the completer to work if multiple recipients
-        QtCore.QObject.connect(self.ui.lineEditTo, QtCore.SIGNAL(
-            "cursorPositionChanged(int, int)"), self.ui.lineEditTo.completer().onCursorPositionChanged)
-
-        # show messages from message list
-        QtCore.QObject.connect(self.ui.tableWidgetInbox, QtCore.SIGNAL(
-            "itemSelectionChanged ()"), self.tableWidgetInboxItemClicked)
-        QtCore.QObject.connect(self.ui.tableWidgetInboxSubscriptions, QtCore.SIGNAL(
-            "itemSelectionChanged ()"), self.tableWidgetInboxItemClicked)
-        QtCore.QObject.connect(self.ui.tableWidgetInboxChans, QtCore.SIGNAL(
-            "itemSelectionChanged ()"), self.tableWidgetInboxItemClicked)
-
-        # tree address lists
-        QtCore.QObject.connect(self.ui.treeWidgetYourIdentities, QtCore.SIGNAL(
-            "itemSelectionChanged ()"), self.treeWidgetItemClicked)
-        QtCore.QObject.connect(self.ui.treeWidgetYourIdentities, QtCore.SIGNAL(
-            "itemChanged (QTreeWidgetItem *, int)"), self.treeWidgetItemChanged)
-        QtCore.QObject.connect(self.ui.treeWidgetSubscriptions, QtCore.SIGNAL(
-            "itemSelectionChanged ()"), self.treeWidgetItemClicked)
-        QtCore.QObject.connect(self.ui.treeWidgetSubscriptions, QtCore.SIGNAL(
-            "itemChanged (QTreeWidgetItem *, int)"), self.treeWidgetItemChanged)
-        QtCore.QObject.connect(self.ui.treeWidgetChans, QtCore.SIGNAL(
-            "itemSelectionChanged ()"), self.treeWidgetItemClicked)
-        QtCore.QObject.connect(self.ui.treeWidgetChans, QtCore.SIGNAL(
-            "itemChanged (QTreeWidgetItem *, int)"), self.treeWidgetItemChanged)
-        QtCore.QObject.connect(
-            self.ui.tabWidget, QtCore.SIGNAL("currentChanged(int)"),
-            self.tabWidgetCurrentChanged
-        )
-
-        # Put the colored icon on the status bar
-        # self.pushButtonStatusIcon.setIcon(QIcon(":/newPrefix/images/yellowicon.png"))
-        self.setStatusBar(BMStatusBar())
-        self.statusbar = self.statusBar()
-
-        self.pushButtonStatusIcon = QtGui.QPushButton(self)
-        self.pushButtonStatusIcon.setText('')
-        self.pushButtonStatusIcon.setIcon(
-            QtGui.QIcon(':/newPrefix/images/redicon.png'))
-        self.pushButtonStatusIcon.setFlat(True)
-        self.statusbar.insertPermanentWidget(0, self.pushButtonStatusIcon)
-        QtCore.QObject.connect(self.pushButtonStatusIcon, QtCore.SIGNAL(
-            "clicked()"), self.click_pushButtonStatusIcon)
-
         self.numberOfMessagesProcessed = 0
         self.numberOfBroadcastsProcessed = 0
         self.numberOfPubkeysProcessed = 0
         self.unreadCount = 0
 
-        # Set the icon sizes for the identicons
-        identicon_size = 3*7
-        self.ui.tableWidgetInbox.setIconSize(QtCore.QSize(identicon_size, identicon_size))
-        self.ui.treeWidgetChans.setIconSize(QtCore.QSize(identicon_size, identicon_size))
-        self.ui.treeWidgetYourIdentities.setIconSize(QtCore.QSize(identicon_size, identicon_size))
-        self.ui.treeWidgetSubscriptions.setIconSize(QtCore.QSize(identicon_size, identicon_size))
-        self.ui.tableWidgetAddressBook.setIconSize(QtCore.QSize(identicon_size, identicon_size))
-        
         self.UISignalThread = UISignaler.get()
         QtCore.QObject.connect(self.UISignalThread, QtCore.SIGNAL(
             "writeNewAddressToTable(PyQt_PyObject,PyQt_PyObject,PyQt_PyObject)"), self.writeNewAddressToTable)
@@ -765,19 +367,19 @@ class MyForm(settingsmixin.SMainWindow):
         self.UISignalThread.start()
 
         # Key press in tree view
-        self.ui.treeWidgetYourIdentities.keyPressEvent = self.treeWidgetKeyPressEvent
-        self.ui.treeWidgetSubscriptions.keyPressEvent = self.treeWidgetKeyPressEvent
-        self.ui.treeWidgetChans.keyPressEvent = self.treeWidgetKeyPressEvent
+        self.treeWidgetYourIdentities.keyPressEvent = self.treeWidgetKeyPressEvent
+        self.treeWidgetSubscriptions.keyPressEvent = self.treeWidgetKeyPressEvent
+        self.treeWidgetChans.keyPressEvent = self.treeWidgetKeyPressEvent
 
         # Key press in messagelist
-        self.ui.tableWidgetInbox.keyPressEvent = self.tableWidgetKeyPressEvent
-        self.ui.tableWidgetInboxSubscriptions.keyPressEvent = self.tableWidgetKeyPressEvent
-        self.ui.tableWidgetInboxChans.keyPressEvent = self.tableWidgetKeyPressEvent
+        self.tableWidgetInbox.keyPressEvent = self.tableWidgetKeyPressEvent
+        self.tableWidgetInboxSubscriptions.keyPressEvent = self.tableWidgetKeyPressEvent
+        self.tableWidgetInboxChans.keyPressEvent = self.tableWidgetKeyPressEvent
 
         # Key press in messageview
-        self.ui.textEditInboxMessage.keyPressEvent = self.textEditKeyPressEvent
-        self.ui.textEditInboxMessageSubscriptions.keyPressEvent = self.textEditKeyPressEvent
-        self.ui.textEditInboxMessageChans.keyPressEvent = self.textEditKeyPressEvent
+        self.textEditInboxMessage.keyPressEvent = self.textEditKeyPressEvent
+        self.textEditInboxMessageSubscriptions.keyPressEvent = self.textEditKeyPressEvent
+        self.textEditInboxMessageChans.keyPressEvent = self.textEditKeyPressEvent
 
         # Below this point, it would be good if all of the necessary global data
         # structures were initialized.
@@ -791,15 +393,34 @@ class MyForm(settingsmixin.SMainWindow):
             TTL = 3600
         elif TTL > 28*24*60*60: # 28 days
             TTL = 28*24*60*60
-        self.ui.horizontalSliderTTL.setSliderPosition((TTL - 3600) ** (1/3.199))
+        self.horizontalSliderTTL.setSliderPosition((TTL - 3600) ** (1/3.199))
         self.updateHumanFriendlyTTLDescription(TTL)
-        
-        QtCore.QObject.connect(self.ui.horizontalSliderTTL, QtCore.SIGNAL(
-            "valueChanged(int)"), self.updateTTL)
 
         self.initSettings()
         self.resetNamecoinConnection()
 
+    def updateStartOnLogon(self):
+        # Configure Bitmessage to start on startup (or remove the
+        # configuration) based on the setting in the keys.dat file
+        if 'win32' in sys.platform or 'win64' in sys.platform:
+            # Auto-startup for Windows
+            RUN_PATH = "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run"
+            self.settings = QtCore.QSettings(
+                RUN_PATH, QtCore.QSettings.NativeFormat)
+            # In case the user moves the program and the registry entry is
+            # no longer valid, this will delete the old registry entry.
+            self.settings.remove("PyBitmessage")
+            if BMConfigParser().getboolean(
+                    'bitmessagesettings', 'startonlogon'
+            ):
+                self.settings.setValue("PyBitmessage", sys.argv[0])
+        elif 'darwin' in sys.platform:
+            # startup for mac
+            pass
+        elif 'linux' in sys.platform:
+            # startup for linux
+            pass
+
     def updateTTL(self, sliderPosition):
         TTL = int(sliderPosition ** 3.199 + 3600)
         self.updateHumanFriendlyTTLDescription(TTL)
@@ -812,7 +433,7 @@ class MyForm(settingsmixin.SMainWindow):
         stylesheet = ""
 
         if numberOfHours < 48:
-            self.ui.labelHumanFriendlyTTLDescription.setText(
+            self.labelHumanFriendlyTTLDescription.setText(
                 _translate("MainWindow", "%n hour(s)", None, QtCore.QCoreApplication.CodecForTr, numberOfHours) +
                 ", " +
                 _translate("MainWindow", "not recommended for chans", None, QtCore.QCoreApplication.CodecForTr)
@@ -821,10 +442,13 @@ class MyForm(settingsmixin.SMainWindow):
             font.setBold(True)
         else:
             numberOfDays = int(round(TTL / (24*60*60)))
-            self.ui.labelHumanFriendlyTTLDescription.setText(_translate("MainWindow", "%n day(s)", None, QtCore.QCoreApplication.CodecForTr, numberOfDays))
+            self.labelHumanFriendlyTTLDescription.setText(
+                _translate(
+                    "MainWindow", "%n day(s)",
+                    None, QtCore.QCoreApplication.CodecForTr, numberOfDays))
             font.setBold(False)
-        self.ui.labelHumanFriendlyTTLDescription.setStyleSheet(stylesheet)
-        self.ui.labelHumanFriendlyTTLDescription.setFont(font)
+        self.labelHumanFriendlyTTLDescription.setStyleSheet(stylesheet)
+        self.labelHumanFriendlyTTLDescription.setFont(font)
 
     # Show or hide the application window after clicking an item within the
     # tray icon or, on Windows, the try icon itself.
@@ -876,38 +500,38 @@ class MyForm(settingsmixin.SMainWindow):
     def appIndicatorInbox(self, item=None):
         self.appIndicatorShow()
         # select inbox
-        self.ui.tabWidget.setCurrentIndex(
-            self.ui.tabWidget.indexOf(self.ui.inbox)
+        self.tabWidget.setCurrentIndex(
+            self.tabWidget.indexOf(self.inbox)
         )
-        self.ui.treeWidgetYourIdentities.setCurrentItem(
-            self.ui.treeWidgetYourIdentities.topLevelItem(0).child(0)
+        self.treeWidgetYourIdentities.setCurrentItem(
+            self.treeWidgetYourIdentities.topLevelItem(0).child(0)
         )
 
         if item:
-            self.ui.tableWidgetInbox.setCurrentItem(item)
+            self.tableWidgetInbox.setCurrentItem(item)
             self.tableWidgetInboxItemClicked()
         else:
-            self.ui.tableWidgetInbox.setCurrentCell(0, 0)
+            self.tableWidgetInbox.setCurrentCell(0, 0)
 
     # Show the program window and select send tab
     def appIndicatorSend(self):
         self.appIndicatorShow()
-        self.ui.tabWidget.setCurrentIndex(
-            self.ui.tabWidget.indexOf(self.ui.send)
+        self.tabWidget.setCurrentIndex(
+            self.tabWidget.indexOf(self.send)
         )
 
     # Show the program window and select subscriptions tab
     def appIndicatorSubscribe(self):
         self.appIndicatorShow()
-        self.ui.tabWidget.setCurrentIndex(
-            self.ui.tabWidget.indexOf(self.ui.subscriptions)
+        self.tabWidget.setCurrentIndex(
+            self.tabWidget.indexOf(self.subscriptions)
         )
 
     # Show the program window and select channels tab
     def appIndicatorChannel(self):
         self.appIndicatorShow()
-        self.ui.tabWidget.setCurrentIndex(
-            self.ui.tabWidget.indexOf(self.ui.chans)
+        self.tabWidget.setCurrentIndex(
+            self.tabWidget.indexOf(self.chans)
         )
 
     def updateUnreadStatus(self, widget, row, msgid, unread=True):
@@ -915,7 +539,7 @@ class MyForm(settingsmixin.SMainWindow):
         Switch unread for item of msgid and related items in
         other STableWidgets "All Accounts" and "Chans"
         """
-        related = [self.ui.tableWidgetInbox, self.ui.tableWidgetInboxChans]
+        related = [self.tableWidgetInbox, self.tableWidgetInboxChans]
         try:
             related.remove(widget)
             related = related.pop()
@@ -951,7 +575,7 @@ class MyForm(settingsmixin.SMainWindow):
                     related.item(rrow, col).setUnread(not status)
 
     def propagateUnreadCount(self, address = None, folder = "inbox", widget = None, type = 1):
-        widgets = [self.ui.treeWidgetYourIdentities, self.ui.treeWidgetSubscriptions, self.ui.treeWidgetChans]
+        widgets = [self.treeWidgetYourIdentities, self.treeWidgetSubscriptions, self.treeWidgetChans]
         queryReturn = sqlQuery("SELECT toaddress, folder, COUNT(msgid) AS cnt FROM inbox WHERE read = 0 GROUP BY toaddress, folder")
         totalUnread = {}
         normalUnread = {}
@@ -1111,11 +735,11 @@ class MyForm(settingsmixin.SMainWindow):
 
     # Load Sent items from database
     def loadSent(self, tableWidget, account, where="", what=""):
-        if tableWidget == self.ui.tableWidgetInboxSubscriptions:
+        if tableWidget == self.tableWidgetInboxSubscriptions:
             tableWidget.setColumnHidden(0, True)
             tableWidget.setColumnHidden(1, False)
             xAddress = 'toaddress'
-        elif tableWidget == self.ui.tableWidgetInboxChans:
+        elif tableWidget == self.tableWidgetInboxChans:
             tableWidget.setColumnHidden(0, False)
             tableWidget.setColumnHidden(1, True)
             xAddress = 'both'
@@ -1148,7 +772,7 @@ class MyForm(settingsmixin.SMainWindow):
             self.loadSent(tableWidget, account, where, what)
             return
 
-        if tableWidget == self.ui.tableWidgetInboxSubscriptions:
+        if tableWidget == self.tableWidgetInboxSubscriptions:
             xAddress = "fromaddress"
         else:
             xAddress = "toaddress"
@@ -1410,7 +1034,7 @@ class MyForm(settingsmixin.SMainWindow):
                     messagelist.selectRow(currentRow - 1)
                 event.ignore()
             elif event.key() == QtCore.Qt.Key_R:
-                if messagelist == self.ui.tableWidgetInboxChans:
+                if messagelist == self.tableWidgetInboxChans:
                     self.on_action_InboxReplyChan()
                 else:
                     self.on_action_InboxReply()
@@ -1419,13 +1043,13 @@ class MyForm(settingsmixin.SMainWindow):
                 currentAddress = self.getCurrentAccount()
                 if currentAddress:
                     self.setSendFromComboBox(currentAddress)
-                self.ui.tabWidgetSend.setCurrentIndex(
-                    self.ui.tabWidgetSend.indexOf(self.ui.sendDirect)
+                self.tabWidgetSend.setCurrentIndex(
+                    self.tabWidgetSend.indexOf(self.sendDirect)
                 )
-                self.ui.tabWidget.setCurrentIndex(
-                    self.ui.tabWidget.indexOf(self.ui.send)
+                self.tabWidget.setCurrentIndex(
+                    self.tabWidget.indexOf(self.send)
                 )
-                self.ui.lineEditTo.setFocus()
+                self.lineEditTo.setFocus()
                 event.ignore()
             elif event.key() == QtCore.Qt.Key_F:
                 searchline = self.getCurrentSearchLine(retObj = True)
@@ -1473,12 +1097,12 @@ class MyForm(settingsmixin.SMainWindow):
         self.rerenderTabTreeMessages()
         self.rerenderTabTreeSubscriptions()
         self.rerenderTabTreeChans()
-        if self.getCurrentFolder(self.ui.treeWidgetYourIdentities) == "trash":
-            self.loadMessagelist(self.ui.tableWidgetInbox, self.getCurrentAccount(self.ui.treeWidgetYourIdentities), "trash")
-        elif self.getCurrentFolder(self.ui.treeWidgetSubscriptions) == "trash":
-            self.loadMessagelist(self.ui.tableWidgetInboxSubscriptions, self.getCurrentAccount(self.ui.treeWidgetSubscriptions), "trash")
-        elif self.getCurrentFolder(self.ui.treeWidgetChans) == "trash":
-            self.loadMessagelist(self.ui.tableWidgetInboxChans, self.getCurrentAccount(self.ui.treeWidgetChans), "trash")
+        if self.getCurrentFolder(self.treeWidgetYourIdentities) == "trash":
+            self.loadMessagelist(self.tableWidgetInbox, self.getCurrentAccount(self.treeWidgetYourIdentities), "trash")
+        elif self.getCurrentFolder(self.treeWidgetSubscriptions) == "trash":
+            self.loadMessagelist(self.tableWidgetInboxSubscriptions, self.getCurrentAccount(self.treeWidgetSubscriptions), "trash")
+        elif self.getCurrentFolder(self.treeWidgetChans) == "trash":
+            self.loadMessagelist(self.tableWidgetInboxChans, self.getCurrentAccount(self.treeWidgetChans), "trash")
 
     # menu button 'regenerate deterministic addresses'
     def click_actionRegenerateDeterministicAddresses(self):
@@ -1524,8 +1148,8 @@ class MyForm(settingsmixin.SMainWindow):
                 dialog.lineEditPassphrase.text().toUtf8(),
                 dialog.checkBoxEighteenByteRipe.isChecked()
             ))
-            self.ui.tabWidget.setCurrentIndex(
-                self.ui.tabWidget.indexOf(self.ui.chans)
+            self.tabWidget.setCurrentIndex(
+                self.tabWidget.indexOf(self.chans)
             )
 
     # opens 'join chan' dialog
@@ -1553,14 +1177,10 @@ class MyForm(settingsmixin.SMainWindow):
 
     def changeEvent(self, event):
         if event.type() == QtCore.QEvent.LanguageChange:
-            self.ui.retranslateUi(self)
-            self.init_inbox_popup_menu(False)
+            # FIXME: it's called very often
+            self.retranslateUi()
             self.init_identities_popup_menu(False)
-            self.init_chan_popup_menu(False)
-            self.init_addressbook_popup_menu(False)
-            self.init_subscriptions_popup_menu(False)
-            self.init_sent_popup_menu(False)
-            self.ui.blackwhitelist.init_blacklist_popup_menu(False)
+            self.blackwhitelist.init_blacklist_popup_menu()
         if event.type() == QtCore.QEvent.WindowStateChange:
             if self.windowState() & QtCore.Qt.WindowMinimized:
                 if BMConfigParser().getboolean('bitmessagesettings', 'minimizetotray') and not 'darwin' in sys.platform:
@@ -1569,7 +1189,6 @@ class MyForm(settingsmixin.SMainWindow):
                 # The window state has just been changed to
                 # Normal/Maximised/FullScreen
                 pass
-        # QtGui.QWidget.changeEvent(self, event)
 
     def __icon_activated(self, reason):
         if reason == QtGui.QSystemTrayIcon.Trigger:
@@ -1705,11 +1324,11 @@ class MyForm(settingsmixin.SMainWindow):
         return self.unreadCount
 
     def updateSentItemStatusByToAddress(self, toAddress, textToDisplay):
-        for sent in [self.ui.tableWidgetInbox, self.ui.tableWidgetInboxSubscriptions, self.ui.tableWidgetInboxChans]:
+        for sent in [self.tableWidgetInbox, self.tableWidgetInboxSubscriptions, self.tableWidgetInboxChans]:
             treeWidget = self.widgetConvert(sent)
             if self.getCurrentFolder(treeWidget) != "sent":
                 continue
-            if treeWidget in [self.ui.treeWidgetSubscriptions, self.ui.treeWidgetChans] and self.getCurrentAccount(treeWidget) != toAddress:
+            if treeWidget in [self.treeWidgetSubscriptions, self.treeWidgetChans] and self.getCurrentAccount(treeWidget) != toAddress:
                 continue
 
             for i in range(sent.rowCount()):
@@ -1729,7 +1348,7 @@ class MyForm(settingsmixin.SMainWindow):
     def updateSentItemStatusByAckdata(self, ackdata, textToDisplay):
         if type(ackdata) is str:
             ackdata = QtCore.QByteArray(ackdata)
-        for sent in [self.ui.tableWidgetInbox, self.ui.tableWidgetInboxSubscriptions, self.ui.tableWidgetInboxChans]:
+        for sent in [self.tableWidgetInbox, self.tableWidgetInboxSubscriptions, self.tableWidgetInboxChans]:
             treeWidget = self.widgetConvert(sent)
             if self.getCurrentFolder(treeWidget) != "sent":
                 continue
@@ -1754,9 +1373,9 @@ class MyForm(settingsmixin.SMainWindow):
 
     def removeInboxRowByMsgid(self, msgid):  # msgid and inventoryHash are the same thing
         for inbox in ([
-            self.ui.tableWidgetInbox,
-            self.ui.tableWidgetInboxSubscriptions,
-            self.ui.tableWidgetInboxChans]):
+            self.tableWidgetInbox,
+            self.tableWidgetInboxSubscriptions,
+            self.tableWidgetInboxChans]):
             for i in range(inbox.rowCount()):
                 if msgid == str(inbox.item(i, 3).data(QtCore.Qt.UserRole).toPyObject()):
                     self.updateStatusBar(
@@ -1782,32 +1401,32 @@ class MyForm(settingsmixin.SMainWindow):
             os._exit(0)
 
     def rerenderMessagelistFromLabels(self):
-        for messagelist in (self.ui.tableWidgetInbox, self.ui.tableWidgetInboxChans, self.ui.tableWidgetInboxSubscriptions):
+        for messagelist in (self.tableWidgetInbox, self.tableWidgetInboxChans, self.tableWidgetInboxSubscriptions):
             for i in range(messagelist.rowCount()):
                 messagelist.item(i, 1).setLabel()
 
     def rerenderMessagelistToLabels(self):
-        for messagelist in (self.ui.tableWidgetInbox, self.ui.tableWidgetInboxChans, self.ui.tableWidgetInboxSubscriptions):
+        for messagelist in (self.tableWidgetInbox, self.tableWidgetInboxChans, self.tableWidgetInboxSubscriptions):
             for i in range(messagelist.rowCount()):
                 messagelist.item(i, 0).setLabel()
 
     def rerenderAddressBook(self):
         def addRow (address, label, type):
-            self.ui.tableWidgetAddressBook.insertRow(0)
+            self.tableWidgetAddressBook.insertRow(0)
             newItem = Ui_AddressBookWidgetItemLabel(address, unicode(label, 'utf-8'), type)
-            self.ui.tableWidgetAddressBook.setItem(0, 0, newItem)
+            self.tableWidgetAddressBook.setItem(0, 0, newItem)
             newItem = Ui_AddressBookWidgetItemAddress(address, unicode(label, 'utf-8'), type)
-            self.ui.tableWidgetAddressBook.setItem(0, 1, newItem)
+            self.tableWidgetAddressBook.setItem(0, 1, newItem)
 
         oldRows = {}
-        for i in range(self.ui.tableWidgetAddressBook.rowCount()):
-            item = self.ui.tableWidgetAddressBook.item(i, 0)
+        for i in range(self.tableWidgetAddressBook.rowCount()):
+            item = self.tableWidgetAddressBook.item(i, 0)
             oldRows[item.address] = [item.label, item.type, i]
 
-        if self.ui.tableWidgetAddressBook.rowCount() == 0:
-            self.ui.tableWidgetAddressBook.horizontalHeader().setSortIndicator(0, QtCore.Qt.AscendingOrder)
-        if self.ui.tableWidgetAddressBook.isSortingEnabled():
-            self.ui.tableWidgetAddressBook.setSortingEnabled(False)
+        if self.tableWidgetAddressBook.rowCount() == 0:
+            self.tableWidgetAddressBook.horizontalHeader().setSortIndicator(0, QtCore.Qt.AscendingOrder)
+        if self.tableWidgetAddressBook.isSortingEnabled():
+            self.tableWidgetAddressBook.setSortingEnabled(False)
 
         newRows = {}
         # subscriptions
@@ -1833,16 +1452,16 @@ class MyForm(settingsmixin.SMainWindow):
                 completerList.append(unicode(newRows[address][0], encoding="UTF-8") + " <" + address + ">")
                 newRows.pop(address)
             else:
-                self.ui.tableWidgetAddressBook.removeRow(oldRows[address][2])
+                self.tableWidgetAddressBook.removeRow(oldRows[address][2])
         for address in newRows:
             addRow(address, newRows[address][0], newRows[address][1])
             completerList.append(unicode(newRows[address][0], encoding="UTF-8") + " <" + address + ">")
 
         # sort
-        self.ui.tableWidgetAddressBook.sortByColumn(
+        self.tableWidgetAddressBook.sortByColumn(
             0, QtCore.Qt.AscendingOrder)
-        self.ui.tableWidgetAddressBook.setSortingEnabled(True)
-        self.ui.lineEditTo.completer().model().setStringList(completerList)
+        self.tableWidgetAddressBook.setSortingEnabled(True)
+        self.lineEditTo.completer().model().setStringList(completerList)
 
     def rerenderSubscriptions(self):
         self.rerenderTabTreeSubscriptions()
@@ -1855,36 +1474,36 @@ class MyForm(settingsmixin.SMainWindow):
  more work your computer must do to send the message. A Time-To-Live of four or five days is often appropriate."""), QtGui.QMessageBox.Ok)
 
     def click_pushButtonClear(self):
-        self.ui.lineEditSubject.setText("")
-        self.ui.lineEditTo.setText("")
-        self.ui.textEditMessage.setText("")
-        self.ui.comboBoxSendFrom.setCurrentIndex(0)
+        self.lineEditSubject.setText("")
+        self.lineEditTo.setText("")
+        self.textEditMessage.setText("")
+        self.comboBoxSendFrom.setCurrentIndex(0)
 
     def click_pushButtonSend(self):
         encoding = 3 if QtGui.QApplication.queryKeyboardModifiers() & QtCore.Qt.ShiftModifier else 2
 
         self.statusbar.clearMessage()
 
-        if self.ui.tabWidgetSend.currentIndex() == \
-                self.ui.tabWidgetSend.indexOf(self.ui.sendDirect):
+        if self.tabWidgetSend.currentIndex() == \
+                self.tabWidgetSend.indexOf(self.sendDirect):
             # message to specific people
             sendMessageToPeople = True
-            fromAddress = str(self.ui.comboBoxSendFrom.itemData(
-                self.ui.comboBoxSendFrom.currentIndex(),
+            fromAddress = str(self.comboBoxSendFrom.itemData(
+                self.comboBoxSendFrom.currentIndex(),
                 QtCore.Qt.UserRole).toString())
-            toAddresses = str(self.ui.lineEditTo.text().toUtf8())
-            subject = str(self.ui.lineEditSubject.text().toUtf8())
+            toAddresses = str(self.lineEditTo.text().toUtf8())
+            subject = str(self.lineEditSubject.text().toUtf8())
             message = str(
-                self.ui.textEditMessage.document().toPlainText().toUtf8())
+                self.textEditMessage.document().toPlainText().toUtf8())
         else:
             # broadcast message
             sendMessageToPeople = False
-            fromAddress = str(self.ui.comboBoxSendFromBroadcast.itemData(
-                self.ui.comboBoxSendFromBroadcast.currentIndex(),
+            fromAddress = str(self.comboBoxSendFromBroadcast.itemData(
+                self.comboBoxSendFromBroadcast.currentIndex(),
                 QtCore.Qt.UserRole).toString())
-            subject = str(self.ui.lineEditSubjectBroadcast.text().toUtf8())
+            subject = str(self.lineEditSubjectBroadcast.text().toUtf8())
             message = str(
-                self.ui.textEditMessageBroadcast.document().toPlainText().toUtf8())
+                self.textEditMessageBroadcast.document().toPlainText().toUtf8())
         """
         The whole network message must fit in 2^18 bytes.
         Let's assume 500 bytes of overhead. If someone wants to get that
@@ -2070,16 +1689,16 @@ class MyForm(settingsmixin.SMainWindow):
                             toAddress, toLabel, fromAddress, subject, message, ackdata)
                         queues.workerQueue.put(('sendmessage', toAddress))
 
-                        self.ui.comboBoxSendFrom.setCurrentIndex(0)
-                        self.ui.lineEditTo.setText('')
-                        self.ui.lineEditSubject.setText('')
-                        self.ui.textEditMessage.reset()
+                        self.comboBoxSendFrom.setCurrentIndex(0)
+                        self.lineEditTo.setText('')
+                        self.lineEditSubject.setText('')
+                        self.textEditMessage.reset()
                         if self.replyFromTab is not None:
-                            self.ui.tabWidget.setCurrentIndex(self.replyFromTab)
+                            self.tabWidget.setCurrentIndex(self.replyFromTab)
                             self.replyFromTab = None
                         self.updateStatusBar(_translate(
                             "MainWindow", "Message queued."))
-                        # self.ui.tableWidgetInbox.setCurrentCell(0, 0)
+                        # self.tableWidgetInbox.setCurrentCell(0, 0)
                 else:
                     self.updateStatusBar(_translate(
                         "MainWindow", "Your \'To\' field is empty."))
@@ -2125,18 +1744,18 @@ class MyForm(settingsmixin.SMainWindow):
 
                 queues.workerQueue.put(('sendbroadcast', ''))
 
-                self.ui.comboBoxSendFromBroadcast.setCurrentIndex(0)
-                self.ui.lineEditSubjectBroadcast.setText('')
-                self.ui.textEditMessageBroadcast.reset()
-                self.ui.tabWidget.setCurrentIndex(
-                    self.ui.tabWidget.indexOf(self.ui.send)
+                self.comboBoxSendFromBroadcast.setCurrentIndex(0)
+                self.lineEditSubjectBroadcast.setText('')
+                self.textEditMessageBroadcast.reset()
+                self.tabWidget.setCurrentIndex(
+                    self.tabWidget.indexOf(self.send)
                 )
-                self.ui.tableWidgetInboxSubscriptions.setCurrentCell(0, 0)
+                self.tableWidgetInboxSubscriptions.setCurrentCell(0, 0)
                 self.updateStatusBar(_translate(
                     "MainWindow", "Broadcast queued."))
 
     def click_pushButtonLoadFromAddressBook(self):
-        self.ui.tabWidget.setCurrentIndex(5)
+        self.tabWidget.setCurrentIndex(5)
         for i in range(4):
             time.sleep(0.1)
             self.statusbar.clearMessage()
@@ -2148,29 +1767,29 @@ class MyForm(settingsmixin.SMainWindow):
             ))
 
     def click_pushButtonFetchNamecoinID(self):
-        identities = str(self.ui.lineEditTo.text().toUtf8()).split(";")
+        identities = str(self.lineEditTo.text().toUtf8()).split(";")
         err, addr = self.namecoin.query(identities[-1].strip())
         if err is not None:
             self.updateStatusBar(
                 _translate("MainWindow", "Error: %1").arg(err))
         else:
             identities[-1] = addr
-            self.ui.lineEditTo.setText("; ".join(identities))
+            self.lineEditTo.setText("; ".join(identities))
             self.updateStatusBar(_translate(
                 "MainWindow", "Fetched address from namecoin identity."))
 
     def setBroadcastEnablementDependingOnWhetherThisIsAMailingListAddress(self, address):
         # If this is a chan then don't let people broadcast because no one
         # should subscribe to chan addresses.
-        self.ui.tabWidgetSend.setCurrentIndex(
-            self.ui.tabWidgetSend.indexOf(
-                self.ui.sendBroadcast
+        self.tabWidgetSend.setCurrentIndex(
+            self.tabWidgetSend.indexOf(
+                self.sendBroadcast
                 if BMConfigParser().safeGetBoolean(str(address), 'mailinglist')
-                else self.ui.sendDirect
+                else self.sendDirect
             ))
 
     def rerenderComboBoxSendFrom(self):
-        self.ui.comboBoxSendFrom.clear()
+        self.comboBoxSendFrom.clear()
         for addressInKeysFile in getSortedAccounts():
             isEnabled = BMConfigParser().getboolean(
                 addressInKeysFile, 'enabled')  # I realize that this is poor programming practice but I don't care. It's easier for others to read.
@@ -2179,22 +1798,22 @@ class MyForm(settingsmixin.SMainWindow):
                 label = unicode(BMConfigParser().get(addressInKeysFile, 'label'), 'utf-8', 'ignore').strip()
                 if label == "":
                     label = addressInKeysFile
-                self.ui.comboBoxSendFrom.addItem(avatarize(addressInKeysFile), label, addressInKeysFile)
-#        self.ui.comboBoxSendFrom.model().sort(1, Qt.AscendingOrder)
-        for i in range(self.ui.comboBoxSendFrom.count()):
-            address = str(self.ui.comboBoxSendFrom.itemData(
+                self.comboBoxSendFrom.addItem(avatarize(addressInKeysFile), label, addressInKeysFile)
+#        self.comboBoxSendFrom.model().sort(1, Qt.AscendingOrder)
+        for i in range(self.comboBoxSendFrom.count()):
+            address = str(self.comboBoxSendFrom.itemData(
                 i, QtCore.Qt.UserRole).toString())
-            self.ui.comboBoxSendFrom.setItemData(
+            self.comboBoxSendFrom.setItemData(
                 i, AccountColor(address).accountColor(),
                 QtCore.Qt.ForegroundRole)
-        self.ui.comboBoxSendFrom.insertItem(0, '', '')
-        if(self.ui.comboBoxSendFrom.count() == 2):
-            self.ui.comboBoxSendFrom.setCurrentIndex(1)
+        self.comboBoxSendFrom.insertItem(0, '', '')
+        if(self.comboBoxSendFrom.count() == 2):
+            self.comboBoxSendFrom.setCurrentIndex(1)
         else:
-            self.ui.comboBoxSendFrom.setCurrentIndex(0)
+            self.comboBoxSendFrom.setCurrentIndex(0)
 
     def rerenderComboBoxSendFromBroadcast(self):
-        self.ui.comboBoxSendFromBroadcast.clear()
+        self.comboBoxSendFromBroadcast.clear()
         for addressInKeysFile in getSortedAccounts():
             isEnabled = BMConfigParser().getboolean(
                 addressInKeysFile, 'enabled')  # I realize that this is poor programming practice but I don't care. It's easier for others to read.
@@ -2203,18 +1822,18 @@ class MyForm(settingsmixin.SMainWindow):
                 label = unicode(BMConfigParser().get(addressInKeysFile, 'label'), 'utf-8', 'ignore').strip()
                 if label == "":
                     label = addressInKeysFile
-                self.ui.comboBoxSendFromBroadcast.addItem(avatarize(addressInKeysFile), label, addressInKeysFile)
-        for i in range(self.ui.comboBoxSendFromBroadcast.count()):
-            address = str(self.ui.comboBoxSendFromBroadcast.itemData(
+                self.comboBoxSendFromBroadcast.addItem(avatarize(addressInKeysFile), label, addressInKeysFile)
+        for i in range(self.comboBoxSendFromBroadcast.count()):
+            address = str(self.comboBoxSendFromBroadcast.itemData(
                 i, QtCore.Qt.UserRole).toString())
-            self.ui.comboBoxSendFromBroadcast.setItemData(
+            self.comboBoxSendFromBroadcast.setItemData(
                 i, AccountColor(address).accountColor(),
                 QtCore.Qt.ForegroundRole)
-        self.ui.comboBoxSendFromBroadcast.insertItem(0, '', '')
-        if(self.ui.comboBoxSendFromBroadcast.count() == 2):
-            self.ui.comboBoxSendFromBroadcast.setCurrentIndex(1)
+        self.comboBoxSendFromBroadcast.insertItem(0, '', '')
+        if(self.comboBoxSendFromBroadcast.count() == 2):
+            self.comboBoxSendFromBroadcast.setCurrentIndex(1)
         else:
-            self.ui.comboBoxSendFromBroadcast.setCurrentIndex(0)
+            self.comboBoxSendFromBroadcast.setCurrentIndex(0)
 
     # This function is called by the processmsg function when that function
     # receives a message to an address that is acting as a
@@ -2224,16 +1843,20 @@ class MyForm(settingsmixin.SMainWindow):
         acct = accountClass(fromAddress)
         acct.parseMessage(toAddress, fromAddress, subject, message)
         tab = -1
-        for sent in [self.ui.tableWidgetInbox, self.ui.tableWidgetInboxSubscriptions, self.ui.tableWidgetInboxChans]:
+        for sent in [self.tableWidgetInbox, self.tableWidgetInboxSubscriptions, self.tableWidgetInboxChans]:
             tab += 1
             if tab == 1:
                 tab = 2
             treeWidget = self.widgetConvert(sent)
             if self.getCurrentFolder(treeWidget) != "sent":
                 continue
-            if treeWidget == self.ui.treeWidgetYourIdentities and self.getCurrentAccount(treeWidget) not in (fromAddress, None, False):
+            if (
+                treeWidget == self.treeWidgetYourIdentities and
+                self.getCurrentAccount(treeWidget)
+                not in (fromAddress, None, False)
+            ):
                 continue
-            elif treeWidget in [self.ui.treeWidgetSubscriptions, self.ui.treeWidgetChans] and self.getCurrentAccount(treeWidget) != toAddress:
+            elif treeWidget in [self.treeWidgetSubscriptions, self.treeWidgetChans] and self.getCurrentAccount(treeWidget) != toAddress:
                 continue
             elif not helper_search.check_match(toAddress, fromAddress, subject, message, self.getCurrentSearchOption(tab), self.getCurrentSearchLine(tab)):
                 continue
@@ -2250,7 +1873,7 @@ class MyForm(settingsmixin.SMainWindow):
         inbox = self.getAccountMessagelist(acct)
         ret = None
         tab = -1
-        for treeWidget in [self.ui.treeWidgetYourIdentities, self.ui.treeWidgetSubscriptions, self.ui.treeWidgetChans]:
+        for treeWidget in [self.treeWidgetYourIdentities, self.treeWidgetSubscriptions, self.treeWidgetChans]:
             tab += 1
             if tab == 1:
                 tab = 2
@@ -2259,7 +1882,11 @@ class MyForm(settingsmixin.SMainWindow):
                 continue
             if tableWidget == inbox and self.getCurrentAccount(treeWidget) == acct.address and self.getCurrentFolder(treeWidget) in ["inbox", None]:
                 ret = self.addMessageListItemInbox(inbox, "inbox", inventoryHash, toAddress, fromAddress, subject, time.time(), 0)
-            elif treeWidget == self.ui.treeWidgetYourIdentities and self.getCurrentAccount(treeWidget) is None and self.getCurrentFolder(treeWidget) in ["inbox", "new", None]:
+            elif (
+                treeWidget == self.treeWidgetYourIdentities and
+                self.getCurrentAccount(treeWidget) is None and
+                self.getCurrentFolder(treeWidget) in ("inbox", "new", None)
+            ):
                 ret = self.addMessageListItemInbox(tableWidget, "inbox", inventoryHash, toAddress, fromAddress, subject, time.time(), 0)
         if ret is None:
             acct.parseMessage(toAddress, fromAddress, subject, "")
@@ -2374,225 +2001,7 @@ class MyForm(settingsmixin.SMainWindow):
         dialogs.AboutDialog(self).exec_()
 
     def click_actionSettings(self):
-        self.settingsDialogInstance = settingsDialog(self)
-        if self._firstrun:
-            self.settingsDialogInstance.ui.tabWidgetSettings.setCurrentIndex(1)
-        if self.settingsDialogInstance.exec_():
-            if self._firstrun:
-                BMConfigParser().remove_option(
-                    'bitmessagesettings', 'dontconnect')
-            BMConfigParser().set('bitmessagesettings', 'startonlogon', str(
-                self.settingsDialogInstance.ui.checkBoxStartOnLogon.isChecked()))
-            BMConfigParser().set('bitmessagesettings', 'minimizetotray', str(
-                self.settingsDialogInstance.ui.checkBoxMinimizeToTray.isChecked()))
-            BMConfigParser().set('bitmessagesettings', 'trayonclose', str(
-                self.settingsDialogInstance.ui.checkBoxTrayOnClose.isChecked()))
-            BMConfigParser().set('bitmessagesettings', 'hidetrayconnectionnotifications', str(
-                self.settingsDialogInstance.ui.checkBoxHideTrayConnectionNotifications.isChecked()))
-            BMConfigParser().set('bitmessagesettings', 'showtraynotifications', str(
-                self.settingsDialogInstance.ui.checkBoxShowTrayNotifications.isChecked()))
-            BMConfigParser().set('bitmessagesettings', 'startintray', str(
-                self.settingsDialogInstance.ui.checkBoxStartInTray.isChecked()))
-            BMConfigParser().set('bitmessagesettings', 'willinglysendtomobile', str(
-                self.settingsDialogInstance.ui.checkBoxWillinglySendToMobile.isChecked()))
-            BMConfigParser().set('bitmessagesettings', 'useidenticons', str(
-                self.settingsDialogInstance.ui.checkBoxUseIdenticons.isChecked()))
-            BMConfigParser().set('bitmessagesettings', 'replybelow', str(
-                self.settingsDialogInstance.ui.checkBoxReplyBelow.isChecked()))
-                
-            lang = str(self.settingsDialogInstance.ui.languageComboBox.itemData(self.settingsDialogInstance.ui.languageComboBox.currentIndex()).toString())
-            BMConfigParser().set('bitmessagesettings', 'userlocale', lang)
-            change_translation(l10n.getTranslationLanguage())
-            
-            if int(BMConfigParser().get('bitmessagesettings', 'port')) != int(self.settingsDialogInstance.ui.lineEditTCPPort.text()):
-                if not BMConfigParser().safeGetBoolean('bitmessagesettings', 'dontconnect'):
-                    QtGui.QMessageBox.about(self, _translate("MainWindow", "Restart"), _translate(
-                        "MainWindow", "You must restart Bitmessage for the port number change to take effect."))
-                BMConfigParser().set('bitmessagesettings', 'port', str(
-                    self.settingsDialogInstance.ui.lineEditTCPPort.text()))
-            if self.settingsDialogInstance.ui.checkBoxUPnP.isChecked() != BMConfigParser().safeGetBoolean('bitmessagesettings', 'upnp'):
-                BMConfigParser().set('bitmessagesettings', 'upnp', str(self.settingsDialogInstance.ui.checkBoxUPnP.isChecked()))
-                if self.settingsDialogInstance.ui.checkBoxUPnP.isChecked():
-                    import upnp
-                    upnpThread = upnp.uPnPThread()
-                    upnpThread.start()
-            #print 'self.settingsDialogInstance.ui.comboBoxProxyType.currentText()', self.settingsDialogInstance.ui.comboBoxProxyType.currentText()
-            #print 'self.settingsDialogInstance.ui.comboBoxProxyType.currentText())[0:5]', self.settingsDialogInstance.ui.comboBoxProxyType.currentText()[0:5]
-            if BMConfigParser().get('bitmessagesettings', 'socksproxytype') == 'none' and self.settingsDialogInstance.ui.comboBoxProxyType.currentText()[0:5] == 'SOCKS':
-                if shared.statusIconColor != 'red':
-                    QtGui.QMessageBox.about(self, _translate("MainWindow", "Restart"), _translate(
-                        "MainWindow", "Bitmessage will use your proxy from now on but you may want to manually restart Bitmessage now to close existing connections (if any)."))
-            if BMConfigParser().get('bitmessagesettings', 'socksproxytype')[0:5] == 'SOCKS' and self.settingsDialogInstance.ui.comboBoxProxyType.currentText()[0:5] != 'SOCKS':
-                self.statusbar.clearMessage()
-            state.resetNetworkProtocolAvailability() # just in case we changed something in the network connectivity
-            if self.settingsDialogInstance.ui.comboBoxProxyType.currentText()[0:5] == 'SOCKS':
-                BMConfigParser().set('bitmessagesettings', 'socksproxytype', str(
-                    self.settingsDialogInstance.ui.comboBoxProxyType.currentText()))
-            else:
-                BMConfigParser().set('bitmessagesettings', 'socksproxytype', 'none')
-            BMConfigParser().set('bitmessagesettings', 'socksauthentication', str(
-                self.settingsDialogInstance.ui.checkBoxAuthentication.isChecked()))
-            BMConfigParser().set('bitmessagesettings', 'sockshostname', str(
-                self.settingsDialogInstance.ui.lineEditSocksHostname.text()))
-            BMConfigParser().set('bitmessagesettings', 'socksport', str(
-                self.settingsDialogInstance.ui.lineEditSocksPort.text()))
-            BMConfigParser().set('bitmessagesettings', 'socksusername', str(
-                self.settingsDialogInstance.ui.lineEditSocksUsername.text()))
-            BMConfigParser().set('bitmessagesettings', 'sockspassword', str(
-                self.settingsDialogInstance.ui.lineEditSocksPassword.text()))
-            BMConfigParser().set('bitmessagesettings', 'sockslisten', str(
-                self.settingsDialogInstance.ui.checkBoxSocksListen.isChecked()))
-            try:
-                # Rounding to integers just for aesthetics
-                BMConfigParser().set('bitmessagesettings', 'maxdownloadrate', str(
-                    int(float(self.settingsDialogInstance.ui.lineEditMaxDownloadRate.text()))))
-                BMConfigParser().set('bitmessagesettings', 'maxuploadrate', str(
-                    int(float(self.settingsDialogInstance.ui.lineEditMaxUploadRate.text()))))
-            except ValueError:
-                QtGui.QMessageBox.about(self, _translate("MainWindow", "Number needed"), _translate(
-                    "MainWindow", "Your maximum download and upload rate must be numbers. Ignoring what you typed."))
-            else:
-                set_rates(BMConfigParser().safeGetInt("bitmessagesettings", "maxdownloadrate"),
-                    BMConfigParser().safeGetInt("bitmessagesettings", "maxuploadrate"))
-
-            BMConfigParser().set('bitmessagesettings', 'maxoutboundconnections', str(
-                int(float(self.settingsDialogInstance.ui.lineEditMaxOutboundConnections.text()))))
-
-            BMConfigParser().set('bitmessagesettings', 'namecoinrpctype',
-                self.settingsDialogInstance.getNamecoinType())
-            BMConfigParser().set('bitmessagesettings', 'namecoinrpchost', str(
-                self.settingsDialogInstance.ui.lineEditNamecoinHost.text()))
-            BMConfigParser().set('bitmessagesettings', 'namecoinrpcport', str(
-                self.settingsDialogInstance.ui.lineEditNamecoinPort.text()))
-            BMConfigParser().set('bitmessagesettings', 'namecoinrpcuser', str(
-                self.settingsDialogInstance.ui.lineEditNamecoinUser.text()))
-            BMConfigParser().set('bitmessagesettings', 'namecoinrpcpassword', str(
-                self.settingsDialogInstance.ui.lineEditNamecoinPassword.text()))
-            self.resetNamecoinConnection()
-
-            # Demanded difficulty tab
-            if float(self.settingsDialogInstance.ui.lineEditTotalDifficulty.text()) >= 1:
-                BMConfigParser().set('bitmessagesettings', 'defaultnoncetrialsperbyte', str(int(float(
-                    self.settingsDialogInstance.ui.lineEditTotalDifficulty.text()) * defaults.networkDefaultProofOfWorkNonceTrialsPerByte)))
-            if float(self.settingsDialogInstance.ui.lineEditSmallMessageDifficulty.text()) >= 1:
-                BMConfigParser().set('bitmessagesettings', 'defaultpayloadlengthextrabytes', str(int(float(
-                    self.settingsDialogInstance.ui.lineEditSmallMessageDifficulty.text()) * defaults.networkDefaultPayloadLengthExtraBytes)))
-
-            if self.settingsDialogInstance.ui.comboBoxOpenCL.currentText().toUtf8() != BMConfigParser().safeGet("bitmessagesettings", "opencl"):
-                BMConfigParser().set('bitmessagesettings', 'opencl', str(self.settingsDialogInstance.ui.comboBoxOpenCL.currentText()))
-                queues.workerQueue.put(('resetPoW', ''))
-
-            acceptableDifficultyChanged = False
-            
-            if float(self.settingsDialogInstance.ui.lineEditMaxAcceptableTotalDifficulty.text()) >= 1 or float(self.settingsDialogInstance.ui.lineEditMaxAcceptableTotalDifficulty.text()) == 0:
-                if BMConfigParser().get('bitmessagesettings','maxacceptablenoncetrialsperbyte') != str(int(float(
-                    self.settingsDialogInstance.ui.lineEditMaxAcceptableTotalDifficulty.text()) * defaults.networkDefaultProofOfWorkNonceTrialsPerByte)):
-                    # the user changed the max acceptable total difficulty
-                    acceptableDifficultyChanged = True
-                    BMConfigParser().set('bitmessagesettings', 'maxacceptablenoncetrialsperbyte', str(int(float(
-                        self.settingsDialogInstance.ui.lineEditMaxAcceptableTotalDifficulty.text()) * defaults.networkDefaultProofOfWorkNonceTrialsPerByte)))
-            if float(self.settingsDialogInstance.ui.lineEditMaxAcceptableSmallMessageDifficulty.text()) >= 1 or float(self.settingsDialogInstance.ui.lineEditMaxAcceptableSmallMessageDifficulty.text()) == 0:
-                if BMConfigParser().get('bitmessagesettings','maxacceptablepayloadlengthextrabytes') != str(int(float(
-                    self.settingsDialogInstance.ui.lineEditMaxAcceptableSmallMessageDifficulty.text()) * defaults.networkDefaultPayloadLengthExtraBytes)):
-                    # the user changed the max acceptable small message difficulty
-                    acceptableDifficultyChanged = True
-                    BMConfigParser().set('bitmessagesettings', 'maxacceptablepayloadlengthextrabytes', str(int(float(
-                        self.settingsDialogInstance.ui.lineEditMaxAcceptableSmallMessageDifficulty.text()) * defaults.networkDefaultPayloadLengthExtraBytes)))
-            if acceptableDifficultyChanged:
-                # It might now be possible to send msgs which were previously marked as toodifficult. 
-                # Let us change them to 'msgqueued'. The singleWorker will try to send them and will again
-                # mark them as toodifficult if the receiver's required difficulty is still higher than
-                # we are willing to do.
-                sqlExecute('''UPDATE sent SET status='msgqueued' WHERE status='toodifficult' ''')
-                queues.workerQueue.put(('sendmessage', ''))
-            
-            #start:UI setting to stop trying to send messages after X days/months
-            # I'm open to changing this UI to something else if someone has a better idea.
-            if ((self.settingsDialogInstance.ui.lineEditDays.text()=='') and (self.settingsDialogInstance.ui.lineEditMonths.text()=='')):#We need to handle this special case. Bitmessage has its default behavior. The input is blank/blank
-                BMConfigParser().set('bitmessagesettings', 'stopresendingafterxdays', '')
-                BMConfigParser().set('bitmessagesettings', 'stopresendingafterxmonths', '')
-                shared.maximumLengthOfTimeToBotherResendingMessages = float('inf')
-            try:
-                float(self.settingsDialogInstance.ui.lineEditDays.text())
-                lineEditDaysIsValidFloat = True
-            except:
-                lineEditDaysIsValidFloat = False
-            try:
-                float(self.settingsDialogInstance.ui.lineEditMonths.text())
-                lineEditMonthsIsValidFloat = True
-            except:
-                lineEditMonthsIsValidFloat = False
-            if lineEditDaysIsValidFloat and not lineEditMonthsIsValidFloat:
-                self.settingsDialogInstance.ui.lineEditMonths.setText("0")
-            if lineEditMonthsIsValidFloat and not lineEditDaysIsValidFloat:
-                self.settingsDialogInstance.ui.lineEditDays.setText("0")
-            if lineEditDaysIsValidFloat or lineEditMonthsIsValidFloat:
-                if (float(self.settingsDialogInstance.ui.lineEditDays.text()) >=0 and float(self.settingsDialogInstance.ui.lineEditMonths.text()) >=0):
-                    shared.maximumLengthOfTimeToBotherResendingMessages = (float(str(self.settingsDialogInstance.ui.lineEditDays.text())) * 24 * 60 * 60) + (float(str(self.settingsDialogInstance.ui.lineEditMonths.text())) * (60 * 60 * 24 *365)/12)
-                    if shared.maximumLengthOfTimeToBotherResendingMessages < 432000: # If the time period is less than 5 hours, we give zero values to all fields. No message will be sent again.
-                        QtGui.QMessageBox.about(self, _translate("MainWindow", "Will not resend ever"), _translate(
-                            "MainWindow", "Note that the time limit you entered is less than the amount of time Bitmessage waits for the first resend attempt therefore your messages will never be resent."))
-                        BMConfigParser().set('bitmessagesettings', 'stopresendingafterxdays', '0')
-                        BMConfigParser().set('bitmessagesettings', 'stopresendingafterxmonths', '0')
-                        shared.maximumLengthOfTimeToBotherResendingMessages = 0
-                    else:
-                        BMConfigParser().set('bitmessagesettings', 'stopresendingafterxdays', str(float(
-                        self.settingsDialogInstance.ui.lineEditDays.text())))
-                        BMConfigParser().set('bitmessagesettings', 'stopresendingafterxmonths', str(float(
-                        self.settingsDialogInstance.ui.lineEditMonths.text())))
-
-            BMConfigParser().save()
-
-            if 'win32' in sys.platform or 'win64' in sys.platform:
-            # Auto-startup for Windows
-                RUN_PATH = "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run"
-                self.settings = QtCore.QSettings(RUN_PATH, QtCore.QSettings.NativeFormat)
-                if BMConfigParser().getboolean('bitmessagesettings', 'startonlogon'):
-                    self.settings.setValue("PyBitmessage", sys.argv[0])
-                else:
-                    self.settings.remove("PyBitmessage")
-            elif 'darwin' in sys.platform:
-                # startup for mac
-                pass
-            elif 'linux' in sys.platform:
-                # startup for linux
-                pass
-
-            if state.appdata != paths.lookupExeFolder() and self.settingsDialogInstance.ui.checkBoxPortableMode.isChecked():  # If we are NOT using portable mode now but the user selected that we should...
-                # Write the keys.dat file to disk in the new location
-                sqlStoredProcedure('movemessagstoprog')
-                with open(paths.lookupExeFolder() + 'keys.dat', 'wb') as configfile:
-                    BMConfigParser().write(configfile)
-                # Write the knownnodes.dat file to disk in the new location
-                knownnodes.saveKnownNodes(paths.lookupExeFolder())
-                os.remove(state.appdata + 'keys.dat')
-                os.remove(state.appdata + 'knownnodes.dat')
-                previousAppdataLocation = state.appdata
-                state.appdata = paths.lookupExeFolder()
-                debug.resetLogging()
-                try:
-                    os.remove(previousAppdataLocation + 'debug.log')
-                    os.remove(previousAppdataLocation + 'debug.log.1')
-                except:
-                    pass
-
-            if state.appdata == paths.lookupExeFolder() and not self.settingsDialogInstance.ui.checkBoxPortableMode.isChecked():  # If we ARE using portable mode now but the user selected that we shouldn't...
-                state.appdata = paths.lookupAppdataFolder()
-                if not os.path.exists(state.appdata):
-                    os.makedirs(state.appdata)
-                sqlStoredProcedure('movemessagstoappdata')
-                # Write the keys.dat file to disk in the new location
-                BMConfigParser().save()
-                # Write the knownnodes.dat file to disk in the new location
-                knownnodes.saveKnownNodes(state.appdata)
-                os.remove(paths.lookupExeFolder() + 'keys.dat')
-                os.remove(paths.lookupExeFolder() + 'knownnodes.dat')
-                debug.resetLogging()
-                try:
-                    os.remove(paths.lookupExeFolder() + 'debug.log')
-                    os.remove(paths.lookupExeFolder() + 'debug.log.1')
-                except:
-                    pass
+        dialogs.SettingsDialog(self, firstrun=self._firstrun).exec_()
 
     def on_action_SpecialAddressBehaviorDialog(self):
         dialogs.SpecialAddressBehaviorDialog(self, BMConfigParser())
@@ -2608,24 +2017,24 @@ class MyForm(settingsmixin.SMainWindow):
 
         # Only settings remain here
         acct.settings()
-        for i in range(self.ui.comboBoxSendFrom.count()):
-            if str(self.ui.comboBoxSendFrom.itemData(i).toPyObject()) \
+        for i in range(self.comboBoxSendFrom.count()):
+            if str(self.comboBoxSendFrom.itemData(i).toPyObject()) \
                     == acct.fromAddress:
-                self.ui.comboBoxSendFrom.setCurrentIndex(i)
+                self.comboBoxSendFrom.setCurrentIndex(i)
                 break
         else:
-            self.ui.comboBoxSendFrom.setCurrentIndex(0)
+            self.comboBoxSendFrom.setCurrentIndex(0)
 
-        self.ui.lineEditTo.setText(acct.toAddress)
-        self.ui.lineEditSubject.setText(acct.subject)
-        self.ui.textEditMessage.setText(acct.message)
-        self.ui.tabWidgetSend.setCurrentIndex(
-            self.ui.tabWidgetSend.indexOf(self.ui.sendDirect)
+        self.lineEditTo.setText(acct.toAddress)
+        self.lineEditSubject.setText(acct.subject)
+        self.textEditMessage.setText(acct.message)
+        self.tabWidgetSend.setCurrentIndex(
+            self.tabWidgetSend.indexOf(self.sendDirect)
         )
-        self.ui.tabWidget.setCurrentIndex(
-            self.ui.tabWidget.indexOf(self.ui.send)
+        self.tabWidget.setCurrentIndex(
+            self.tabWidget.indexOf(self.send)
         )
-        self.ui.textEditMessage.setFocus()
+        self.textEditMessage.setFocus()
 
     def on_action_MarkAllRead(self):
         if QtGui.QMessageBox.question(
@@ -2688,9 +2097,9 @@ class MyForm(settingsmixin.SMainWindow):
         BMConfigParser().set(
             'bitmessagesettings', 'dontconnect', str(dontconnect_option))
         BMConfigParser().save()
-        self.ui.updateNetworkSwitchMenuLabel(dontconnect_option)
+        self.updateNetworkSwitchMenuLabel(dontconnect_option)
 
-        self.ui.pushButtonFetchNamecoinID.setHidden(
+        self.pushButtonFetchNamecoinID.setHidden(
             dontconnect_option or self.namecoin.test()[0] == 'failed'
         )
 
@@ -2860,7 +2269,7 @@ class MyForm(settingsmixin.SMainWindow):
             QtCore.QEventLoop.AllEvents, 1000
         )
         self.saveSettings()
-        for attr, obj in self.ui.__dict__.iteritems():
+        for attr, obj in self.__dict__.iteritems():
             if hasattr(obj, "__class__") \
                     and isinstance(obj, settingsmixin.SettingsMixin):
                 saveMethod = getattr(obj, "saveSettings", None)
@@ -2873,6 +2282,7 @@ class MyForm(settingsmixin.SMainWindow):
             QtCore.QEventLoop.AllEvents, 1000
         )
         shutdown.doCleanShutdown()
+
         self.updateStatusBar(_translate(
             "MainWindow", "Stopping notifications... %1%").arg(90))
         self.tray.hide()
@@ -2881,20 +2291,21 @@ class MyForm(settingsmixin.SMainWindow):
             "MainWindow", "Shutdown imminent... %1%").arg(100))
 
         logger.info("Shutdown complete")
-        super(MyForm, myapp).close()
-        # return
-        sys.exit()
+        self.close()
+        # FIXME: rewrite loops with timer instead
+        if self.wait:
+            self.destroy()
+        app.quit()
 
-    # window close event
     def closeEvent(self, event):
-        self.appIndicatorHide()
-
+        """window close event"""
+        event.ignore()
         trayonclose = BMConfigParser().safeGetBoolean(
             'bitmessagesettings', 'trayonclose')
-
-        event.ignore()
-        if not trayonclose:
-            # quit the application
+        if trayonclose:
+            self.appIndicatorHide()
+        else:
+            # custom quit method
             self.quit()
 
     def on_action_InboxMessageForceHtml(self):
@@ -2988,7 +2399,7 @@ class MyForm(settingsmixin.SMainWindow):
                 currentInboxRow = messagelist.currentRow()
                 address = messagelist.item(
                     currentInboxRow, 0).address
-        for box in [self.ui.comboBoxSendFrom, self.ui.comboBoxSendFromBroadcast]:
+        for box in [self.comboBoxSendFrom, self.comboBoxSendFromBroadcast]:
             listOfAddressesInComboBoxSendFrom = [str(box.itemData(i).toPyObject()) for i in range(box.count())]
             if address in listOfAddressesInComboBoxSendFrom:
                 currentIndex = listOfAddressesInComboBoxSendFrom.index(address)
@@ -3008,7 +2419,7 @@ class MyForm(settingsmixin.SMainWindow):
             replyType = self.REPLY_TYPE_SENDER
         
         # save this to return back after reply is done
-        self.replyFromTab = self.ui.tabWidget.currentIndex()
+        self.replyFromTab = self.tabWidget.currentIndex()
         
         currentInboxRow = tableWidget.currentRow()
         toAddressAtCurrentInboxRow = tableWidget.item(
@@ -3025,13 +2436,13 @@ class MyForm(settingsmixin.SMainWindow):
                 messageAtCurrentInboxRow, = row
         acct.parseMessage(toAddressAtCurrentInboxRow, fromAddressAtCurrentInboxRow, tableWidget.item(currentInboxRow, 2).subject, messageAtCurrentInboxRow)
         widget = {
-            'subject': self.ui.lineEditSubject,
-            'from': self.ui.comboBoxSendFrom,
-            'message': self.ui.textEditMessage
+            'subject': self.lineEditSubject,
+            'from': self.comboBoxSendFrom,
+            'message': self.textEditMessage
         }
         if toAddressAtCurrentInboxRow == str_broadcast_subscribers:
-            self.ui.tabWidgetSend.setCurrentIndex(
-                self.ui.tabWidgetSend.indexOf(self.ui.sendDirect)
+            self.tabWidgetSend.setCurrentIndex(
+                self.tabWidgetSend.indexOf(self.sendDirect)
             )
 #            toAddressAtCurrentInboxRow = fromAddressAtCurrentInboxRow
         elif not BMConfigParser().has_section(toAddressAtCurrentInboxRow):
@@ -3042,30 +2453,30 @@ class MyForm(settingsmixin.SMainWindow):
                 "MainWindow", "Error: The address from which you are trying to send is disabled. You\'ll have to enable it on the \'Your Identities\' tab before using it."), QtGui.QMessageBox.Ok)
         else:
             self.setBroadcastEnablementDependingOnWhetherThisIsAMailingListAddress(toAddressAtCurrentInboxRow)
-            broadcast_tab_index = self.ui.tabWidgetSend.indexOf(
-                self.ui.sendBroadcast
+            broadcast_tab_index = self.tabWidgetSend.indexOf(
+                self.sendBroadcast
             )
-            if self.ui.tabWidgetSend.currentIndex() == broadcast_tab_index:
+            if self.tabWidgetSend.currentIndex() == broadcast_tab_index:
                 widget = {
-                    'subject': self.ui.lineEditSubjectBroadcast,
-                    'from': self.ui.comboBoxSendFromBroadcast,
-                    'message': self.ui.textEditMessageBroadcast
+                    'subject': self.lineEditSubjectBroadcast,
+                    'from': self.comboBoxSendFromBroadcast,
+                    'message': self.textEditMessageBroadcast
                 }
-                self.ui.tabWidgetSend.setCurrentIndex(broadcast_tab_index)
+                self.tabWidgetSend.setCurrentIndex(broadcast_tab_index)
                 toAddressAtCurrentInboxRow = fromAddressAtCurrentInboxRow
         if fromAddressAtCurrentInboxRow == tableWidget.item(currentInboxRow, 1).label or (
             isinstance(acct, GatewayAccount) and fromAddressAtCurrentInboxRow == acct.relayAddress):
-            self.ui.lineEditTo.setText(str(acct.fromAddress))
+            self.lineEditTo.setText(str(acct.fromAddress))
         else:
-            self.ui.lineEditTo.setText(tableWidget.item(currentInboxRow, 1).label + " <" + str(acct.fromAddress) + ">")
+            self.lineEditTo.setText(tableWidget.item(currentInboxRow, 1).label + " <" + str(acct.fromAddress) + ">")
         
         # If the previous message was to a chan then we should send our reply to the chan rather than to the particular person who sent the message.
         if acct.type == AccountMixin.CHAN and replyType == self.REPLY_TYPE_CHAN:
             logger.debug('original sent to a chan. Setting the to address in the reply to the chan address.')
             if toAddressAtCurrentInboxRow == tableWidget.item(currentInboxRow, 0).label:
-                self.ui.lineEditTo.setText(str(toAddressAtCurrentInboxRow))
+                self.lineEditTo.setText(str(toAddressAtCurrentInboxRow))
             else:
-                self.ui.lineEditTo.setText(tableWidget.item(currentInboxRow, 0).label + " <" + str(acct.toAddress) + ">")
+                self.lineEditTo.setText(tableWidget.item(currentInboxRow, 0).label + " <" + str(acct.toAddress) + ">")
         
         self.setSendFromComboBox(toAddressAtCurrentInboxRow)
         
@@ -3075,8 +2486,8 @@ class MyForm(settingsmixin.SMainWindow):
             widget['subject'].setText(tableWidget.item(currentInboxRow, 2).label)
         else:
             widget['subject'].setText('Re: ' + tableWidget.item(currentInboxRow, 2).label)
-        self.ui.tabWidget.setCurrentIndex(
-            self.ui.tabWidget.indexOf(self.ui.send)
+        self.tabWidget.setCurrentIndex(
+            self.tabWidget.indexOf(self.send)
         )
         widget['message'].setFocus()
 
@@ -3088,8 +2499,8 @@ class MyForm(settingsmixin.SMainWindow):
         # tableWidget.item(currentRow,1).data(Qt.UserRole).toPyObject()
         addressAtCurrentInboxRow = tableWidget.item(
             currentInboxRow, 1).data(QtCore.Qt.UserRole)
-        self.ui.tabWidget.setCurrentIndex(
-            self.ui.tabWidget.indexOf(self.ui.send)
+        self.tabWidget.setCurrentIndex(
+            self.tabWidget.indexOf(self.send)
         )
         self.click_pushButtonAddAddressBook(
             dialogs.AddAddressDialog(self, addressAtCurrentInboxRow))
@@ -3112,7 +2523,7 @@ class MyForm(settingsmixin.SMainWindow):
             sqlExecute('''INSERT INTO blacklist VALUES (?,?, ?)''',
                        label,
                        addressAtCurrentInboxRow, True)
-            self.ui.blackwhitelist.rerenderBlackWhiteList()
+            self.blackwhitelist.rerenderBlackWhiteList()
             self.updateStatusBar(_translate(
                 "MainWindow",
                 "Entry added to the blacklist. Edit the label to your liking.")
@@ -3125,7 +2536,7 @@ class MyForm(settingsmixin.SMainWindow):
 
     def deleteRowFromMessagelist(self, row = None, inventoryHash = None, ackData = None, messageLists = None):
         if messageLists is None:
-            messageLists = (self.ui.tableWidgetInbox, self.ui.tableWidgetInboxChans, self.ui.tableWidgetInboxSubscriptions)
+            messageLists = (self.tableWidgetInbox, self.tableWidgetInboxChans, self.tableWidgetInboxSubscriptions)
         elif type(messageLists) not in (list, tuple):
             messageLists = (messageLists)
         for messageList in messageLists:
@@ -3262,12 +2673,12 @@ class MyForm(settingsmixin.SMainWindow):
             self.updateStatusBar(_translate(
                 "MainWindow", "Moved items to trash."))
 
-        self.ui.tableWidgetInbox.selectRow(
+        self.tableWidgetInbox.selectRow(
             currentRow if currentRow == 0 else currentRow - 1)
 
     def on_action_ForceSend(self):
-        currentRow = self.ui.tableWidgetInbox.currentRow()
-        addressAtCurrentRow = self.ui.tableWidgetInbox.item(
+        currentRow = self.tableWidgetInbox.currentRow()
+        addressAtCurrentRow = self.tableWidgetInbox.item(
             currentRow, 0).data(QtCore.Qt.UserRole)
         toRipe = decodeAddress(addressAtCurrentRow)[3]
         sqlExecute(
@@ -3281,8 +2692,8 @@ class MyForm(settingsmixin.SMainWindow):
         queues.workerQueue.put(('sendmessage', ''))
 
     def on_action_SentClipboard(self):
-        currentRow = self.ui.tableWidgetInbox.currentRow()
-        addressAtCurrentRow = self.ui.tableWidgetInbox.item(
+        currentRow = self.tableWidgetInbox.currentRow()
+        addressAtCurrentRow = self.tableWidgetInbox.item(
             currentRow, 0).data(QtCore.Qt.UserRole)
         clipboard = QtGui.QApplication.clipboard()
         clipboard.setText(str(addressAtCurrentRow))
@@ -3292,27 +2703,27 @@ class MyForm(settingsmixin.SMainWindow):
         self.click_pushButtonAddAddressBook()
 
     def on_action_AddressBookDelete(self):
-        while self.ui.tableWidgetAddressBook.selectedIndexes() != []:
-            currentRow = self.ui.tableWidgetAddressBook.selectedIndexes()[
+        while self.tableWidgetAddressBook.selectedIndexes() != []:
+            currentRow = self.tableWidgetAddressBook.selectedIndexes()[
                 0].row()
-            labelAtCurrentRow = self.ui.tableWidgetAddressBook.item(
+            labelAtCurrentRow = self.tableWidgetAddressBook.item(
                 currentRow, 0).text().toUtf8()
-            addressAtCurrentRow = self.ui.tableWidgetAddressBook.item(
+            addressAtCurrentRow = self.tableWidgetAddressBook.item(
                 currentRow, 1).text()
             sqlExecute('''DELETE FROM addressbook WHERE label=? AND address=?''',
                        str(labelAtCurrentRow), str(addressAtCurrentRow))
-            self.ui.tableWidgetAddressBook.removeRow(currentRow)
+            self.tableWidgetAddressBook.removeRow(currentRow)
             self.rerenderMessagelistFromLabels()
             self.rerenderMessagelistToLabels()
 
     def on_action_AddressBookClipboard(self):
         fullStringOfAddresses = ''
         listOfSelectedRows = {}
-        for i in range(len(self.ui.tableWidgetAddressBook.selectedIndexes())):
+        for i in range(len(self.tableWidgetAddressBook.selectedIndexes())):
             listOfSelectedRows[
-                self.ui.tableWidgetAddressBook.selectedIndexes()[i].row()] = 0
+                self.tableWidgetAddressBook.selectedIndexes()[i].row()] = 0
         for currentRow in listOfSelectedRows:
-            addressAtCurrentRow = self.ui.tableWidgetAddressBook.item(
+            addressAtCurrentRow = self.tableWidgetAddressBook.item(
                 currentRow, 1).text()
             if fullStringOfAddresses == '':
                 fullStringOfAddresses = addressAtCurrentRow
@@ -3323,35 +2734,35 @@ class MyForm(settingsmixin.SMainWindow):
 
     def on_action_AddressBookSend(self):
         listOfSelectedRows = {}
-        for i in range(len(self.ui.tableWidgetAddressBook.selectedIndexes())):
+        for i in range(len(self.tableWidgetAddressBook.selectedIndexes())):
             listOfSelectedRows[
-                self.ui.tableWidgetAddressBook.selectedIndexes()[i].row()] = 0
+                self.tableWidgetAddressBook.selectedIndexes()[i].row()] = 0
         for currentRow in listOfSelectedRows:
-            addressAtCurrentRow = self.ui.tableWidgetAddressBook.item(
+            addressAtCurrentRow = self.tableWidgetAddressBook.item(
                 currentRow, 0).address
-            labelAtCurrentRow = self.ui.tableWidgetAddressBook.item(
+            labelAtCurrentRow = self.tableWidgetAddressBook.item(
                 currentRow, 0).label
             stringToAdd = labelAtCurrentRow + " <" + addressAtCurrentRow + ">"
-            if self.ui.lineEditTo.text() == '':
-                self.ui.lineEditTo.setText(stringToAdd)
+            if self.lineEditTo.text() == '':
+                self.lineEditTo.setText(stringToAdd)
             else:
-                self.ui.lineEditTo.setText(unicode(
-                    self.ui.lineEditTo.text().toUtf8(), encoding="UTF-8") + '; ' + stringToAdd)
+                self.lineEditTo.setText(unicode(
+                    self.lineEditTo.text().toUtf8(), encoding="UTF-8") + '; ' + stringToAdd)
         if listOfSelectedRows == {}:
             self.updateStatusBar(_translate(
                 "MainWindow", "No addresses selected."))
         else:
             self.statusbar.clearMessage()
-            self.ui.tabWidget.setCurrentIndex(
-                self.ui.tabWidget.indexOf(self.ui.send)
+            self.tabWidget.setCurrentIndex(
+                self.tabWidget.indexOf(self.send)
             )
 
     def on_action_AddressBookSubscribe(self):
         listOfSelectedRows = {}
-        for i in range(len(self.ui.tableWidgetAddressBook.selectedIndexes())):
-            listOfSelectedRows[self.ui.tableWidgetAddressBook.selectedIndexes()[i].row()] = 0
+        for i in range(len(self.tableWidgetAddressBook.selectedIndexes())):
+            listOfSelectedRows[self.tableWidgetAddressBook.selectedIndexes()[i].row()] = 0
         for currentRow in listOfSelectedRows:
-            addressAtCurrentRow = str(self.ui.tableWidgetAddressBook.item(currentRow,1).text())
+            addressAtCurrentRow = str(self.tableWidgetAddressBook.item(currentRow,1).text())
             # Then subscribe to it... provided it's not already in the address book
             if shared.isAddressInMySubscriptionsList(addressAtCurrentRow):
                 self.updateStatusBar(_translate(
@@ -3360,10 +2771,10 @@ class MyForm(settingsmixin.SMainWindow):
                     " subscriptions twice. Perhaps rename the existing"
                     " one if you want."))
                 continue
-            labelAtCurrentRow = self.ui.tableWidgetAddressBook.item(currentRow,0).text().toUtf8()
+            labelAtCurrentRow = self.tableWidgetAddressBook.item(currentRow,0).text().toUtf8()
             self.addSubscription(addressAtCurrentRow, labelAtCurrentRow)
-            self.ui.tabWidget.setCurrentIndex(
-                self.ui.tabWidget.indexOf(self.ui.subscriptions)
+            self.tabWidget.setCurrentIndex(
+                self.tabWidget.indexOf(self.subscriptions)
             )
 
     def on_context_menuAddressBook(self, point):
@@ -3376,9 +2787,9 @@ class MyForm(settingsmixin.SMainWindow):
         self.popMenuAddressBook.addSeparator()
         self.popMenuAddressBook.addAction(self.actionAddressBookNew)
         normal = True
-        for row in self.ui.tableWidgetAddressBook.selectedIndexes():
+        for row in self.tableWidgetAddressBook.selectedIndexes():
             currentRow = row.row()
-            type = self.ui.tableWidgetAddressBook.item(
+            type = self.tableWidgetAddressBook.item(
                 currentRow, 0).type
             if type != AccountMixin.NORMAL:
                 normal = False
@@ -3386,7 +2797,7 @@ class MyForm(settingsmixin.SMainWindow):
             # only if all selected addressbook items are normal, allow delete
             self.popMenuAddressBook.addAction(self.actionAddressBookDelete)
         self.popMenuAddressBook.exec_(
-            self.ui.tableWidgetAddressBook.mapToGlobal(point))
+            self.tableWidgetAddressBook.mapToGlobal(point))
 
     # Group of functions for the Subscriptions dialog box
     def on_action_SubscriptionsNew(self):
@@ -3461,31 +2872,31 @@ class MyForm(settingsmixin.SMainWindow):
             self.popMenuSubscriptions.addSeparator()
         self.popMenuSubscriptions.addAction(self.actionMarkAllRead)
         self.popMenuSubscriptions.exec_(
-            self.ui.treeWidgetSubscriptions.mapToGlobal(point))
+            self.treeWidgetSubscriptions.mapToGlobal(point))
 
     def widgetConvert (self, widget):
-        if widget == self.ui.tableWidgetInbox:
-            return self.ui.treeWidgetYourIdentities
-        elif widget == self.ui.tableWidgetInboxSubscriptions:
-            return self.ui.treeWidgetSubscriptions
-        elif widget == self.ui.tableWidgetInboxChans:
-            return self.ui.treeWidgetChans
-        elif widget == self.ui.treeWidgetYourIdentities:
-            return self.ui.tableWidgetInbox
-        elif widget == self.ui.treeWidgetSubscriptions:
-            return self.ui.tableWidgetInboxSubscriptions
-        elif widget == self.ui.treeWidgetChans:
-            return self.ui.tableWidgetInboxChans
+        if widget == self.tableWidgetInbox:
+            return self.treeWidgetYourIdentities
+        elif widget == self.tableWidgetInboxSubscriptions:
+            return self.treeWidgetSubscriptions
+        elif widget == self.tableWidgetInboxChans:
+            return self.treeWidgetChans
+        elif widget == self.treeWidgetYourIdentities:
+            return self.tableWidgetInbox
+        elif widget == self.treeWidgetSubscriptions:
+            return self.tableWidgetInboxSubscriptions
+        elif widget == self.treeWidgetChans:
+            return self.tableWidgetInboxChans
         else:
             return None
 
     def getCurrentTreeWidget(self):
-        currentIndex = self.ui.tabWidget.currentIndex();
+        currentIndex = self.tabWidget.currentIndex();
         treeWidgetList = [
-            self.ui.treeWidgetYourIdentities,
+            self.treeWidgetYourIdentities,
             False,
-            self.ui.treeWidgetSubscriptions,
-            self.ui.treeWidgetChans
+            self.treeWidgetSubscriptions,
+            self.treeWidgetChans
         ]
         if currentIndex >= 0 and currentIndex < len(treeWidgetList):
             return treeWidgetList[currentIndex]
@@ -3495,21 +2906,21 @@ class MyForm(settingsmixin.SMainWindow):
     def getAccountTreeWidget(self, account):
         try:
             if account.type == AccountMixin.CHAN:
-                return self.ui.treeWidgetChans
+                return self.treeWidgetChans
             elif account.type == AccountMixin.SUBSCRIPTION:
-                return self.ui.treeWidgetSubscriptions
+                return self.treeWidgetSubscriptions
             else:
-                return self.ui.treeWidgetYourIdentities
+                return self.treeWidgetYourIdentities
         except:
-            return self.ui.treeWidgetYourIdentities
+            return self.treeWidgetYourIdentities
 
     def getCurrentMessagelist(self):
-        currentIndex = self.ui.tabWidget.currentIndex();
+        currentIndex = self.tabWidget.currentIndex();
         messagelistList = [
-            self.ui.tableWidgetInbox,
+            self.tableWidgetInbox,
             False,
-            self.ui.tableWidgetInboxSubscriptions,
-            self.ui.tableWidgetInboxChans,
+            self.tableWidgetInboxSubscriptions,
+            self.tableWidgetInboxChans,
         ]
         if currentIndex >= 0 and currentIndex < len(messagelistList):
             return messagelistList[currentIndex]
@@ -3519,13 +2930,13 @@ class MyForm(settingsmixin.SMainWindow):
     def getAccountMessagelist(self, account):
         try:
             if account.type == AccountMixin.CHAN:
-                return self.ui.tableWidgetInboxChans
+                return self.tableWidgetInboxChans
             elif account.type == AccountMixin.SUBSCRIPTION:
-                return self.ui.tableWidgetInboxSubscriptions
+                return self.tableWidgetInboxSubscriptions
             else:
-                return self.ui.tableWidgetInbox
+                return self.tableWidgetInbox
         except:
-            return self.ui.tableWidgetInbox
+            return self.tableWidgetInbox
 
     def getCurrentMessageId(self):
         messagelist = self.getCurrentMessagelist()
@@ -3539,12 +2950,12 @@ class MyForm(settingsmixin.SMainWindow):
         return False
 
     def getCurrentMessageTextedit(self):
-        currentIndex = self.ui.tabWidget.currentIndex()
+        currentIndex = self.tabWidget.currentIndex()
         messagelistList = [
-            self.ui.textEditInboxMessage,
+            self.textEditInboxMessage,
             False,
-            self.ui.textEditInboxMessageSubscriptions,
-            self.ui.textEditInboxMessageChans,
+            self.textEditInboxMessageSubscriptions,
+            self.textEditInboxMessageChans,
         ]
         if currentIndex >= 0 and currentIndex < len(messagelistList):
             return messagelistList[currentIndex]
@@ -3554,22 +2965,22 @@ class MyForm(settingsmixin.SMainWindow):
     def getAccountTextedit(self, account):
         try:
             if account.type == AccountMixin.CHAN:
-                return self.ui.textEditInboxMessageChans
+                return self.textEditInboxMessageChans
             elif account.type == AccountMixin.SUBSCRIPTION:
-                return self.ui.textEditInboxSubscriptions
+                return self.textEditInboxSubscriptions
             else:
-                return self.ui.textEditInboxMessage
+                return self.textEditInboxMessage
         except:
-            return self.ui.textEditInboxMessage
+            return self.textEditInboxMessage
 
     def getCurrentSearchLine(self, currentIndex=None, retObj=False):
         if currentIndex is None:
-            currentIndex = self.ui.tabWidget.currentIndex()
+            currentIndex = self.tabWidget.currentIndex()
         messagelistList = [
-            self.ui.inboxSearchLineEdit,
+            self.inboxSearchLineEdit,
             False,
-            self.ui.inboxSearchLineEditSubscriptions,
-            self.ui.inboxSearchLineEditChans,
+            self.inboxSearchLineEditSubscriptions,
+            self.inboxSearchLineEditChans,
         ]
         if currentIndex >= 0 and currentIndex < len(messagelistList):
             if retObj:
@@ -3581,12 +2992,12 @@ class MyForm(settingsmixin.SMainWindow):
 
     def getCurrentSearchOption(self, currentIndex=None):
         if currentIndex is None:
-            currentIndex = self.ui.tabWidget.currentIndex()
+            currentIndex = self.tabWidget.currentIndex()
         messagelistList = [
-            self.ui.inboxSearchOption,
+            self.inboxSearchOption,
             False,
-            self.ui.inboxSearchOptionSubscriptions,
-            self.ui.inboxSearchOptionChans,
+            self.inboxSearchOptionSubscriptions,
+            self.inboxSearchOptionChans,
         ]
         if currentIndex >= 0 and currentIndex < len(messagelistList):
             return messagelistList[currentIndex].currentText().toUtf8().data()
@@ -3615,7 +3026,7 @@ class MyForm(settingsmixin.SMainWindow):
     def getCurrentFolder(self, treeWidget=None):
         if treeWidget is None:
             treeWidget = self.getCurrentTreeWidget()
-        #treeWidget = self.ui.treeWidgetYourIdentities
+        #treeWidget = self.treeWidgetYourIdentities
         if treeWidget:
             currentItem = treeWidget.currentItem()
             if currentItem and hasattr(currentItem, 'folderName'):
@@ -3728,7 +3139,7 @@ class MyForm(settingsmixin.SMainWindow):
         self.setAvatar(address)
 
     def on_action_AddressBookSetAvatar(self):
-        self.on_action_SetAvatar(self.ui.tableWidgetAddressBook)
+        self.on_action_SetAvatar(self.tableWidgetAddressBook)
         
     def on_action_SetAvatar(self, thisTableWidget):
         currentRow = thisTableWidget.currentRow()
@@ -3803,14 +3214,14 @@ class MyForm(settingsmixin.SMainWindow):
             self.rerenderComboBoxSendFromBroadcast()
             self.rerenderMessagelistFromLabels()
             self.rerenderMessagelistToLabels()
-            self.ui.blackwhitelist.rerenderBlackWhiteList()
+            self.blackwhitelist.rerenderBlackWhiteList()
             # generate identicon
             return False
 
         return True
 
     def on_action_AddressBookSetSound(self):
-        widget = self.ui.tableWidgetAddressBook
+        widget = self.tableWidgetAddressBook
         self.setAddressSound(widget.item(widget.currentRow(), 0).text())
 
     def setAddressSound(self, addr):
@@ -3877,7 +3288,7 @@ class MyForm(settingsmixin.SMainWindow):
         self.popMenuYourIdentities.addAction(self.actionMarkAllRead)
 
         self.popMenuYourIdentities.exec_(
-            self.ui.treeWidgetYourIdentities.mapToGlobal(point))
+            self.treeWidgetYourIdentities.mapToGlobal(point))
 
     # TODO make one popMenu
     def on_context_menuChan(self, point):
@@ -3901,7 +3312,7 @@ class MyForm(settingsmixin.SMainWindow):
             self.popMenu.addSeparator()
         self.popMenu.addAction(self.actionMarkAllRead)
         self.popMenu.exec_(
-            self.ui.treeWidgetChans.mapToGlobal(point))
+            self.treeWidgetChans.mapToGlobal(point))
 
     def on_context_menuInbox(self, point):
         tableWidget = self.getCurrentMessagelist()
@@ -3923,7 +3334,7 @@ class MyForm(settingsmixin.SMainWindow):
                     self.popMenuInbox.addAction(self.actionReplyChan)
                 self.popMenuInbox.addAction(self.actionReply)
                 self.popMenuInbox.addAction(self.actionAddSenderToAddressBook)
-                self.actionClipboardMessagelist = self.ui.inboxContextMenuToolbar.addAction(
+                self.actionClipboardMessagelist = self.inboxContextMenuToolbar.addAction(
                     _translate("MainWindow",
                         "Copy subject to clipboard" if tableWidget.currentColumn() == 2 else "Copy address to clipboard"
                     ),
@@ -3946,9 +3357,9 @@ class MyForm(settingsmixin.SMainWindow):
 
         # Check to see if this item is toodifficult and display an additional
         # menu option (Force Send) if it is.
-        currentRow = self.ui.tableWidgetInbox.currentRow()
+        currentRow = self.tableWidgetInbox.currentRow()
         if currentRow >= 0:
-            ackData = str(self.ui.tableWidgetInbox.item(
+            ackData = str(self.tableWidgetInbox.item(
                 currentRow, 3).data(QtCore.Qt.UserRole).toPyObject())
             queryreturn = sqlQuery('''SELECT status FROM sent where ackdata=?''', ackData)
             for row in queryreturn:
@@ -3956,7 +3367,7 @@ class MyForm(settingsmixin.SMainWindow):
             if status == 'toodifficult':
                 self.popMenuSent.addAction(self.actionForceSend)
 
-        self.popMenuSent.exec_(self.ui.tableWidgetInbox.mapToGlobal(point))
+        self.popMenuSent.exec_(self.tableWidgetInbox.mapToGlobal(point))
 
     def inboxSearchLineEditUpdated(self, text):
         # dynamic search for too short text is slow
@@ -4082,17 +3493,17 @@ class MyForm(settingsmixin.SMainWindow):
             self.rerenderComboBoxSendFrom()
         self.rerenderMessagelistFromLabels()
         self.rerenderMessagelistToLabels()
-        completerList = self.ui.lineEditTo.completer().model().stringList()
+        completerList = self.lineEditTo.completer().model().stringList()
         for i in range(len(completerList)):
             if unicode(completerList[i]).endswith(" <" + item.address + ">"):
                 completerList[i] = item.label + " <" + item.address + ">"
-        self.ui.lineEditTo.completer().model().setStringList(completerList)
+        self.lineEditTo.completer().model().setStringList(completerList)
 
     def tabWidgetCurrentChanged(self, n):
-        if n == self.ui.tabWidget.indexOf(self.ui.networkstatus):
-            self.ui.networkstatus.startUpdate()
+        if n == self.tabWidget.indexOf(self.networkstatus):
+            self.networkstatus.startUpdate()
         else:
-            self.ui.networkstatus.stopUpdate()
+            self.networkstatus.stopUpdate()
 
     def writeNewAddressToTable(self, label, address, streamNumber):
         self.rerenderTabTreeMessages()
@@ -4129,16 +3540,16 @@ class MyForm(settingsmixin.SMainWindow):
             logger.warning(
                 'There was a problem testing for a Namecoin daemon. Hiding the'
                 ' Fetch Namecoin ID button')
-            self.ui.pushButtonFetchNamecoinID.hide()
+            self.pushButtonFetchNamecoinID.hide()
         else:
-            self.ui.pushButtonFetchNamecoinID.show()
+            self.pushButtonFetchNamecoinID.show()
 
     def initSettings(self):
         QtCore.QCoreApplication.setOrganizationName("PyBitmessage")
         QtCore.QCoreApplication.setOrganizationDomain("bitmessage.org")
         QtCore.QCoreApplication.setApplicationName("pybitmessageqt")
         self.loadSettings()
-        for attr, obj in self.ui.__dict__.iteritems():
+        for attr, obj in self.__dict__.iteritems():
             if hasattr(obj, "__class__") and \
                     isinstance(obj, settingsmixin.SettingsMixin):
                 loadMethod = getattr(obj, "loadSettings", None)
@@ -4146,237 +3557,6 @@ class MyForm(settingsmixin.SMainWindow):
                     obj.loadSettings()
 
 
-class settingsDialog(QtGui.QDialog):
-
-    def __init__(self, parent):
-        QtGui.QWidget.__init__(self, parent)
-        self.ui = Ui_settingsDialog()
-        self.ui.setupUi(self)
-        self.parent = parent
-        self.ui.checkBoxStartOnLogon.setChecked(
-            BMConfigParser().getboolean('bitmessagesettings', 'startonlogon'))
-        self.ui.checkBoxMinimizeToTray.setChecked(
-            BMConfigParser().getboolean('bitmessagesettings', 'minimizetotray'))
-        self.ui.checkBoxTrayOnClose.setChecked(
-            BMConfigParser().safeGetBoolean('bitmessagesettings', 'trayonclose'))
-        self.ui.checkBoxHideTrayConnectionNotifications.setChecked(
-            BMConfigParser().getboolean("bitmessagesettings", "hidetrayconnectionnotifications"))
-        self.ui.checkBoxShowTrayNotifications.setChecked(
-            BMConfigParser().getboolean('bitmessagesettings', 'showtraynotifications'))
-        self.ui.checkBoxStartInTray.setChecked(
-            BMConfigParser().getboolean('bitmessagesettings', 'startintray'))
-        self.ui.checkBoxWillinglySendToMobile.setChecked(
-            BMConfigParser().safeGetBoolean('bitmessagesettings', 'willinglysendtomobile'))
-        self.ui.checkBoxUseIdenticons.setChecked(
-            BMConfigParser().safeGetBoolean('bitmessagesettings', 'useidenticons'))
-        self.ui.checkBoxReplyBelow.setChecked(
-            BMConfigParser().safeGetBoolean('bitmessagesettings', 'replybelow'))
-        
-        if state.appdata == paths.lookupExeFolder():
-            self.ui.checkBoxPortableMode.setChecked(True)
-        else:
-            try:
-                import tempfile
-                tempfile.NamedTemporaryFile(
-                    dir=paths.lookupExeFolder(), delete=True
-                ).close()  # should autodelete
-            except:
-                self.ui.checkBoxPortableMode.setDisabled(True)
-
-        if 'darwin' in sys.platform:
-            self.ui.checkBoxStartOnLogon.setDisabled(True)
-            self.ui.checkBoxStartOnLogon.setText(_translate(
-                "MainWindow", "Start-on-login not yet supported on your OS."))
-            self.ui.checkBoxMinimizeToTray.setDisabled(True)
-            self.ui.checkBoxMinimizeToTray.setText(_translate(
-                "MainWindow", "Minimize-to-tray not yet supported on your OS."))
-            self.ui.checkBoxShowTrayNotifications.setDisabled(True)
-            self.ui.checkBoxShowTrayNotifications.setText(_translate(
-                "MainWindow", "Tray notifications not yet supported on your OS."))
-        elif 'linux' in sys.platform:
-            self.ui.checkBoxStartOnLogon.setDisabled(True)
-            self.ui.checkBoxStartOnLogon.setText(_translate(
-                "MainWindow", "Start-on-login not yet supported on your OS."))
-        # On the Network settings tab:
-        self.ui.lineEditTCPPort.setText(str(
-            BMConfigParser().get('bitmessagesettings', 'port')))
-        self.ui.checkBoxUPnP.setChecked(
-            BMConfigParser().safeGetBoolean('bitmessagesettings', 'upnp'))
-        self.ui.checkBoxAuthentication.setChecked(BMConfigParser().getboolean(
-            'bitmessagesettings', 'socksauthentication'))
-        self.ui.checkBoxSocksListen.setChecked(BMConfigParser().getboolean(
-            'bitmessagesettings', 'sockslisten'))
-        if str(BMConfigParser().get('bitmessagesettings', 'socksproxytype')) == 'none':
-            self.ui.comboBoxProxyType.setCurrentIndex(0)
-            self.ui.lineEditSocksHostname.setEnabled(False)
-            self.ui.lineEditSocksPort.setEnabled(False)
-            self.ui.lineEditSocksUsername.setEnabled(False)
-            self.ui.lineEditSocksPassword.setEnabled(False)
-            self.ui.checkBoxAuthentication.setEnabled(False)
-            self.ui.checkBoxSocksListen.setEnabled(False)
-        elif str(BMConfigParser().get('bitmessagesettings', 'socksproxytype')) == 'SOCKS4a':
-            self.ui.comboBoxProxyType.setCurrentIndex(1)
-        elif str(BMConfigParser().get('bitmessagesettings', 'socksproxytype')) == 'SOCKS5':
-            self.ui.comboBoxProxyType.setCurrentIndex(2)
-
-        self.ui.lineEditSocksHostname.setText(str(
-            BMConfigParser().get('bitmessagesettings', 'sockshostname')))
-        self.ui.lineEditSocksPort.setText(str(
-            BMConfigParser().get('bitmessagesettings', 'socksport')))
-        self.ui.lineEditSocksUsername.setText(str(
-            BMConfigParser().get('bitmessagesettings', 'socksusername')))
-        self.ui.lineEditSocksPassword.setText(str(
-            BMConfigParser().get('bitmessagesettings', 'sockspassword')))
-        QtCore.QObject.connect(self.ui.comboBoxProxyType, QtCore.SIGNAL(
-            "currentIndexChanged(int)"), self.comboBoxProxyTypeChanged)
-        self.ui.lineEditMaxDownloadRate.setText(str(
-            BMConfigParser().get('bitmessagesettings', 'maxdownloadrate')))
-        self.ui.lineEditMaxUploadRate.setText(str(
-            BMConfigParser().get('bitmessagesettings', 'maxuploadrate')))
-        self.ui.lineEditMaxOutboundConnections.setText(str(
-            BMConfigParser().get('bitmessagesettings', 'maxoutboundconnections')))
-
-        # Demanded difficulty tab
-        self.ui.lineEditTotalDifficulty.setText(str((float(BMConfigParser().getint(
-            'bitmessagesettings', 'defaultnoncetrialsperbyte')) / defaults.networkDefaultProofOfWorkNonceTrialsPerByte)))
-        self.ui.lineEditSmallMessageDifficulty.setText(str((float(BMConfigParser().getint(
-            'bitmessagesettings', 'defaultpayloadlengthextrabytes')) / defaults.networkDefaultPayloadLengthExtraBytes)))
-
-        # Max acceptable difficulty tab
-        self.ui.lineEditMaxAcceptableTotalDifficulty.setText(str((float(BMConfigParser().getint(
-            'bitmessagesettings', 'maxacceptablenoncetrialsperbyte')) / defaults.networkDefaultProofOfWorkNonceTrialsPerByte)))
-        self.ui.lineEditMaxAcceptableSmallMessageDifficulty.setText(str((float(BMConfigParser().getint(
-            'bitmessagesettings', 'maxacceptablepayloadlengthextrabytes')) / defaults.networkDefaultPayloadLengthExtraBytes)))
-
-        # OpenCL
-        if openclpow.openclAvailable():
-            self.ui.comboBoxOpenCL.setEnabled(True)
-        else:
-            self.ui.comboBoxOpenCL.setEnabled(False)
-        self.ui.comboBoxOpenCL.clear()
-        self.ui.comboBoxOpenCL.addItem("None")
-        self.ui.comboBoxOpenCL.addItems(openclpow.vendors)
-        self.ui.comboBoxOpenCL.setCurrentIndex(0)
-        for i in range(self.ui.comboBoxOpenCL.count()):
-            if self.ui.comboBoxOpenCL.itemText(i) == BMConfigParser().safeGet('bitmessagesettings', 'opencl'):
-                self.ui.comboBoxOpenCL.setCurrentIndex(i)
-                break
-
-        # Namecoin integration tab
-        nmctype = BMConfigParser().get('bitmessagesettings', 'namecoinrpctype')
-        self.ui.lineEditNamecoinHost.setText(str(
-            BMConfigParser().get('bitmessagesettings', 'namecoinrpchost')))
-        self.ui.lineEditNamecoinPort.setText(str(
-            BMConfigParser().get('bitmessagesettings', 'namecoinrpcport')))
-        self.ui.lineEditNamecoinUser.setText(str(
-            BMConfigParser().get('bitmessagesettings', 'namecoinrpcuser')))
-        self.ui.lineEditNamecoinPassword.setText(str(
-            BMConfigParser().get('bitmessagesettings', 'namecoinrpcpassword')))
-
-        if nmctype == "namecoind":
-            self.ui.radioButtonNamecoinNamecoind.setChecked(True)
-        elif nmctype == "nmcontrol":
-            self.ui.radioButtonNamecoinNmcontrol.setChecked(True)
-            self.ui.lineEditNamecoinUser.setEnabled(False)
-            self.ui.labelNamecoinUser.setEnabled(False)
-            self.ui.lineEditNamecoinPassword.setEnabled(False)
-            self.ui.labelNamecoinPassword.setEnabled(False)
-        else:
-            assert False
-
-        QtCore.QObject.connect(self.ui.radioButtonNamecoinNamecoind, QtCore.SIGNAL(
-            "toggled(bool)"), self.namecoinTypeChanged)
-        QtCore.QObject.connect(self.ui.radioButtonNamecoinNmcontrol, QtCore.SIGNAL(
-            "toggled(bool)"), self.namecoinTypeChanged)
-        QtCore.QObject.connect(self.ui.pushButtonNamecoinTest, QtCore.SIGNAL(
-            "clicked()"), self.click_pushButtonNamecoinTest)
-
-        #Message Resend tab
-        self.ui.lineEditDays.setText(str(
-            BMConfigParser().get('bitmessagesettings', 'stopresendingafterxdays')))
-        self.ui.lineEditMonths.setText(str(
-            BMConfigParser().get('bitmessagesettings', 'stopresendingafterxmonths')))
-        
-        
-        #'System' tab removed for now.
-        """try:
-            maxCores = BMConfigParser().getint('bitmessagesettings', 'maxcores')
-        except:
-            maxCores = 99999
-        if maxCores <= 1:
-            self.ui.comboBoxMaxCores.setCurrentIndex(0)
-        elif maxCores == 2:
-            self.ui.comboBoxMaxCores.setCurrentIndex(1)
-        elif maxCores <= 4:
-            self.ui.comboBoxMaxCores.setCurrentIndex(2)
-        elif maxCores <= 8:
-            self.ui.comboBoxMaxCores.setCurrentIndex(3)
-        elif maxCores <= 16:
-            self.ui.comboBoxMaxCores.setCurrentIndex(4)
-        else:
-            self.ui.comboBoxMaxCores.setCurrentIndex(5)"""
-
-        QtGui.QWidget.resize(self, QtGui.QWidget.sizeHint(self))
-
-    def comboBoxProxyTypeChanged(self, comboBoxIndex):
-        if comboBoxIndex == 0:
-            self.ui.lineEditSocksHostname.setEnabled(False)
-            self.ui.lineEditSocksPort.setEnabled(False)
-            self.ui.lineEditSocksUsername.setEnabled(False)
-            self.ui.lineEditSocksPassword.setEnabled(False)
-            self.ui.checkBoxAuthentication.setEnabled(False)
-            self.ui.checkBoxSocksListen.setEnabled(False)
-        elif comboBoxIndex == 1 or comboBoxIndex == 2:
-            self.ui.lineEditSocksHostname.setEnabled(True)
-            self.ui.lineEditSocksPort.setEnabled(True)
-            self.ui.checkBoxAuthentication.setEnabled(True)
-            self.ui.checkBoxSocksListen.setEnabled(True)
-            if self.ui.checkBoxAuthentication.isChecked():
-                self.ui.lineEditSocksUsername.setEnabled(True)
-                self.ui.lineEditSocksPassword.setEnabled(True)
-
-    # Check status of namecoin integration radio buttons and translate
-    # it to a string as in the options.
-    def getNamecoinType(self):
-        if self.ui.radioButtonNamecoinNamecoind.isChecked():
-            return "namecoind"
-        if self.ui.radioButtonNamecoinNmcontrol.isChecked():
-            return "nmcontrol"
-        assert False
-
-    # Namecoin connection type was changed.
-    def namecoinTypeChanged(self, checked):
-        nmctype = self.getNamecoinType()
-        assert nmctype == "namecoind" or nmctype == "nmcontrol"
-
-        isNamecoind = (nmctype == "namecoind")
-        self.ui.lineEditNamecoinUser.setEnabled(isNamecoind)
-        self.ui.labelNamecoinUser.setEnabled(isNamecoind)
-        self.ui.lineEditNamecoinPassword.setEnabled(isNamecoind)
-        self.ui.labelNamecoinPassword.setEnabled(isNamecoind)
-
-        if isNamecoind:
-            self.ui.lineEditNamecoinPort.setText(defaults.namecoinDefaultRpcPort)
-        else:
-            self.ui.lineEditNamecoinPort.setText("9000")
-
-    def click_pushButtonNamecoinTest(self):
-        """Test the namecoin settings specified in the settings dialog."""
-        self.ui.labelNamecoinTestResult.setText(_translate(
-            "MainWindow", "Testing..."))
-        options = {}
-        options["type"] = self.getNamecoinType()
-        options["host"] = str(self.ui.lineEditNamecoinHost.text().toUtf8())
-        options["port"] = str(self.ui.lineEditNamecoinPort.text().toUtf8())
-        options["user"] = str(self.ui.lineEditNamecoinUser.text().toUtf8())
-        options["password"] = str(self.ui.lineEditNamecoinPassword.text().toUtf8())
-        nc = namecoin.namecoinConnection(options)
-        status, text = nc.test()
-        self.ui.labelNamecoinTestResult.setText(text)
-        if status == 'success':
-            self.parent.namecoin = nc
-
-
 # In order for the time columns on the Inbox and Sent tabs to be sorted
 # correctly (rather than alphabetically), we need to overload the <
 # operator and use this class instead of QTableWidgetItem.
@@ -4451,9 +3631,9 @@ def init():
 def run():
     global myapp
     app = init()
-    change_translation(l10n.getTranslationLanguage())
     app.setStyleSheet("QStatusBar::item { border: 0px solid black }")
-    myapp = MyForm()
+    myapp = MainWindow()
+    myapp.change_translation()
 
     myapp.sqlInit()
     myapp.appIndicatorInit(app)
@@ -4463,7 +3643,7 @@ def run():
         'bitmessagesettings', 'dontconnect')
     if myapp._firstrun:
         myapp.showConnectDialog()  # ask the user if we may connect
-    myapp.ui.updateNetworkSwitchMenuLabel()
+    myapp.updateNetworkSwitchMenuLabel()
 
 #    try:
 #        if BMConfigParser().get('bitmessagesettings', 'mailchuck') < 1:
@@ -4475,4 +3655,4 @@ def run():
     if not BMConfigParser().getboolean('bitmessagesettings', 'startintray'):
         myapp.show()
 
-    sys.exit(app.exec_())
+    app.exec_()
diff --git a/src/bitmessageqt/address_dialogs.py b/src/bitmessageqt/address_dialogs.py
index 60c10369..f2384461 100644
--- a/src/bitmessageqt/address_dialogs.py
+++ b/src/bitmessageqt/address_dialogs.py
@@ -1,9 +1,9 @@
 """
 src/bitmessageqt/address_dialogs.py
 ===================================
-
+A dialogs which deal with BM address
 """
-# pylint: disable=attribute-defined-outside-init
+# pylint: disable=attribute-defined-outside-init,too-few-public-methods
 
 import hashlib
 
@@ -14,13 +14,11 @@ import widgets
 from account import AccountMixin, GatewayAccount, MailchuckAccount, accountClass, getSortedAccounts
 from addresses import addBMIfNotPresent, decodeAddress, encodeVarint
 from inventory import Inventory
-from retranslateui import RetranslateMixin
 from tr import _translate
 
 
 class AddressCheckMixin(object):
     """Base address validation class for QT UI"""
-    # pylint: disable=too-few-public-methods
 
     def __init__(self):
         self.valid = False
@@ -33,7 +31,9 @@ class AddressCheckMixin(object):
         pass
 
     def addressChanged(self, QString):
-        """Address validation callback, performs validation and gives feedback"""
+        """
+        Address validation callback, performs validation and gives feedback
+        """
         status, addressVersion, streamNumber, ripe = decodeAddress(
             str(QString))
         self.valid = status == 'success'
@@ -102,8 +102,8 @@ class AddressDataDialog(QtGui.QDialog, AddressCheckMixin):
         super(AddressDataDialog, self).accept()
 
 
-class AddAddressDialog(AddressDataDialog, RetranslateMixin):
-    """QDialog for adding a new address, with validation and translation"""
+class AddAddressDialog(AddressDataDialog):
+    """QDialog for adding a new address"""
 
     def __init__(self, parent=None, address=None):
         super(AddAddressDialog, self).__init__(parent)
@@ -113,8 +113,8 @@ class AddAddressDialog(AddressDataDialog, RetranslateMixin):
             self.lineEditAddress.setText(address)
 
 
-class NewAddressDialog(QtGui.QDialog, RetranslateMixin):
-    """QDialog for generating a new address, with translation"""
+class NewAddressDialog(QtGui.QDialog):
+    """QDialog for generating a new address"""
 
     def __init__(self, parent=None):
         super(NewAddressDialog, self).__init__(parent)
@@ -175,8 +175,8 @@ class NewAddressDialog(QtGui.QDialog, RetranslateMixin):
                 ))
 
 
-class NewSubscriptionDialog(AddressDataDialog, RetranslateMixin):
-    """QDialog for subscribing to an address, with validation and translation"""
+class NewSubscriptionDialog(AddressDataDialog):
+    """QDialog for subscribing to an address"""
 
     def __init__(self, parent=None):
         super(NewSubscriptionDialog, self).__init__(parent)
@@ -218,8 +218,8 @@ class NewSubscriptionDialog(AddressDataDialog, RetranslateMixin):
                     ))
 
 
-class RegenerateAddressesDialog(QtGui.QDialog, RetranslateMixin):
-    """QDialog for regenerating deterministic addresses, with translation"""
+class RegenerateAddressesDialog(QtGui.QDialog):
+    """QDialog for regenerating deterministic addresses"""
     def __init__(self, parent=None):
         super(RegenerateAddressesDialog, self).__init__(parent)
         widgets.load('regenerateaddresses.ui', self)
@@ -227,8 +227,10 @@ class RegenerateAddressesDialog(QtGui.QDialog, RetranslateMixin):
         QtGui.QWidget.resize(self, QtGui.QWidget.sizeHint(self))
 
 
-class SpecialAddressBehaviorDialog(QtGui.QDialog, RetranslateMixin):
-    """QDialog for special address behaviour (e.g. mailing list functionality), with translation"""
+class SpecialAddressBehaviorDialog(QtGui.QDialog):
+    """
+    QDialog for special address behaviour (e.g. mailing list functionality)
+    """
 
     def __init__(self, parent=None, config=None):
         super(SpecialAddressBehaviorDialog, self).__init__(parent)
@@ -294,8 +296,8 @@ class SpecialAddressBehaviorDialog(QtGui.QDialog, RetranslateMixin):
         self.parent.rerenderMessagelistToLabels()
 
 
-class EmailGatewayDialog(QtGui.QDialog, RetranslateMixin):
-    """QDialog for email gateway control, with translation"""
+class EmailGatewayDialog(QtGui.QDialog):
+    """QDialog for email gateway control"""
     def __init__(self, parent, config=None, account=None):
         super(EmailGatewayDialog, self).__init__(parent)
         widgets.load('emailgateway.ui', self)
diff --git a/src/bitmessageqt/bitmessageui.py b/src/bitmessageqt/bitmessageui.py
deleted file mode 100644
index cb3578c0..00000000
--- a/src/bitmessageqt/bitmessageui.py
+++ /dev/null
@@ -1,777 +0,0 @@
-# -*- coding: utf-8 -*-
-
-# Form implementation generated from reading ui file 'bitmessageui.ui'
-#
-# Created: Mon Mar 23 22:18:07 2015
-#      by: PyQt4 UI code generator 4.10.4
-#
-# WARNING! All changes made in this file will be lost!
-
-from PyQt4 import QtCore, QtGui
-from bmconfigparser import BMConfigParser
-from foldertree import AddressBookCompleter
-from messageview import MessageView
-from messagecompose import MessageCompose
-import settingsmixin
-from networkstatus import NetworkStatus
-from blacklist import Blacklist
-
-try:
-    _fromUtf8 = QtCore.QString.fromUtf8
-except AttributeError:
-    def _fromUtf8(s):
-        return s
-
-try:
-    _encoding = QtGui.QApplication.UnicodeUTF8
-    def _translate(context, text, disambig, encoding = QtCore.QCoreApplication.CodecForTr, n = None):
-        if n is None:
-            return QtGui.QApplication.translate(context, text, disambig, _encoding)
-        else:
-            return QtGui.QApplication.translate(context, text, disambig, _encoding, n)
-except AttributeError:
-    def _translate(context, text, disambig, encoding = QtCore.QCoreApplication.CodecForTr, n = None):
-        if n is None:
-            return QtGui.QApplication.translate(context, text, disambig)
-        else:
-            return QtGui.QApplication.translate(context, text, disambig, QtCore.QCoreApplication.CodecForTr, n)
-
-class Ui_MainWindow(object):
-    def setupUi(self, MainWindow):
-        MainWindow.setObjectName(_fromUtf8("MainWindow"))
-        MainWindow.resize(885, 580)
-        icon = QtGui.QIcon()
-        icon.addPixmap(QtGui.QPixmap(_fromUtf8(":/newPrefix/images/can-icon-24px.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
-        MainWindow.setWindowIcon(icon)
-        MainWindow.setTabShape(QtGui.QTabWidget.Rounded)
-        self.centralwidget = QtGui.QWidget(MainWindow)
-        self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
-        self.gridLayout_10 = QtGui.QGridLayout(self.centralwidget)
-        self.gridLayout_10.setObjectName(_fromUtf8("gridLayout_10"))
-        self.tabWidget = QtGui.QTabWidget(self.centralwidget)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
-        self.tabWidget.setSizePolicy(sizePolicy)
-        self.tabWidget.setMinimumSize(QtCore.QSize(0, 0))
-        self.tabWidget.setBaseSize(QtCore.QSize(0, 0))
-        font = QtGui.QFont()
-        font.setPointSize(9)
-        self.tabWidget.setFont(font)
-        self.tabWidget.setTabPosition(QtGui.QTabWidget.North)
-        self.tabWidget.setTabShape(QtGui.QTabWidget.Rounded)
-        self.tabWidget.setObjectName(_fromUtf8("tabWidget"))
-        self.inbox = QtGui.QWidget()
-        self.inbox.setObjectName(_fromUtf8("inbox"))
-        self.gridLayout = QtGui.QGridLayout(self.inbox)
-        self.gridLayout.setObjectName(_fromUtf8("gridLayout"))
-        self.horizontalSplitter_3 = settingsmixin.SSplitter()
-        self.horizontalSplitter_3.setObjectName(_fromUtf8("horizontalSplitter_3"))
-        self.verticalSplitter_12 = settingsmixin.SSplitter()
-        self.verticalSplitter_12.setObjectName(_fromUtf8("verticalSplitter_12"))
-        self.verticalSplitter_12.setOrientation(QtCore.Qt.Vertical)
-        self.treeWidgetYourIdentities = settingsmixin.STreeWidget(self.inbox)
-        self.treeWidgetYourIdentities.setObjectName(_fromUtf8("treeWidgetYourIdentities"))
-        self.treeWidgetYourIdentities.resize(200, self.treeWidgetYourIdentities.height())
-        icon1 = QtGui.QIcon()
-        icon1.addPixmap(QtGui.QPixmap(_fromUtf8(":/newPrefix/images/identities.png")), QtGui.QIcon.Selected, QtGui.QIcon.Off)
-        self.treeWidgetYourIdentities.headerItem().setIcon(0, icon1)
-        self.verticalSplitter_12.addWidget(self.treeWidgetYourIdentities)
-        self.pushButtonNewAddress = QtGui.QPushButton(self.inbox)
-        self.pushButtonNewAddress.setObjectName(_fromUtf8("pushButtonNewAddress"))
-        self.pushButtonNewAddress.resize(200, self.pushButtonNewAddress.height())
-        self.verticalSplitter_12.addWidget(self.pushButtonNewAddress)
-        self.verticalSplitter_12.setStretchFactor(0, 1)
-        self.verticalSplitter_12.setStretchFactor(1, 0)
-        self.verticalSplitter_12.setCollapsible(0, False)
-        self.verticalSplitter_12.setCollapsible(1, False)
-        self.verticalSplitter_12.handle(1).setEnabled(False)
-        self.horizontalSplitter_3.addWidget(self.verticalSplitter_12)
-        self.verticalSplitter_7 = settingsmixin.SSplitter()
-        self.verticalSplitter_7.setObjectName(_fromUtf8("verticalSplitter_7"))
-        self.verticalSplitter_7.setOrientation(QtCore.Qt.Vertical)
-        self.horizontalSplitterSearch = QtGui.QSplitter()
-        self.horizontalSplitterSearch.setObjectName(_fromUtf8("horizontalSplitterSearch"))
-        self.inboxSearchLineEdit = QtGui.QLineEdit(self.inbox)
-        self.inboxSearchLineEdit.setObjectName(_fromUtf8("inboxSearchLineEdit"))
-        self.horizontalSplitterSearch.addWidget(self.inboxSearchLineEdit)
-        self.inboxSearchOption = QtGui.QComboBox(self.inbox)
-        self.inboxSearchOption.setObjectName(_fromUtf8("inboxSearchOption"))
-        self.inboxSearchOption.addItem(_fromUtf8(""))
-        self.inboxSearchOption.addItem(_fromUtf8(""))
-        self.inboxSearchOption.addItem(_fromUtf8(""))
-        self.inboxSearchOption.addItem(_fromUtf8(""))
-        self.inboxSearchOption.addItem(_fromUtf8(""))
-        self.inboxSearchOption.setSizeAdjustPolicy(QtGui.QComboBox.AdjustToContents)
-        self.horizontalSplitterSearch.addWidget(self.inboxSearchOption)
-        self.horizontalSplitterSearch.handle(1).setEnabled(False)
-        self.horizontalSplitterSearch.setStretchFactor(0, 1)
-        self.horizontalSplitterSearch.setStretchFactor(1, 0)
-        self.verticalSplitter_7.addWidget(self.horizontalSplitterSearch)
-        self.tableWidgetInbox = settingsmixin.STableWidget(self.inbox)
-        self.tableWidgetInbox.setEditTriggers(QtGui.QAbstractItemView.NoEditTriggers)
-        self.tableWidgetInbox.setAlternatingRowColors(True)
-        self.tableWidgetInbox.setSelectionMode(QtGui.QAbstractItemView.ExtendedSelection)
-        self.tableWidgetInbox.setSelectionBehavior(QtGui.QAbstractItemView.SelectRows)
-        self.tableWidgetInbox.setWordWrap(False)
-        self.tableWidgetInbox.setObjectName(_fromUtf8("tableWidgetInbox"))
-        self.tableWidgetInbox.setColumnCount(4)
-        self.tableWidgetInbox.setRowCount(0)
-        item = QtGui.QTableWidgetItem()
-        self.tableWidgetInbox.setHorizontalHeaderItem(0, item)
-        item = QtGui.QTableWidgetItem()
-        self.tableWidgetInbox.setHorizontalHeaderItem(1, item)
-        item = QtGui.QTableWidgetItem()
-        self.tableWidgetInbox.setHorizontalHeaderItem(2, item)
-        item = QtGui.QTableWidgetItem()
-        self.tableWidgetInbox.setHorizontalHeaderItem(3, item)
-        self.tableWidgetInbox.horizontalHeader().setCascadingSectionResizes(True)
-        self.tableWidgetInbox.horizontalHeader().setDefaultSectionSize(200)
-        self.tableWidgetInbox.horizontalHeader().setHighlightSections(False)
-        self.tableWidgetInbox.horizontalHeader().setMinimumSectionSize(27)
-        self.tableWidgetInbox.horizontalHeader().setSortIndicatorShown(False)
-        self.tableWidgetInbox.horizontalHeader().setStretchLastSection(True)
-        self.tableWidgetInbox.verticalHeader().setVisible(False)
-        self.tableWidgetInbox.verticalHeader().setDefaultSectionSize(26)
-        self.verticalSplitter_7.addWidget(self.tableWidgetInbox)
-        self.textEditInboxMessage = MessageView(self.inbox)
-        self.textEditInboxMessage.setBaseSize(QtCore.QSize(0, 500))
-        self.textEditInboxMessage.setReadOnly(True)
-        self.textEditInboxMessage.setObjectName(_fromUtf8("textEditInboxMessage"))
-        self.verticalSplitter_7.addWidget(self.textEditInboxMessage)
-        self.verticalSplitter_7.setStretchFactor(0, 0)
-        self.verticalSplitter_7.setStretchFactor(1, 1)
-        self.verticalSplitter_7.setStretchFactor(2, 2)
-        self.verticalSplitter_7.setCollapsible(0, False)
-        self.verticalSplitter_7.setCollapsible(1, False)
-        self.verticalSplitter_7.setCollapsible(2, False)
-        self.verticalSplitter_7.handle(1).setEnabled(False)
-        self.horizontalSplitter_3.addWidget(self.verticalSplitter_7)
-        self.horizontalSplitter_3.setStretchFactor(0, 0)
-        self.horizontalSplitter_3.setStretchFactor(1, 1)
-        self.horizontalSplitter_3.setCollapsible(0, False)
-        self.horizontalSplitter_3.setCollapsible(1, False)
-        self.gridLayout.addWidget(self.horizontalSplitter_3)
-        icon2 = QtGui.QIcon()
-        icon2.addPixmap(QtGui.QPixmap(_fromUtf8(":/newPrefix/images/inbox.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
-        self.tabWidget.addTab(self.inbox, icon2, _fromUtf8(""))
-        self.send = QtGui.QWidget()
-        self.send.setObjectName(_fromUtf8("send"))
-        self.gridLayout_7 = QtGui.QGridLayout(self.send)
-        self.gridLayout_7.setObjectName(_fromUtf8("gridLayout_7"))
-        self.horizontalSplitter = settingsmixin.SSplitter()
-        self.horizontalSplitter.setObjectName(_fromUtf8("horizontalSplitter"))
-        self.verticalSplitter_2 = settingsmixin.SSplitter()
-        self.verticalSplitter_2.setObjectName(_fromUtf8("verticalSplitter_2"))
-        self.verticalSplitter_2.setOrientation(QtCore.Qt.Vertical)
-        self.tableWidgetAddressBook = settingsmixin.STableWidget(self.send)
-        self.tableWidgetAddressBook.setAlternatingRowColors(True)
-        self.tableWidgetAddressBook.setSelectionMode(QtGui.QAbstractItemView.ExtendedSelection)
-        self.tableWidgetAddressBook.setSelectionBehavior(QtGui.QAbstractItemView.SelectRows)
-        self.tableWidgetAddressBook.setObjectName(_fromUtf8("tableWidgetAddressBook"))
-        self.tableWidgetAddressBook.setColumnCount(2)
-        self.tableWidgetAddressBook.setRowCount(0)
-        self.tableWidgetAddressBook.resize(200, self.tableWidgetAddressBook.height())
-        item = QtGui.QTableWidgetItem()
-        icon3 = QtGui.QIcon()
-        icon3.addPixmap(QtGui.QPixmap(_fromUtf8(":/newPrefix/images/addressbook.png")), QtGui.QIcon.Selected, QtGui.QIcon.Off)
-        item.setIcon(icon3)
-        self.tableWidgetAddressBook.setHorizontalHeaderItem(0, item)
-        item = QtGui.QTableWidgetItem()
-        self.tableWidgetAddressBook.setHorizontalHeaderItem(1, item)
-        self.tableWidgetAddressBook.horizontalHeader().setCascadingSectionResizes(True)
-        self.tableWidgetAddressBook.horizontalHeader().setDefaultSectionSize(200)
-        self.tableWidgetAddressBook.horizontalHeader().setHighlightSections(False)
-        self.tableWidgetAddressBook.horizontalHeader().setStretchLastSection(True)
-        self.tableWidgetAddressBook.verticalHeader().setVisible(False)
-        self.verticalSplitter_2.addWidget(self.tableWidgetAddressBook)
-        self.addressBookCompleter = AddressBookCompleter()
-        self.addressBookCompleter.setCompletionMode(QtGui.QCompleter.PopupCompletion)
-        self.addressBookCompleter.setCaseSensitivity(QtCore.Qt.CaseInsensitive)
-        self.addressBookCompleterModel = QtGui.QStringListModel()
-        self.addressBookCompleter.setModel(self.addressBookCompleterModel)
-        self.pushButtonAddAddressBook = QtGui.QPushButton(self.send)
-        self.pushButtonAddAddressBook.setObjectName(_fromUtf8("pushButtonAddAddressBook"))
-        self.pushButtonAddAddressBook.resize(200, self.pushButtonAddAddressBook.height())
-        self.verticalSplitter_2.addWidget(self.pushButtonAddAddressBook)
-        self.pushButtonFetchNamecoinID = QtGui.QPushButton(self.send)
-        self.pushButtonFetchNamecoinID.resize(200, self.pushButtonFetchNamecoinID.height())
-        self.pushButtonFetchNamecoinID.setObjectName(_fromUtf8("pushButtonFetchNamecoinID"))
-        self.verticalSplitter_2.addWidget(self.pushButtonFetchNamecoinID)
-        self.verticalSplitter_2.setStretchFactor(0, 1)
-        self.verticalSplitter_2.setStretchFactor(1, 0)
-        self.verticalSplitter_2.setStretchFactor(2, 0)
-        self.verticalSplitter_2.setCollapsible(0, False)
-        self.verticalSplitter_2.setCollapsible(1, False)
-        self.verticalSplitter_2.setCollapsible(2, False)
-        self.verticalSplitter_2.handle(1).setEnabled(False)
-        self.verticalSplitter_2.handle(2).setEnabled(False)
-        self.horizontalSplitter.addWidget(self.verticalSplitter_2)
-        self.verticalSplitter = settingsmixin.SSplitter()
-        self.verticalSplitter.setObjectName(_fromUtf8("verticalSplitter"))
-        self.verticalSplitter.setOrientation(QtCore.Qt.Vertical)
-        self.tabWidgetSend = QtGui.QTabWidget(self.send)
-        self.tabWidgetSend.setObjectName(_fromUtf8("tabWidgetSend"))
-        self.sendDirect = QtGui.QWidget()
-        self.sendDirect.setObjectName(_fromUtf8("sendDirect"))
-        self.gridLayout_8 = QtGui.QGridLayout(self.sendDirect)
-        self.gridLayout_8.setObjectName(_fromUtf8("gridLayout_8"))
-        self.verticalSplitter_5 = settingsmixin.SSplitter()
-        self.verticalSplitter_5.setObjectName(_fromUtf8("verticalSplitter_5"))
-        self.verticalSplitter_5.setOrientation(QtCore.Qt.Vertical)
-        self.gridLayout_2 = QtGui.QGridLayout()
-        self.gridLayout_2.setObjectName(_fromUtf8("gridLayout_2"))
-        self.label_3 = QtGui.QLabel(self.sendDirect)
-        self.label_3.setObjectName(_fromUtf8("label_3"))
-        self.gridLayout_2.addWidget(self.label_3, 2, 0, 1, 1)
-        self.label_2 = QtGui.QLabel(self.sendDirect)
-        self.label_2.setObjectName(_fromUtf8("label_2"))
-        self.gridLayout_2.addWidget(self.label_2, 0, 0, 1, 1)
-        self.lineEditSubject = QtGui.QLineEdit(self.sendDirect)
-        self.lineEditSubject.setText(_fromUtf8(""))
-        self.lineEditSubject.setObjectName(_fromUtf8("lineEditSubject"))
-        self.gridLayout_2.addWidget(self.lineEditSubject, 2, 1, 1, 1)
-        self.label = QtGui.QLabel(self.sendDirect)
-        self.label.setObjectName(_fromUtf8("label"))
-        self.gridLayout_2.addWidget(self.label, 1, 0, 1, 1)
-        self.comboBoxSendFrom = QtGui.QComboBox(self.sendDirect)
-        self.comboBoxSendFrom.setMinimumSize(QtCore.QSize(300, 0))
-        self.comboBoxSendFrom.setObjectName(_fromUtf8("comboBoxSendFrom"))
-        self.gridLayout_2.addWidget(self.comboBoxSendFrom, 0, 1, 1, 1)
-        self.lineEditTo = QtGui.QLineEdit(self.sendDirect)
-        self.lineEditTo.setObjectName(_fromUtf8("lineEditTo"))
-        self.gridLayout_2.addWidget(self.lineEditTo, 1, 1, 1, 1)
-        self.lineEditTo.setCompleter(self.addressBookCompleter)
-        self.gridLayout_2_Widget = QtGui.QWidget()
-        self.gridLayout_2_Widget.setLayout(self.gridLayout_2)
-        self.verticalSplitter_5.addWidget(self.gridLayout_2_Widget)
-        self.textEditMessage = MessageCompose(self.sendDirect)
-        self.textEditMessage.setObjectName(_fromUtf8("textEditMessage"))
-        self.verticalSplitter_5.addWidget(self.textEditMessage)
-        self.verticalSplitter_5.setStretchFactor(0, 0)
-        self.verticalSplitter_5.setStretchFactor(1, 1)
-        self.verticalSplitter_5.setCollapsible(0, False)
-        self.verticalSplitter_5.setCollapsible(1, False)
-        self.verticalSplitter_5.handle(1).setEnabled(False)
-        self.gridLayout_8.addWidget(self.verticalSplitter_5, 0, 0, 1, 1)
-        self.tabWidgetSend.addTab(self.sendDirect, _fromUtf8(""))
-        self.sendBroadcast = QtGui.QWidget()
-        self.sendBroadcast.setObjectName(_fromUtf8("sendBroadcast"))
-        self.gridLayout_9 = QtGui.QGridLayout(self.sendBroadcast)
-        self.gridLayout_9.setObjectName(_fromUtf8("gridLayout_9"))
-        self.verticalSplitter_6 = settingsmixin.SSplitter()
-        self.verticalSplitter_6.setObjectName(_fromUtf8("verticalSplitter_6"))
-        self.verticalSplitter_6.setOrientation(QtCore.Qt.Vertical)
-        self.gridLayout_5 = QtGui.QGridLayout()
-        self.gridLayout_5.setObjectName(_fromUtf8("gridLayout_5"))
-        self.label_8 = QtGui.QLabel(self.sendBroadcast)
-        self.label_8.setObjectName(_fromUtf8("label_8"))
-        self.gridLayout_5.addWidget(self.label_8, 0, 0, 1, 1)
-        self.lineEditSubjectBroadcast = QtGui.QLineEdit(self.sendBroadcast)
-        self.lineEditSubjectBroadcast.setText(_fromUtf8(""))
-        self.lineEditSubjectBroadcast.setObjectName(_fromUtf8("lineEditSubjectBroadcast"))
-        self.gridLayout_5.addWidget(self.lineEditSubjectBroadcast, 1, 1, 1, 1)
-        self.label_7 = QtGui.QLabel(self.sendBroadcast)
-        self.label_7.setObjectName(_fromUtf8("label_7"))
-        self.gridLayout_5.addWidget(self.label_7, 1, 0, 1, 1)
-        self.comboBoxSendFromBroadcast = QtGui.QComboBox(self.sendBroadcast)
-        self.comboBoxSendFromBroadcast.setMinimumSize(QtCore.QSize(300, 0))
-        self.comboBoxSendFromBroadcast.setObjectName(_fromUtf8("comboBoxSendFromBroadcast"))
-        self.gridLayout_5.addWidget(self.comboBoxSendFromBroadcast, 0, 1, 1, 1)
-        self.gridLayout_5_Widget = QtGui.QWidget()
-        self.gridLayout_5_Widget.setLayout(self.gridLayout_5)
-        self.verticalSplitter_6.addWidget(self.gridLayout_5_Widget)
-        self.textEditMessageBroadcast = MessageCompose(self.sendBroadcast)
-        self.textEditMessageBroadcast.setObjectName(_fromUtf8("textEditMessageBroadcast"))
-        self.verticalSplitter_6.addWidget(self.textEditMessageBroadcast)
-        self.verticalSplitter_6.setStretchFactor(0, 0)
-        self.verticalSplitter_6.setStretchFactor(1, 1)
-        self.verticalSplitter_6.setCollapsible(0, False)
-        self.verticalSplitter_6.setCollapsible(1, False)
-        self.verticalSplitter_6.handle(1).setEnabled(False)
-        self.gridLayout_9.addWidget(self.verticalSplitter_6, 0, 0, 1, 1)
-        self.tabWidgetSend.addTab(self.sendBroadcast, _fromUtf8(""))
-        self.verticalSplitter.addWidget(self.tabWidgetSend)
-        self.tTLContainer = QtGui.QWidget()
-        self.tTLContainer.setSizePolicy(QtGui.QSizePolicy.MinimumExpanding, QtGui.QSizePolicy.Fixed)
-        self.horizontalLayout_5 = QtGui.QHBoxLayout()
-        self.tTLContainer.setLayout(self.horizontalLayout_5)
-        self.horizontalLayout_5.setObjectName(_fromUtf8("horizontalLayout_5"))
-        self.pushButtonTTL = QtGui.QPushButton(self.send)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.MinimumExpanding, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.pushButtonTTL.sizePolicy().hasHeightForWidth())
-        self.pushButtonTTL.setSizePolicy(sizePolicy)
-        palette = QtGui.QPalette()
-        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
-        brush.setStyle(QtCore.Qt.SolidPattern)
-        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
-        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
-        brush.setStyle(QtCore.Qt.SolidPattern)
-        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
-        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
-        brush.setStyle(QtCore.Qt.SolidPattern)
-        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
-        self.pushButtonTTL.setPalette(palette)
-        font = QtGui.QFont()
-        font.setUnderline(True)
-        self.pushButtonTTL.setFont(font)
-        self.pushButtonTTL.setFlat(True)
-        self.pushButtonTTL.setObjectName(_fromUtf8("pushButtonTTL"))
-        self.horizontalLayout_5.addWidget(self.pushButtonTTL, 0, QtCore.Qt.AlignRight)
-        self.horizontalSliderTTL = QtGui.QSlider(self.send)
-        self.horizontalSliderTTL.setMinimumSize(QtCore.QSize(70, 0))
-        self.horizontalSliderTTL.setOrientation(QtCore.Qt.Horizontal)
-        self.horizontalSliderTTL.setInvertedAppearance(False)
-        self.horizontalSliderTTL.setInvertedControls(False)
-        self.horizontalSliderTTL.setObjectName(_fromUtf8("horizontalSliderTTL"))
-        self.horizontalLayout_5.addWidget(self.horizontalSliderTTL, 0, QtCore.Qt.AlignLeft)
-        self.labelHumanFriendlyTTLDescription = QtGui.QLabel(self.send)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.MinimumExpanding, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.labelHumanFriendlyTTLDescription.sizePolicy().hasHeightForWidth())
-        self.labelHumanFriendlyTTLDescription.setSizePolicy(sizePolicy)
-        self.labelHumanFriendlyTTLDescription.setMinimumSize(QtCore.QSize(45, 0))
-        self.labelHumanFriendlyTTLDescription.setObjectName(_fromUtf8("labelHumanFriendlyTTLDescription"))
-        self.horizontalLayout_5.addWidget(self.labelHumanFriendlyTTLDescription, 1, QtCore.Qt.AlignLeft)
-        self.pushButtonClear = QtGui.QPushButton(self.send)
-        self.pushButtonClear.setObjectName(_fromUtf8("pushButtonClear"))
-        self.horizontalLayout_5.addWidget(self.pushButtonClear, 0, QtCore.Qt.AlignRight)
-        self.pushButtonSend = QtGui.QPushButton(self.send)
-        self.pushButtonSend.setObjectName(_fromUtf8("pushButtonSend"))
-        self.horizontalLayout_5.addWidget(self.pushButtonSend, 0, QtCore.Qt.AlignRight)
-        self.horizontalSliderTTL.setMaximumSize(QtCore.QSize(105, self.pushButtonSend.height()))
-        self.verticalSplitter.addWidget(self.tTLContainer)
-        self.tTLContainer.adjustSize()
-        self.verticalSplitter.setStretchFactor(1, 0)
-        self.verticalSplitter.setStretchFactor(0, 1)
-        self.verticalSplitter.setCollapsible(0, False)
-        self.verticalSplitter.setCollapsible(1, False)
-        self.verticalSplitter.handle(1).setEnabled(False)
-        self.horizontalSplitter.addWidget(self.verticalSplitter)
-        self.horizontalSplitter.setStretchFactor(0, 0)
-        self.horizontalSplitter.setStretchFactor(1, 1)
-        self.horizontalSplitter.setCollapsible(0, False)
-        self.horizontalSplitter.setCollapsible(1, False)
-        self.gridLayout_7.addWidget(self.horizontalSplitter, 0, 0, 1, 1)
-        icon4 = QtGui.QIcon()
-        icon4.addPixmap(QtGui.QPixmap(_fromUtf8(":/newPrefix/images/send.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
-        self.tabWidget.addTab(self.send, icon4, _fromUtf8(""))
-        self.subscriptions = QtGui.QWidget()
-        self.subscriptions.setObjectName(_fromUtf8("subscriptions"))
-        self.gridLayout_3 = QtGui.QGridLayout(self.subscriptions)
-        self.gridLayout_3.setObjectName(_fromUtf8("gridLayout_3"))
-        self.horizontalSplitter_4 = settingsmixin.SSplitter()
-        self.horizontalSplitter_4.setObjectName(_fromUtf8("horizontalSplitter_4"))
-        self.verticalSplitter_3 = settingsmixin.SSplitter()
-        self.verticalSplitter_3.setObjectName(_fromUtf8("verticalSplitter_3"))
-        self.verticalSplitter_3.setOrientation(QtCore.Qt.Vertical)
-        self.treeWidgetSubscriptions = settingsmixin.STreeWidget(self.subscriptions)
-        self.treeWidgetSubscriptions.setAlternatingRowColors(True)
-        self.treeWidgetSubscriptions.setSelectionMode(QtGui.QAbstractItemView.SingleSelection)
-        self.treeWidgetSubscriptions.setSelectionBehavior(QtGui.QAbstractItemView.SelectRows)
-        self.treeWidgetSubscriptions.setObjectName(_fromUtf8("treeWidgetSubscriptions"))
-        self.treeWidgetSubscriptions.resize(200, self.treeWidgetSubscriptions.height())
-        icon5 = QtGui.QIcon()
-        icon5.addPixmap(QtGui.QPixmap(_fromUtf8(":/newPrefix/images/subscriptions.png")), QtGui.QIcon.Selected, QtGui.QIcon.Off)
-        self.treeWidgetSubscriptions.headerItem().setIcon(0, icon5)
-        self.verticalSplitter_3.addWidget(self.treeWidgetSubscriptions)
-        self.pushButtonAddSubscription = QtGui.QPushButton(self.subscriptions)
-        self.pushButtonAddSubscription.setObjectName(_fromUtf8("pushButtonAddSubscription"))
-        self.pushButtonAddSubscription.resize(200, self.pushButtonAddSubscription.height())
-        self.verticalSplitter_3.addWidget(self.pushButtonAddSubscription)
-        self.verticalSplitter_3.setStretchFactor(0, 1)
-        self.verticalSplitter_3.setStretchFactor(1, 0)
-        self.verticalSplitter_3.setCollapsible(0, False)
-        self.verticalSplitter_3.setCollapsible(1, False)
-        self.verticalSplitter_3.handle(1).setEnabled(False)
-        self.horizontalSplitter_4.addWidget(self.verticalSplitter_3)
-        self.verticalSplitter_4 = settingsmixin.SSplitter()
-        self.verticalSplitter_4.setObjectName(_fromUtf8("verticalSplitter_4"))
-        self.verticalSplitter_4.setOrientation(QtCore.Qt.Vertical)
-        self.horizontalSplitter_2 = QtGui.QSplitter()
-        self.horizontalSplitter_2.setObjectName(_fromUtf8("horizontalSplitter_2"))
-        self.inboxSearchLineEditSubscriptions = QtGui.QLineEdit(self.subscriptions)
-        self.inboxSearchLineEditSubscriptions.setObjectName(_fromUtf8("inboxSearchLineEditSubscriptions"))
-        self.horizontalSplitter_2.addWidget(self.inboxSearchLineEditSubscriptions)
-        self.inboxSearchOptionSubscriptions = QtGui.QComboBox(self.subscriptions)
-        self.inboxSearchOptionSubscriptions.setObjectName(_fromUtf8("inboxSearchOptionSubscriptions"))
-        self.inboxSearchOptionSubscriptions.addItem(_fromUtf8(""))
-        self.inboxSearchOptionSubscriptions.addItem(_fromUtf8(""))
-        self.inboxSearchOptionSubscriptions.addItem(_fromUtf8(""))
-        self.inboxSearchOptionSubscriptions.addItem(_fromUtf8(""))
-        self.inboxSearchOptionSubscriptions.addItem(_fromUtf8(""))
-        self.inboxSearchOptionSubscriptions.setSizeAdjustPolicy(QtGui.QComboBox.AdjustToContents)
-        self.horizontalSplitter_2.addWidget(self.inboxSearchOptionSubscriptions)
-        self.horizontalSplitter_2.handle(1).setEnabled(False)
-        self.horizontalSplitter_2.setStretchFactor(0, 1)
-        self.horizontalSplitter_2.setStretchFactor(1, 0)
-        self.verticalSplitter_4.addWidget(self.horizontalSplitter_2)
-        self.tableWidgetInboxSubscriptions = settingsmixin.STableWidget(self.subscriptions)
-        self.tableWidgetInboxSubscriptions.setEditTriggers(QtGui.QAbstractItemView.NoEditTriggers)
-        self.tableWidgetInboxSubscriptions.setAlternatingRowColors(True)
-        self.tableWidgetInboxSubscriptions.setSelectionMode(QtGui.QAbstractItemView.ExtendedSelection)
-        self.tableWidgetInboxSubscriptions.setSelectionBehavior(QtGui.QAbstractItemView.SelectRows)
-        self.tableWidgetInboxSubscriptions.setWordWrap(False)
-        self.tableWidgetInboxSubscriptions.setObjectName(_fromUtf8("tableWidgetInboxSubscriptions"))
-        self.tableWidgetInboxSubscriptions.setColumnCount(4)
-        self.tableWidgetInboxSubscriptions.setRowCount(0)
-        item = QtGui.QTableWidgetItem()
-        self.tableWidgetInboxSubscriptions.setHorizontalHeaderItem(0, item)
-        item = QtGui.QTableWidgetItem()
-        self.tableWidgetInboxSubscriptions.setHorizontalHeaderItem(1, item)
-        item = QtGui.QTableWidgetItem()
-        self.tableWidgetInboxSubscriptions.setHorizontalHeaderItem(2, item)
-        item = QtGui.QTableWidgetItem()
-        self.tableWidgetInboxSubscriptions.setHorizontalHeaderItem(3, item)
-        self.tableWidgetInboxSubscriptions.horizontalHeader().setCascadingSectionResizes(True)
-        self.tableWidgetInboxSubscriptions.horizontalHeader().setDefaultSectionSize(200)
-        self.tableWidgetInboxSubscriptions.horizontalHeader().setHighlightSections(False)
-        self.tableWidgetInboxSubscriptions.horizontalHeader().setMinimumSectionSize(27)
-        self.tableWidgetInboxSubscriptions.horizontalHeader().setSortIndicatorShown(False)
-        self.tableWidgetInboxSubscriptions.horizontalHeader().setStretchLastSection(True)
-        self.tableWidgetInboxSubscriptions.verticalHeader().setVisible(False)
-        self.tableWidgetInboxSubscriptions.verticalHeader().setDefaultSectionSize(26)
-        self.verticalSplitter_4.addWidget(self.tableWidgetInboxSubscriptions)
-        self.textEditInboxMessageSubscriptions = MessageView(self.subscriptions)
-        self.textEditInboxMessageSubscriptions.setBaseSize(QtCore.QSize(0, 500))
-        self.textEditInboxMessageSubscriptions.setReadOnly(True)
-        self.textEditInboxMessageSubscriptions.setObjectName(_fromUtf8("textEditInboxMessageSubscriptions"))
-        self.verticalSplitter_4.addWidget(self.textEditInboxMessageSubscriptions)
-        self.verticalSplitter_4.setStretchFactor(0, 0)
-        self.verticalSplitter_4.setStretchFactor(1, 1)
-        self.verticalSplitter_4.setStretchFactor(2, 2)
-        self.verticalSplitter_4.setCollapsible(0, False)
-        self.verticalSplitter_4.setCollapsible(1, False)
-        self.verticalSplitter_4.setCollapsible(2, False)
-        self.verticalSplitter_4.handle(1).setEnabled(False)
-        self.horizontalSplitter_4.addWidget(self.verticalSplitter_4)
-        self.horizontalSplitter_4.setStretchFactor(0, 0)
-        self.horizontalSplitter_4.setStretchFactor(1, 1)
-        self.horizontalSplitter_4.setCollapsible(0, False)
-        self.horizontalSplitter_4.setCollapsible(1, False)
-        self.gridLayout_3.addWidget(self.horizontalSplitter_4, 0, 0, 1, 1)
-        icon6 = QtGui.QIcon()
-        icon6.addPixmap(QtGui.QPixmap(_fromUtf8(":/newPrefix/images/subscriptions.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
-        self.tabWidget.addTab(self.subscriptions, icon6, _fromUtf8(""))
-        self.chans = QtGui.QWidget()
-        self.chans.setObjectName(_fromUtf8("chans"))
-        self.gridLayout_4 = QtGui.QGridLayout(self.chans)
-        self.gridLayout_4.setObjectName(_fromUtf8("gridLayout_4"))
-        self.horizontalSplitter_7 = settingsmixin.SSplitter()
-        self.horizontalSplitter_7.setObjectName(_fromUtf8("horizontalSplitter_7"))
-        self.verticalSplitter_17 = settingsmixin.SSplitter()
-        self.verticalSplitter_17.setObjectName(_fromUtf8("verticalSplitter_17"))
-        self.verticalSplitter_17.setOrientation(QtCore.Qt.Vertical)
-        self.treeWidgetChans = settingsmixin.STreeWidget(self.chans)
-        self.treeWidgetChans.setFrameShadow(QtGui.QFrame.Sunken)
-        self.treeWidgetChans.setLineWidth(1)
-        self.treeWidgetChans.setAlternatingRowColors(True)
-        self.treeWidgetChans.setSelectionMode(QtGui.QAbstractItemView.SingleSelection)
-        self.treeWidgetChans.setSelectionBehavior(QtGui.QAbstractItemView.SelectRows)
-        self.treeWidgetChans.setObjectName(_fromUtf8("treeWidgetChans"))
-        self.treeWidgetChans.resize(200, self.treeWidgetChans.height())
-        icon7 = QtGui.QIcon()
-        icon7.addPixmap(QtGui.QPixmap(_fromUtf8(":/newPrefix/images/can-icon-16px.png")), QtGui.QIcon.Selected, QtGui.QIcon.Off)
-        self.treeWidgetChans.headerItem().setIcon(0, icon7)
-        self.verticalSplitter_17.addWidget(self.treeWidgetChans)
-        self.pushButtonAddChan = QtGui.QPushButton(self.chans)
-        self.pushButtonAddChan.setObjectName(_fromUtf8("pushButtonAddChan"))
-        self.pushButtonAddChan.resize(200, self.pushButtonAddChan.height())
-        self.verticalSplitter_17.addWidget(self.pushButtonAddChan)
-        self.verticalSplitter_17.setStretchFactor(0, 1)
-        self.verticalSplitter_17.setStretchFactor(1, 0)
-        self.verticalSplitter_17.setCollapsible(0, False)
-        self.verticalSplitter_17.setCollapsible(1, False)
-        self.verticalSplitter_17.handle(1).setEnabled(False)
-        self.horizontalSplitter_7.addWidget(self.verticalSplitter_17)
-        self.verticalSplitter_8 = settingsmixin.SSplitter()
-        self.verticalSplitter_8.setObjectName(_fromUtf8("verticalSplitter_8"))
-        self.verticalSplitter_8.setOrientation(QtCore.Qt.Vertical)
-        self.horizontalSplitter_6 = QtGui.QSplitter()
-        self.horizontalSplitter_6.setObjectName(_fromUtf8("horizontalSplitter_6"))
-        self.inboxSearchLineEditChans = QtGui.QLineEdit(self.chans)
-        self.inboxSearchLineEditChans.setObjectName(_fromUtf8("inboxSearchLineEditChans"))
-        self.horizontalSplitter_6.addWidget(self.inboxSearchLineEditChans)
-        self.inboxSearchOptionChans = QtGui.QComboBox(self.chans)
-        self.inboxSearchOptionChans.setObjectName(_fromUtf8("inboxSearchOptionChans"))
-        self.inboxSearchOptionChans.addItem(_fromUtf8(""))
-        self.inboxSearchOptionChans.addItem(_fromUtf8(""))
-        self.inboxSearchOptionChans.addItem(_fromUtf8(""))
-        self.inboxSearchOptionChans.addItem(_fromUtf8(""))
-        self.inboxSearchOptionChans.addItem(_fromUtf8(""))
-        self.inboxSearchOptionChans.setSizeAdjustPolicy(QtGui.QComboBox.AdjustToContents)
-        self.horizontalSplitter_6.addWidget(self.inboxSearchOptionChans)
-        self.horizontalSplitter_6.handle(1).setEnabled(False)
-        self.horizontalSplitter_6.setStretchFactor(0, 1)
-        self.horizontalSplitter_6.setStretchFactor(1, 0)
-        self.verticalSplitter_8.addWidget(self.horizontalSplitter_6)
-        self.tableWidgetInboxChans = settingsmixin.STableWidget(self.chans)
-        self.tableWidgetInboxChans.setEditTriggers(QtGui.QAbstractItemView.NoEditTriggers)
-        self.tableWidgetInboxChans.setAlternatingRowColors(True)
-        self.tableWidgetInboxChans.setSelectionMode(QtGui.QAbstractItemView.ExtendedSelection)
-        self.tableWidgetInboxChans.setSelectionBehavior(QtGui.QAbstractItemView.SelectRows)
-        self.tableWidgetInboxChans.setWordWrap(False)
-        self.tableWidgetInboxChans.setObjectName(_fromUtf8("tableWidgetInboxChans"))
-        self.tableWidgetInboxChans.setColumnCount(4)
-        self.tableWidgetInboxChans.setRowCount(0)
-        item = QtGui.QTableWidgetItem()
-        self.tableWidgetInboxChans.setHorizontalHeaderItem(0, item)
-        item = QtGui.QTableWidgetItem()
-        self.tableWidgetInboxChans.setHorizontalHeaderItem(1, item)
-        item = QtGui.QTableWidgetItem()
-        self.tableWidgetInboxChans.setHorizontalHeaderItem(2, item)
-        item = QtGui.QTableWidgetItem()
-        self.tableWidgetInboxChans.setHorizontalHeaderItem(3, item)
-        self.tableWidgetInboxChans.horizontalHeader().setCascadingSectionResizes(True)
-        self.tableWidgetInboxChans.horizontalHeader().setDefaultSectionSize(200)
-        self.tableWidgetInboxChans.horizontalHeader().setHighlightSections(False)
-        self.tableWidgetInboxChans.horizontalHeader().setMinimumSectionSize(27)
-        self.tableWidgetInboxChans.horizontalHeader().setSortIndicatorShown(False)
-        self.tableWidgetInboxChans.horizontalHeader().setStretchLastSection(True)
-        self.tableWidgetInboxChans.verticalHeader().setVisible(False)
-        self.tableWidgetInboxChans.verticalHeader().setDefaultSectionSize(26)
-        self.verticalSplitter_8.addWidget(self.tableWidgetInboxChans)
-        self.textEditInboxMessageChans = MessageView(self.chans)
-        self.textEditInboxMessageChans.setBaseSize(QtCore.QSize(0, 500))
-        self.textEditInboxMessageChans.setReadOnly(True)
-        self.textEditInboxMessageChans.setObjectName(_fromUtf8("textEditInboxMessageChans"))
-        self.verticalSplitter_8.addWidget(self.textEditInboxMessageChans)
-        self.verticalSplitter_8.setStretchFactor(0, 0)
-        self.verticalSplitter_8.setStretchFactor(1, 1)
-        self.verticalSplitter_8.setStretchFactor(2, 2)
-        self.verticalSplitter_8.setCollapsible(0, False)
-        self.verticalSplitter_8.setCollapsible(1, False)
-        self.verticalSplitter_8.setCollapsible(2, False)
-        self.verticalSplitter_8.handle(1).setEnabled(False)
-        self.horizontalSplitter_7.addWidget(self.verticalSplitter_8)
-        self.horizontalSplitter_7.setStretchFactor(0, 0)
-        self.horizontalSplitter_7.setStretchFactor(1, 1)
-        self.horizontalSplitter_7.setCollapsible(0, False)
-        self.horizontalSplitter_7.setCollapsible(1, False)
-        self.gridLayout_4.addWidget(self.horizontalSplitter_7, 0, 0, 1, 1)
-        icon8 = QtGui.QIcon()
-        icon8.addPixmap(QtGui.QPixmap(_fromUtf8(":/newPrefix/images/can-icon-16px.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
-        self.tabWidget.addTab(self.chans, icon8, _fromUtf8(""))
-        self.blackwhitelist = Blacklist()
-        self.tabWidget.addTab(self.blackwhitelist, QtGui.QIcon(":/newPrefix/images/blacklist.png"), "")
-        # Initialize the Blacklist or Whitelist
-        if BMConfigParser().get('bitmessagesettings', 'blackwhitelist') == 'white':
-            self.blackwhitelist.radioButtonWhitelist.click()
-        self.blackwhitelist.rerenderBlackWhiteList()
-
-        self.networkstatus = NetworkStatus()
-        self.tabWidget.addTab(self.networkstatus, QtGui.QIcon(":/newPrefix/images/networkstatus.png"), "")
-        self.gridLayout_10.addWidget(self.tabWidget, 0, 0, 1, 1)
-        MainWindow.setCentralWidget(self.centralwidget)
-        self.menubar = QtGui.QMenuBar(MainWindow)
-        self.menubar.setGeometry(QtCore.QRect(0, 0, 885, 27))
-        self.menubar.setObjectName(_fromUtf8("menubar"))
-        self.menuFile = QtGui.QMenu(self.menubar)
-        self.menuFile.setObjectName(_fromUtf8("menuFile"))
-        self.menuSettings = QtGui.QMenu(self.menubar)
-        self.menuSettings.setObjectName(_fromUtf8("menuSettings"))
-        self.menuHelp = QtGui.QMenu(self.menubar)
-        self.menuHelp.setObjectName(_fromUtf8("menuHelp"))
-        MainWindow.setMenuBar(self.menubar)
-        self.statusbar = QtGui.QStatusBar(MainWindow)
-        self.statusbar.setMaximumSize(QtCore.QSize(16777215, 22))
-        self.statusbar.setObjectName(_fromUtf8("statusbar"))
-        MainWindow.setStatusBar(self.statusbar)
-        self.actionImport_keys = QtGui.QAction(MainWindow)
-        self.actionImport_keys.setObjectName(_fromUtf8("actionImport_keys"))
-        self.actionManageKeys = QtGui.QAction(MainWindow)
-        self.actionManageKeys.setCheckable(False)
-        self.actionManageKeys.setEnabled(True)
-        icon = QtGui.QIcon.fromTheme(_fromUtf8("dialog-password"))
-        self.actionManageKeys.setIcon(icon)
-        self.actionManageKeys.setObjectName(_fromUtf8("actionManageKeys"))
-        self.actionNetworkSwitch = QtGui.QAction(MainWindow)
-        self.actionNetworkSwitch.setObjectName(_fromUtf8("actionNetworkSwitch"))
-        self.actionExit = QtGui.QAction(MainWindow)
-        icon = QtGui.QIcon.fromTheme(_fromUtf8("application-exit"))
-        self.actionExit.setIcon(icon)
-        self.actionExit.setObjectName(_fromUtf8("actionExit"))
-        self.actionHelp = QtGui.QAction(MainWindow)
-        icon = QtGui.QIcon.fromTheme(_fromUtf8("help-contents"))
-        self.actionHelp.setIcon(icon)
-        self.actionHelp.setObjectName(_fromUtf8("actionHelp"))
-        self.actionSupport = QtGui.QAction(MainWindow)
-        icon = QtGui.QIcon.fromTheme(_fromUtf8("help-support"))
-        self.actionSupport.setIcon(icon)
-        self.actionSupport.setObjectName(_fromUtf8("actionSupport"))
-        self.actionAbout = QtGui.QAction(MainWindow)
-        icon = QtGui.QIcon.fromTheme(_fromUtf8("help-about"))
-        self.actionAbout.setIcon(icon)
-        self.actionAbout.setObjectName(_fromUtf8("actionAbout"))
-        self.actionSettings = QtGui.QAction(MainWindow)
-        icon = QtGui.QIcon.fromTheme(_fromUtf8("document-properties"))
-        self.actionSettings.setIcon(icon)
-        self.actionSettings.setObjectName(_fromUtf8("actionSettings"))
-        self.actionRegenerateDeterministicAddresses = QtGui.QAction(MainWindow)
-        icon = QtGui.QIcon.fromTheme(_fromUtf8("view-refresh"))
-        self.actionRegenerateDeterministicAddresses.setIcon(icon)
-        self.actionRegenerateDeterministicAddresses.setObjectName(_fromUtf8("actionRegenerateDeterministicAddresses"))
-        self.actionDeleteAllTrashedMessages = QtGui.QAction(MainWindow)
-        icon = QtGui.QIcon.fromTheme(_fromUtf8("user-trash"))
-        self.actionDeleteAllTrashedMessages.setIcon(icon)
-        self.actionDeleteAllTrashedMessages.setObjectName(_fromUtf8("actionDeleteAllTrashedMessages"))
-        self.actionJoinChan = QtGui.QAction(MainWindow)
-        icon = QtGui.QIcon.fromTheme(_fromUtf8("contact-new"))
-        self.actionJoinChan.setIcon(icon)
-        self.actionJoinChan.setObjectName(_fromUtf8("actionJoinChan"))
-        self.menuFile.addAction(self.actionManageKeys)
-        self.menuFile.addAction(self.actionDeleteAllTrashedMessages)
-        self.menuFile.addAction(self.actionRegenerateDeterministicAddresses)
-        self.menuFile.addAction(self.actionNetworkSwitch)
-        self.menuFile.addAction(self.actionExit)
-        self.menuSettings.addAction(self.actionSettings)
-        self.menuHelp.addAction(self.actionHelp)
-        self.menuHelp.addAction(self.actionSupport)
-        self.menuHelp.addAction(self.actionAbout)
-        self.menubar.addAction(self.menuFile.menuAction())
-        self.menubar.addAction(self.menuSettings.menuAction())
-        self.menubar.addAction(self.menuHelp.menuAction())
-
-        self.retranslateUi(MainWindow)
-        self.tabWidget.setCurrentIndex(
-            self.tabWidget.indexOf(self.inbox)
-        )
-        self.tabWidgetSend.setCurrentIndex(
-            self.tabWidgetSend.indexOf(self.sendDirect)
-        )
-        QtCore.QMetaObject.connectSlotsByName(MainWindow)
-        MainWindow.setTabOrder(self.tableWidgetInbox, self.textEditInboxMessage)
-        MainWindow.setTabOrder(self.textEditInboxMessage, self.comboBoxSendFrom)
-        MainWindow.setTabOrder(self.comboBoxSendFrom, self.lineEditTo)
-        MainWindow.setTabOrder(self.lineEditTo, self.lineEditSubject)
-        MainWindow.setTabOrder(self.lineEditSubject, self.textEditMessage)
-        MainWindow.setTabOrder(self.textEditMessage, self.pushButtonAddSubscription)
-
-    def updateNetworkSwitchMenuLabel(self, dontconnect=None):
-        if dontconnect is None:
-            dontconnect = BMConfigParser().safeGetBoolean(
-                'bitmessagesettings', 'dontconnect')
-        self.actionNetworkSwitch.setText(
-            _translate("MainWindow", "Go online", None)
-            if dontconnect else
-            _translate("MainWindow", "Go offline", None)
-        )
-
-    def retranslateUi(self, MainWindow):
-        MainWindow.setWindowTitle(_translate("MainWindow", "Bitmessage", None))
-        self.treeWidgetYourIdentities.headerItem().setText(0, _translate("MainWindow", "Identities", None))
-        self.pushButtonNewAddress.setText(_translate("MainWindow", "New Identity", None))
-        self.inboxSearchLineEdit.setPlaceholderText(_translate("MainWindow", "Search", None))
-        self.inboxSearchOption.setItemText(0, _translate("MainWindow", "All", None))
-        self.inboxSearchOption.setItemText(1, _translate("MainWindow", "To", None))
-        self.inboxSearchOption.setItemText(2, _translate("MainWindow", "From", None))
-        self.inboxSearchOption.setItemText(3, _translate("MainWindow", "Subject", None))
-        self.inboxSearchOption.setItemText(4, _translate("MainWindow", "Message", None))
-        self.tableWidgetInbox.setSortingEnabled(True)
-        item = self.tableWidgetInbox.horizontalHeaderItem(0)
-        item.setText(_translate("MainWindow", "To", None))
-        item = self.tableWidgetInbox.horizontalHeaderItem(1)
-        item.setText(_translate("MainWindow", "From", None))
-        item = self.tableWidgetInbox.horizontalHeaderItem(2)
-        item.setText(_translate("MainWindow", "Subject", None))
-        item = self.tableWidgetInbox.horizontalHeaderItem(3)
-        item.setText(_translate("MainWindow", "Received", None))
-        self.tabWidget.setTabText(self.tabWidget.indexOf(self.inbox), _translate("MainWindow", "Messages", None))
-        self.tableWidgetAddressBook.setSortingEnabled(True)
-        item = self.tableWidgetAddressBook.horizontalHeaderItem(0)
-        item.setText(_translate("MainWindow", "Address book", None))
-        item = self.tableWidgetAddressBook.horizontalHeaderItem(1)
-        item.setText(_translate("MainWindow", "Address", None))
-        self.pushButtonAddAddressBook.setText(_translate("MainWindow", "Add Contact", None))
-        self.pushButtonFetchNamecoinID.setText(_translate("MainWindow", "Fetch Namecoin ID", None))
-        self.label_3.setText(_translate("MainWindow", "Subject:", None))
-        self.label_2.setText(_translate("MainWindow", "From:", None))
-        self.label.setText(_translate("MainWindow", "To:", None))
-        #self.textEditMessage.setHtml("")
-        self.tabWidgetSend.setTabText(self.tabWidgetSend.indexOf(self.sendDirect), _translate("MainWindow", "Send ordinary Message", None))
-        self.label_8.setText(_translate("MainWindow", "From:", None))
-        self.label_7.setText(_translate("MainWindow", "Subject:", None))
-        #self.textEditMessageBroadcast.setHtml("")
-        self.tabWidgetSend.setTabText(self.tabWidgetSend.indexOf(self.sendBroadcast), _translate("MainWindow", "Send Message to your Subscribers", None))
-        self.pushButtonTTL.setText(_translate("MainWindow", "TTL:", None))
-        hours = 48
-        try:
-            hours = int(BMConfigParser().getint('bitmessagesettings', 'ttl')/60/60)
-        except:
-            pass
-        self.labelHumanFriendlyTTLDescription.setText(_translate("MainWindow", "%n hour(s)", None, QtCore.QCoreApplication.CodecForTr, hours))
-        self.pushButtonClear.setText(_translate("MainWindow", "Clear", None))
-        self.pushButtonSend.setText(_translate("MainWindow", "Send", None))
-        self.tabWidget.setTabText(self.tabWidget.indexOf(self.send), _translate("MainWindow", "Send", None))
-        self.treeWidgetSubscriptions.headerItem().setText(0, _translate("MainWindow", "Subscriptions", None))
-        self.pushButtonAddSubscription.setText(_translate("MainWindow", "Add new Subscription", None))
-        self.inboxSearchLineEditSubscriptions.setPlaceholderText(_translate("MainWindow", "Search", None))
-        self.inboxSearchOptionSubscriptions.setItemText(0, _translate("MainWindow", "All", None))
-        self.inboxSearchOptionSubscriptions.setItemText(1, _translate("MainWindow", "To", None))
-        self.inboxSearchOptionSubscriptions.setItemText(2, _translate("MainWindow", "From", None))
-        self.inboxSearchOptionSubscriptions.setItemText(3, _translate("MainWindow", "Subject", None))
-        self.inboxSearchOptionSubscriptions.setItemText(4, _translate("MainWindow", "Message", None))
-        self.tableWidgetInboxSubscriptions.setSortingEnabled(True)
-        item = self.tableWidgetInboxSubscriptions.horizontalHeaderItem(0)
-        item.setText(_translate("MainWindow", "To", None))
-        item = self.tableWidgetInboxSubscriptions.horizontalHeaderItem(1)
-        item.setText(_translate("MainWindow", "From", None))
-        item = self.tableWidgetInboxSubscriptions.horizontalHeaderItem(2)
-        item.setText(_translate("MainWindow", "Subject", None))
-        item = self.tableWidgetInboxSubscriptions.horizontalHeaderItem(3)
-        item.setText(_translate("MainWindow", "Received", None))
-        self.tabWidget.setTabText(self.tabWidget.indexOf(self.subscriptions), _translate("MainWindow", "Subscriptions", None))
-        self.treeWidgetChans.headerItem().setText(0, _translate("MainWindow", "Chans", None))
-        self.pushButtonAddChan.setText(_translate("MainWindow", "Add Chan", None))
-        self.inboxSearchLineEditChans.setPlaceholderText(_translate("MainWindow", "Search", None))
-        self.inboxSearchOptionChans.setItemText(0, _translate("MainWindow", "All", None))
-        self.inboxSearchOptionChans.setItemText(1, _translate("MainWindow", "To", None))
-        self.inboxSearchOptionChans.setItemText(2, _translate("MainWindow", "From", None))
-        self.inboxSearchOptionChans.setItemText(3, _translate("MainWindow", "Subject", None))
-        self.inboxSearchOptionChans.setItemText(4, _translate("MainWindow", "Message", None))
-        self.tableWidgetInboxChans.setSortingEnabled(True)
-        item = self.tableWidgetInboxChans.horizontalHeaderItem(0)
-        item.setText(_translate("MainWindow", "To", None))
-        item = self.tableWidgetInboxChans.horizontalHeaderItem(1)
-        item.setText(_translate("MainWindow", "From", None))
-        item = self.tableWidgetInboxChans.horizontalHeaderItem(2)
-        item.setText(_translate("MainWindow", "Subject", None))
-        item = self.tableWidgetInboxChans.horizontalHeaderItem(3)
-        item.setText(_translate("MainWindow", "Received", None))
-        self.tabWidget.setTabText(self.tabWidget.indexOf(self.chans), _translate("MainWindow", "Chans", None))
-        self.blackwhitelist.retranslateUi()
-        self.tabWidget.setTabText(self.tabWidget.indexOf(self.blackwhitelist), _translate("blacklist", "Blacklist", None))
-        self.networkstatus.retranslateUi()
-        self.tabWidget.setTabText(self.tabWidget.indexOf(self.networkstatus), _translate("networkstatus", "Network Status", None))
-        self.menuFile.setTitle(_translate("MainWindow", "File", None))
-        self.menuSettings.setTitle(_translate("MainWindow", "Settings", None))
-        self.menuHelp.setTitle(_translate("MainWindow", "Help", None))
-        self.actionImport_keys.setText(_translate("MainWindow", "Import keys", None))
-        self.actionManageKeys.setText(_translate("MainWindow", "Manage keys", None))
-        self.actionExit.setText(_translate("MainWindow", "Quit", None))
-        self.actionExit.setShortcut(_translate("MainWindow", "Ctrl+Q", None))
-        self.actionHelp.setText(_translate("MainWindow", "Help", None))
-        self.actionHelp.setShortcut(_translate("MainWindow", "F1", None))
-        self.actionSupport.setText(_translate("MainWindow", "Contact support", None))
-        self.actionAbout.setText(_translate("MainWindow", "About", None))
-        self.actionSettings.setText(_translate("MainWindow", "Settings", None))
-        self.actionRegenerateDeterministicAddresses.setText(_translate("MainWindow", "Regenerate deterministic addresses", None))
-        self.actionDeleteAllTrashedMessages.setText(_translate("MainWindow", "Delete all trashed messages", None))
-        self.actionJoinChan.setText(_translate("MainWindow", "Join / Create chan", None))
-
-import bitmessage_icons_rc
-
-if __name__ == "__main__":
-    import sys
-    
-    app = QtGui.QApplication(sys.argv)
-    MainWindow = settingsmixin.SMainWindow()
-    ui = Ui_MainWindow()
-    ui.setupUi(MainWindow)
-    MainWindow.show()
-    sys.exit(app.exec_())
-
diff --git a/src/bitmessageqt/bitmessageui.ui b/src/bitmessageqt/bitmessageui.ui
deleted file mode 100644
index fef40be6..00000000
--- a/src/bitmessageqt/bitmessageui.ui
+++ /dev/null
@@ -1,1454 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ui version="4.0">
- <class>MainWindow</class>
- <widget class="QMainWindow" name="MainWindow">
-  <property name="geometry">
-   <rect>
-    <x>0</x>
-    <y>0</y>
-    <width>885</width>
-    <height>580</height>
-   </rect>
-  </property>
-  <property name="windowTitle">
-   <string>Bitmessage</string>
-  </property>
-  <property name="windowIcon">
-   <iconset resource="bitmessage_icons.qrc">
-    <normaloff>:/newPrefix/images/can-icon-24px.png</normaloff>:/newPrefix/images/can-icon-24px.png</iconset>
-  </property>
-  <property name="tabShape">
-   <enum>QTabWidget::Rounded</enum>
-  </property>
-  <widget class="QWidget" name="centralwidget">
-   <layout class="QGridLayout" name="gridLayout_10">
-    <item row="0" column="0">
-     <widget class="QTabWidget" name="tabWidget">
-      <property name="sizePolicy">
-       <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
-        <horstretch>0</horstretch>
-        <verstretch>0</verstretch>
-       </sizepolicy>
-      </property>
-      <property name="minimumSize">
-       <size>
-        <width>0</width>
-        <height>0</height>
-       </size>
-      </property>
-      <property name="baseSize">
-       <size>
-        <width>0</width>
-        <height>0</height>
-       </size>
-      </property>
-      <property name="font">
-       <font>
-        <pointsize>9</pointsize>
-       </font>
-      </property>
-      <property name="tabPosition">
-       <enum>QTabWidget::North</enum>
-      </property>
-      <property name="tabShape">
-       <enum>QTabWidget::Rounded</enum>
-      </property>
-      <property name="currentIndex">
-       <number>0</number>
-      </property>
-      <widget class="QWidget" name="inbox">
-       <attribute name="icon">
-        <iconset resource="bitmessage_icons.qrc">
-         <normaloff>:/newPrefix/images/inbox.png</normaloff>:/newPrefix/images/inbox.png</iconset>
-       </attribute>
-       <attribute name="title">
-        <string>Messages</string>
-       </attribute>
-       <layout class="QGridLayout" name="gridLayout">
-        <item row="0" column="0">
-         <layout class="QHBoxLayout" name="horizontalLayout_3">
-          <item>
-           <layout class="QVBoxLayout" name="verticalLayout_12">
-            <item>
-             <widget class="QTreeWidget" name="treeWidgetYourIdentities">
-              <property name="maximumSize">
-               <size>
-                <width>200</width>
-                <height>16777215</height>
-               </size>
-              </property>
-              <column>
-               <property name="text">
-                <string>Identities</string>
-               </property>
-               <property name="icon">
-                <iconset>
-                 <selectedoff>:/newPrefix/images/identities.png</selectedoff>
-                </iconset>
-               </property>
-              </column>
-             </widget>
-            </item>
-            <item>
-             <widget class="QPushButton" name="pushButtonNewAddress">
-              <property name="maximumSize">
-               <size>
-                <width>200</width>
-                <height>16777215</height>
-               </size>
-              </property>
-              <property name="text">
-               <string>New Indentitiy</string>
-              </property>
-             </widget>
-            </item>
-           </layout>
-          </item>
-          <item>
-           <layout class="QVBoxLayout" name="verticalLayout_7">
-            <item>
-             <layout class="QHBoxLayout" name="horizontalLayoutSearch">
-              <property name="topMargin">
-               <number>0</number>
-              </property>
-              <item>
-               <widget class="QLineEdit" name="inboxSearchLineEdit">
-                <property name="placeholderText">
-                 <string>Search</string>
-                </property>
-               </widget>
-              </item>
-              <item>
-               <widget class="QComboBox" name="inboxSearchOption">
-                <item>
-                 <property name="text">
-                  <string>All</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>To</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>From</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>Subject</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>Message</string>
-                 </property>
-                </item>
-               </widget>
-              </item>
-             </layout>
-            </item>
-            <item>
-             <widget class="QTableWidget" name="tableWidgetInbox">
-              <property name="editTriggers">
-               <set>QAbstractItemView::NoEditTriggers</set>
-              </property>
-              <property name="alternatingRowColors">
-               <bool>true</bool>
-              </property>
-              <property name="selectionMode">
-               <enum>QAbstractItemView::ExtendedSelection</enum>
-              </property>
-              <property name="selectionBehavior">
-               <enum>QAbstractItemView::SelectRows</enum>
-              </property>
-              <property name="sortingEnabled">
-               <bool>true</bool>
-              </property>
-              <property name="wordWrap">
-               <bool>false</bool>
-              </property>
-              <attribute name="horizontalHeaderCascadingSectionResizes">
-               <bool>true</bool>
-              </attribute>
-              <attribute name="horizontalHeaderDefaultSectionSize">
-               <number>200</number>
-              </attribute>
-              <attribute name="horizontalHeaderHighlightSections">
-               <bool>false</bool>
-              </attribute>
-              <attribute name="horizontalHeaderMinimumSectionSize">
-               <number>27</number>
-              </attribute>
-              <attribute name="horizontalHeaderShowSortIndicator" stdset="0">
-               <bool>false</bool>
-              </attribute>
-              <attribute name="horizontalHeaderStretchLastSection">
-               <bool>true</bool>
-              </attribute>
-              <attribute name="verticalHeaderVisible">
-               <bool>false</bool>
-              </attribute>
-              <attribute name="verticalHeaderDefaultSectionSize">
-               <number>26</number>
-              </attribute>
-              <column>
-               <property name="text">
-                <string>To</string>
-               </property>
-              </column>
-              <column>
-               <property name="text">
-                <string>From</string>
-               </property>
-              </column>
-              <column>
-               <property name="text">
-                <string>Subject</string>
-               </property>
-              </column>
-              <column>
-               <property name="text">
-                <string>Received</string>
-               </property>
-              </column>
-             </widget>
-            </item>
-            <item>
-             <widget class="QTextEdit" name="textEditInboxMessage">
-              <property name="baseSize">
-               <size>
-                <width>0</width>
-                <height>500</height>
-               </size>
-              </property>
-              <property name="readOnly">
-               <bool>true</bool>
-              </property>
-             </widget>
-            </item>
-           </layout>
-          </item>
-         </layout>
-        </item>
-       </layout>
-      </widget>
-      <widget class="QWidget" name="send">
-       <attribute name="icon">
-        <iconset resource="bitmessage_icons.qrc">
-         <normaloff>:/newPrefix/images/send.png</normaloff>:/newPrefix/images/send.png</iconset>
-       </attribute>
-       <attribute name="title">
-        <string>Send</string>
-       </attribute>
-       <layout class="QGridLayout" name="gridLayout_7">
-        <item row="0" column="0">
-         <layout class="QHBoxLayout" name="horizontalLayout">
-          <item>
-           <layout class="QVBoxLayout" name="verticalLayout_2">
-            <item>
-             <widget class="QTableWidget" name="tableWidgetAddressBook">
-              <property name="maximumSize">
-               <size>
-                <width>200</width>
-                <height>16777215</height>
-               </size>
-              </property>
-              <property name="alternatingRowColors">
-               <bool>true</bool>
-              </property>
-              <property name="selectionMode">
-               <enum>QAbstractItemView::ExtendedSelection</enum>
-              </property>
-              <property name="selectionBehavior">
-               <enum>QAbstractItemView::SelectRows</enum>
-              </property>
-              <property name="sortingEnabled">
-               <bool>true</bool>
-              </property>
-              <attribute name="horizontalHeaderCascadingSectionResizes">
-               <bool>true</bool>
-              </attribute>
-              <attribute name="horizontalHeaderDefaultSectionSize">
-               <number>200</number>
-              </attribute>
-              <attribute name="horizontalHeaderHighlightSections">
-               <bool>false</bool>
-              </attribute>
-              <attribute name="horizontalHeaderStretchLastSection">
-               <bool>true</bool>
-              </attribute>
-              <attribute name="verticalHeaderVisible">
-               <bool>false</bool>
-              </attribute>
-              <column>
-               <property name="text">
-                <string>Address book</string>
-               </property>
-               <property name="icon">
-                <iconset>
-                 <selectedoff>:/newPrefix/images/addressbook.png</selectedoff>
-                </iconset>
-               </property>
-              </column>
-              <column>
-               <property name="text">
-                <string>Address</string>
-               </property>
-              </column>
-             </widget>
-            </item>
-            <item>
-             <widget class="QPushButton" name="pushButtonAddAddressBook">
-              <property name="maximumSize">
-               <size>
-                <width>200</width>
-                <height>16777215</height>
-               </size>
-              </property>
-              <property name="text">
-               <string>Add Contact</string>
-              </property>
-             </widget>
-            </item>
-            <item>
-             <widget class="QPushButton" name="pushButtonFetchNamecoinID">
-              <property name="maximumSize">
-               <size>
-                <width>200</width>
-                <height>16777215</height>
-               </size>
-              </property>
-              <property name="font">
-               <font>
-                <pointsize>9</pointsize>
-               </font>
-              </property>
-              <property name="text">
-               <string>Fetch Namecoin ID</string>
-              </property>
-             </widget>
-            </item>
-           </layout>
-          </item>
-          <item>
-           <layout class="QVBoxLayout" name="verticalLayout">
-            <item>
-             <widget class="QTabWidget" name="tabWidgetSend">
-              <property name="currentIndex">
-               <number>0</number>
-              </property>
-              <widget class="QWidget" name="tab">
-               <attribute name="title">
-                <string>Send ordinary Message</string>
-               </attribute>
-               <layout class="QGridLayout" name="gridLayout_8">
-                <item row="0" column="0">
-                 <layout class="QVBoxLayout" name="verticalLayout_5">
-                  <item>
-                   <layout class="QGridLayout" name="gridLayout_2">
-                    <item row="2" column="0">
-                     <widget class="QLabel" name="label_3">
-                      <property name="text">
-                       <string>Subject:</string>
-                      </property>
-                     </widget>
-                    </item>
-                    <item row="0" column="0">
-                     <widget class="QLabel" name="label_2">
-                      <property name="text">
-                       <string>From:</string>
-                      </property>
-                     </widget>
-                    </item>
-                    <item row="2" column="1">
-                     <widget class="QLineEdit" name="lineEditSubject">
-                      <property name="text">
-                       <string/>
-                      </property>
-                     </widget>
-                    </item>
-                    <item row="1" column="0">
-                     <widget class="QLabel" name="label">
-                      <property name="text">
-                       <string>To:</string>
-                      </property>
-                     </widget>
-                    </item>
-                    <item row="0" column="1">
-                     <widget class="QComboBox" name="comboBoxSendFrom">
-                      <property name="minimumSize">
-                       <size>
-                        <width>300</width>
-                        <height>0</height>
-                       </size>
-                      </property>
-                     </widget>
-                    </item>
-                    <item row="1" column="1">
-                     <widget class="QLineEdit" name="lineEditTo"/>
-                    </item>
-                   </layout>
-                  </item>
-                  <item>
-                   <widget class="QTextEdit" name="textEditMessage">
-                    <property name="html">
-                     <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
-&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
-p, li { white-space: pre-wrap; }
-&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Droid Sans'; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;
-&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'MS Shell Dlg 2';&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
-                    </property>
-                   </widget>
-                  </item>
-                 </layout>
-                </item>
-               </layout>
-              </widget>
-              <widget class="QWidget" name="tab_2">
-               <attribute name="title">
-                <string>Send Message to your Subscribers</string>
-               </attribute>
-               <layout class="QGridLayout" name="gridLayout_9">
-                <item row="0" column="0">
-                 <layout class="QVBoxLayout" name="verticalLayout_6">
-                  <item>
-                   <layout class="QGridLayout" name="gridLayout_5">
-                    <item row="0" column="0">
-                     <widget class="QLabel" name="label_8">
-                      <property name="text">
-                       <string>From:</string>
-                      </property>
-                     </widget>
-                    </item>
-                    <item row="1" column="1">
-                     <widget class="QLineEdit" name="lineEditSubjectBroadcast">
-                      <property name="text">
-                       <string/>
-                      </property>
-                     </widget>
-                    </item>
-                    <item row="1" column="0">
-                     <widget class="QLabel" name="label_7">
-                      <property name="text">
-                       <string>Subject:</string>
-                      </property>
-                     </widget>
-                    </item>
-                    <item row="0" column="1">
-                     <widget class="QComboBox" name="comboBoxSendFromBroadcast">
-                      <property name="minimumSize">
-                       <size>
-                        <width>300</width>
-                        <height>0</height>
-                       </size>
-                      </property>
-                     </widget>
-                    </item>
-                   </layout>
-                  </item>
-                  <item>
-                   <widget class="QTextEdit" name="textEditMessageBroadcast">
-                    <property name="html">
-                     <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
-&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
-p, li { white-space: pre-wrap; }
-&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Droid Sans'; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;
-&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'MS Shell Dlg 2';&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
-                    </property>
-                   </widget>
-                  </item>
-                 </layout>
-                </item>
-               </layout>
-              </widget>
-             </widget>
-            </item>
-            <item>
-             <layout class="QHBoxLayout" name="horizontalLayout_5">
-              <item>
-               <widget class="QPushButton" name="pushButtonTTL">
-                <property name="sizePolicy">
-                 <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
-                  <horstretch>0</horstretch>
-                  <verstretch>0</verstretch>
-                 </sizepolicy>
-                </property>
-                <property name="maximumSize">
-                 <size>
-                  <width>32</width>
-                  <height>16777215</height>
-                 </size>
-                </property>
-                <property name="palette">
-                 <palette>
-                  <active>
-                   <colorrole role="ButtonText">
-                    <brush brushstyle="SolidPattern">
-                     <color alpha="255">
-                      <red>0</red>
-                      <green>0</green>
-                      <blue>255</blue>
-                     </color>
-                    </brush>
-                   </colorrole>
-                  </active>
-                  <inactive>
-                   <colorrole role="ButtonText">
-                    <brush brushstyle="SolidPattern">
-                     <color alpha="255">
-                      <red>0</red>
-                      <green>0</green>
-                      <blue>255</blue>
-                     </color>
-                    </brush>
-                   </colorrole>
-                  </inactive>
-                  <disabled>
-                   <colorrole role="ButtonText">
-                    <brush brushstyle="SolidPattern">
-                     <color alpha="255">
-                      <red>120</red>
-                      <green>120</green>
-                      <blue>120</blue>
-                     </color>
-                    </brush>
-                   </colorrole>
-                  </disabled>
-                 </palette>
-                </property>
-                <property name="font">
-                 <font>
-                  <underline>true</underline>
-                 </font>
-                </property>
-                <property name="text">
-                 <string>TTL:</string>
-                </property>
-                <property name="flat">
-                 <bool>true</bool>
-                </property>
-               </widget>
-              </item>
-              <item>
-               <widget class="QSlider" name="horizontalSliderTTL">
-                <property name="minimumSize">
-                 <size>
-                  <width>35</width>
-                  <height>0</height>
-                 </size>
-                </property>
-                <property name="maximumSize">
-                 <size>
-                  <width>70</width>
-                  <height>16777215</height>
-                 </size>
-                </property>
-                <property name="orientation">
-                 <enum>Qt::Horizontal</enum>
-                </property>
-                <property name="invertedAppearance">
-                 <bool>false</bool>
-                </property>
-                <property name="invertedControls">
-                 <bool>false</bool>
-                </property>
-               </widget>
-              </item>
-              <item>
-               <widget class="QLabel" name="labelHumanFriendlyTTLDescription">
-                <property name="sizePolicy">
-                 <sizepolicy hsizetype="Fixed" vsizetype="Preferred">
-                  <horstretch>0</horstretch>
-                  <verstretch>0</verstretch>
-                 </sizepolicy>
-                </property>
-                <property name="minimumSize">
-                 <size>
-                  <width>45</width>
-                  <height>0</height>
-                 </size>
-                </property>
-                <property name="maximumSize">
-                 <size>
-                  <width>45</width>
-                  <height>16777215</height>
-                 </size>
-                </property>
-                <property name="text">
-                 <string>X days</string>
-                </property>
-               </widget>
-              </item>
-              <item>
-               <widget class="QPushButton" name="pushButtonSend">
-                <property name="maximumSize">
-                 <size>
-                  <width>16777215</width>
-                  <height>16777215</height>
-                 </size>
-                </property>
-                <property name="text">
-                 <string>Send</string>
-                </property>
-               </widget>
-              </item>
-             </layout>
-            </item>
-           </layout>
-          </item>
-         </layout>
-        </item>
-       </layout>
-       <zorder></zorder>
-      </widget>
-      <widget class="QWidget" name="subscriptions">
-       <attribute name="icon">
-        <iconset resource="bitmessage_icons.qrc">
-         <normaloff>:/newPrefix/images/subscriptions.png</normaloff>:/newPrefix/images/subscriptions.png</iconset>
-       </attribute>
-       <attribute name="title">
-        <string>Subscriptions</string>
-       </attribute>
-       <layout class="QGridLayout" name="gridLayout_3">
-        <item row="0" column="0">
-         <layout class="QHBoxLayout" name="horizontalLayout_4">
-          <item>
-           <layout class="QVBoxLayout" name="verticalLayout_3">
-            <item>
-             <widget class="QTreeWidget" name="treeWidgetSubscriptions">
-              <property name="maximumSize">
-               <size>
-                <width>200</width>
-                <height>16777215</height>
-               </size>
-              </property>
-              <property name="alternatingRowColors">
-               <bool>true</bool>
-              </property>
-              <property name="selectionMode">
-               <enum>QAbstractItemView::SingleSelection</enum>
-              </property>
-              <property name="selectionBehavior">
-               <enum>QAbstractItemView::SelectRows</enum>
-              </property>
-              <column>
-               <property name="text">
-                <string>Subscriptions</string>
-               </property>
-               <property name="icon">
-                <iconset>
-                 <selectedoff>:/newPrefix/images/subscriptions.png</selectedoff>
-                </iconset>
-               </property>
-              </column>
-             </widget>
-            </item>
-            <item>
-             <widget class="QPushButton" name="pushButtonAddSubscription">
-              <property name="maximumSize">
-               <size>
-                <width>200</width>
-                <height>16777215</height>
-               </size>
-              </property>
-              <property name="text">
-               <string>Add new Subscription</string>
-              </property>
-             </widget>
-            </item>
-           </layout>
-          </item>
-          <item>
-           <layout class="QVBoxLayout" name="verticalLayout_4">
-            <item>
-             <layout class="QHBoxLayout" name="horizontalLayout_2">
-              <item>
-               <widget class="QLineEdit" name="inboxSearchLineEditSubscriptions">
-                <property name="placeholderText">
-                 <string>Search</string>
-                </property>
-               </widget>
-              </item>
-              <item>
-               <widget class="QComboBox" name="inboxSearchOptionSubscriptions">
-                <item>
-                 <property name="text">
-                  <string>All</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>To</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>From</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>Subject</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>Message</string>
-                 </property>
-                </item>
-               </widget>
-              </item>
-             </layout>
-            </item>
-            <item>
-             <widget class="QTableWidget" name="tableWidgetInboxSubscriptions">
-              <property name="editTriggers">
-               <set>QAbstractItemView::NoEditTriggers</set>
-              </property>
-              <property name="alternatingRowColors">
-               <bool>true</bool>
-              </property>
-              <property name="selectionMode">
-               <enum>QAbstractItemView::ExtendedSelection</enum>
-              </property>
-              <property name="selectionBehavior">
-               <enum>QAbstractItemView::SelectRows</enum>
-              </property>
-              <property name="sortingEnabled">
-               <bool>true</bool>
-              </property>
-              <property name="wordWrap">
-               <bool>false</bool>
-              </property>
-              <attribute name="horizontalHeaderCascadingSectionResizes">
-               <bool>true</bool>
-              </attribute>
-              <attribute name="horizontalHeaderDefaultSectionSize">
-               <number>200</number>
-              </attribute>
-              <attribute name="horizontalHeaderHighlightSections">
-               <bool>false</bool>
-              </attribute>
-              <attribute name="horizontalHeaderMinimumSectionSize">
-               <number>27</number>
-              </attribute>
-              <attribute name="horizontalHeaderShowSortIndicator" stdset="0">
-               <bool>false</bool>
-              </attribute>
-              <attribute name="horizontalHeaderStretchLastSection">
-               <bool>true</bool>
-              </attribute>
-              <attribute name="verticalHeaderVisible">
-               <bool>false</bool>
-              </attribute>
-              <attribute name="verticalHeaderDefaultSectionSize">
-               <number>26</number>
-              </attribute>
-              <column>
-               <property name="text">
-                <string>To</string>
-               </property>
-              </column>
-              <column>
-               <property name="text">
-                <string>From</string>
-               </property>
-              </column>
-              <column>
-               <property name="text">
-                <string>Subject</string>
-               </property>
-              </column>
-              <column>
-               <property name="text">
-                <string>Received</string>
-               </property>
-              </column>
-             </widget>
-            </item>
-            <item>
-             <widget class="QTextEdit" name="textEditInboxMessageSubscriptions">
-              <property name="baseSize">
-               <size>
-                <width>0</width>
-                <height>500</height>
-               </size>
-              </property>
-              <property name="readOnly">
-               <bool>true</bool>
-              </property>
-             </widget>
-            </item>
-           </layout>
-          </item>
-         </layout>
-        </item>
-       </layout>
-      </widget>
-      <widget class="QWidget" name="tab_3">
-       <attribute name="icon">
-        <iconset resource="bitmessage_icons.qrc">
-         <normaloff>:/newPrefix/images/can-icon-16px.png</normaloff>:/newPrefix/images/can-icon-16px.png</iconset>
-       </attribute>
-       <attribute name="title">
-        <string>Chans</string>
-       </attribute>
-       <layout class="QGridLayout" name="gridLayout_4">
-        <item row="0" column="0">
-         <layout class="QHBoxLayout" name="horizontalLayout_7">
-          <item>
-           <layout class="QVBoxLayout" name="verticalLayout_17">
-            <item>
-             <widget class="QTreeWidget" name="treeWidgetChans">
-              <property name="maximumSize">
-               <size>
-                <width>200</width>
-                <height>16777215</height>
-               </size>
-              </property>
-              <property name="frameShadow">
-               <enum>QFrame::Sunken</enum>
-              </property>
-              <property name="lineWidth">
-               <number>1</number>
-              </property>
-              <property name="alternatingRowColors">
-               <bool>true</bool>
-              </property>
-              <property name="selectionMode">
-               <enum>QAbstractItemView::SingleSelection</enum>
-              </property>
-              <property name="selectionBehavior">
-               <enum>QAbstractItemView::SelectRows</enum>
-              </property>
-              <column>
-               <property name="text">
-                <string>Chans</string>
-               </property>
-               <property name="icon">
-                <iconset>
-                 <selectedoff>:/newPrefix/images/can-icon-16px.png</selectedoff>
-                </iconset>
-               </property>
-              </column>
-             </widget>
-            </item>
-            <item>
-             <widget class="QPushButton" name="pushButtonAddChan">
-              <property name="maximumSize">
-               <size>
-                <width>200</width>
-                <height>16777215</height>
-               </size>
-              </property>
-              <property name="text">
-               <string>Add Chan</string>
-              </property>
-             </widget>
-            </item>
-           </layout>
-          </item>
-          <item>
-           <layout class="QVBoxLayout" name="verticalLayout_8">
-            <item>
-             <layout class="QHBoxLayout" name="horizontalLayout_6">
-              <item>
-               <widget class="QLineEdit" name="inboxSearchLineEditChans">
-                <property name="placeholderText">
-                 <string>Search</string>
-                </property>
-               </widget>
-              </item>
-              <item>
-               <widget class="QComboBox" name="inboxSearchOptionChans">
-                <item>
-                 <property name="text">
-                  <string>All</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>To</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>From</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>Subject</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>Message</string>
-                 </property>
-                </item>
-               </widget>
-              </item>
-             </layout>
-            </item>
-            <item>
-             <widget class="QTableWidget" name="tableWidgetInboxChans">
-              <property name="editTriggers">
-               <set>QAbstractItemView::NoEditTriggers</set>
-              </property>
-              <property name="alternatingRowColors">
-               <bool>true</bool>
-              </property>
-              <property name="selectionMode">
-               <enum>QAbstractItemView::ExtendedSelection</enum>
-              </property>
-              <property name="selectionBehavior">
-               <enum>QAbstractItemView::SelectRows</enum>
-              </property>
-              <property name="sortingEnabled">
-               <bool>true</bool>
-              </property>
-              <property name="wordWrap">
-               <bool>false</bool>
-              </property>
-              <attribute name="horizontalHeaderCascadingSectionResizes">
-               <bool>true</bool>
-              </attribute>
-              <attribute name="horizontalHeaderDefaultSectionSize">
-               <number>200</number>
-              </attribute>
-              <attribute name="horizontalHeaderHighlightSections">
-               <bool>false</bool>
-              </attribute>
-              <attribute name="horizontalHeaderMinimumSectionSize">
-               <number>27</number>
-              </attribute>
-              <attribute name="horizontalHeaderShowSortIndicator" stdset="0">
-               <bool>false</bool>
-              </attribute>
-              <attribute name="horizontalHeaderStretchLastSection">
-               <bool>true</bool>
-              </attribute>
-              <attribute name="verticalHeaderVisible">
-               <bool>false</bool>
-              </attribute>
-              <attribute name="verticalHeaderDefaultSectionSize">
-               <number>26</number>
-              </attribute>
-              <column>
-               <property name="text">
-                <string>To</string>
-               </property>
-              </column>
-              <column>
-               <property name="text">
-                <string>From</string>
-               </property>
-              </column>
-              <column>
-               <property name="text">
-                <string>Subject</string>
-               </property>
-              </column>
-              <column>
-               <property name="text">
-                <string>Received</string>
-               </property>
-              </column>
-             </widget>
-            </item>
-            <item>
-             <widget class="QTextEdit" name="textEditInboxMessageChans">
-              <property name="baseSize">
-               <size>
-                <width>0</width>
-                <height>500</height>
-               </size>
-              </property>
-              <property name="readOnly">
-               <bool>true</bool>
-              </property>
-             </widget>
-            </item>
-           </layout>
-          </item>
-         </layout>
-        </item>
-       </layout>
-      </widget>
-      <widget class="QWidget" name="blackwhitelist">
-       <attribute name="icon">
-        <iconset resource="bitmessage_icons.qrc">
-         <normaloff>:/newPrefix/images/blacklist.png</normaloff>:/newPrefix/images/blacklist.png</iconset>
-       </attribute>
-       <attribute name="title">
-        <string>Blacklist</string>
-       </attribute>
-       <layout class="QGridLayout" name="gridLayout_6">
-        <item row="0" column="0" colspan="2">
-         <widget class="QRadioButton" name="radioButtonBlacklist">
-          <property name="text">
-           <string>Use a Blacklist (Allow all incoming messages except those on the Blacklist)</string>
-          </property>
-          <property name="checked">
-           <bool>true</bool>
-          </property>
-         </widget>
-        </item>
-        <item row="1" column="0" colspan="2">
-         <widget class="QRadioButton" name="radioButtonWhitelist">
-          <property name="text">
-           <string>Use a Whitelist (Block all incoming messages except those on the Whitelist)</string>
-          </property>
-         </widget>
-        </item>
-        <item row="2" column="0">
-         <widget class="QPushButton" name="pushButtonAddBlacklist">
-          <property name="text">
-           <string>Add new entry</string>
-          </property>
-         </widget>
-        </item>
-        <item row="2" column="1">
-         <spacer name="horizontalSpacer_8">
-          <property name="orientation">
-           <enum>Qt::Horizontal</enum>
-          </property>
-          <property name="sizeHint" stdset="0">
-           <size>
-            <width>689</width>
-            <height>20</height>
-           </size>
-          </property>
-         </spacer>
-        </item>
-        <item row="3" column="0" colspan="2">
-         <widget class="QTableWidget" name="tableWidgetBlacklist">
-          <property name="alternatingRowColors">
-           <bool>true</bool>
-          </property>
-          <property name="selectionMode">
-           <enum>QAbstractItemView::SingleSelection</enum>
-          </property>
-          <property name="selectionBehavior">
-           <enum>QAbstractItemView::SelectRows</enum>
-          </property>
-          <property name="sortingEnabled">
-           <bool>true</bool>
-          </property>
-          <attribute name="horizontalHeaderCascadingSectionResizes">
-           <bool>true</bool>
-          </attribute>
-          <attribute name="horizontalHeaderDefaultSectionSize">
-           <number>400</number>
-          </attribute>
-          <attribute name="horizontalHeaderHighlightSections">
-           <bool>false</bool>
-          </attribute>
-          <attribute name="horizontalHeaderShowSortIndicator" stdset="0">
-           <bool>false</bool>
-          </attribute>
-          <attribute name="horizontalHeaderStretchLastSection">
-           <bool>true</bool>
-          </attribute>
-          <attribute name="verticalHeaderVisible">
-           <bool>false</bool>
-          </attribute>
-          <column>
-           <property name="text">
-            <string>Name or Label</string>
-           </property>
-          </column>
-          <column>
-           <property name="text">
-            <string>Address</string>
-           </property>
-          </column>
-         </widget>
-        </item>
-       </layout>
-      </widget>
-      <widget class="QWidget" name="networkstatus">
-       <attribute name="icon">
-        <iconset resource="bitmessage_icons.qrc">
-         <normaloff>:/newPrefix/images/networkstatus.png</normaloff>:/newPrefix/images/networkstatus.png</iconset>
-       </attribute>
-       <attribute name="title">
-        <string>Network Status</string>
-       </attribute>
-       <widget class="QPushButton" name="pushButtonStatusIcon">
-        <property name="geometry">
-         <rect>
-          <x>680</x>
-          <y>440</y>
-          <width>21</width>
-          <height>23</height>
-         </rect>
-        </property>
-        <property name="text">
-         <string/>
-        </property>
-        <property name="icon">
-         <iconset resource="bitmessage_icons.qrc">
-          <normaloff>:/newPrefix/images/redicon.png</normaloff>:/newPrefix/images/redicon.png</iconset>
-        </property>
-        <property name="flat">
-         <bool>true</bool>
-        </property>
-       </widget>
-       <widget class="QTableWidget" name="tableWidgetConnectionCount">
-        <property name="geometry">
-         <rect>
-          <x>20</x>
-          <y>70</y>
-          <width>241</width>
-          <height>241</height>
-         </rect>
-        </property>
-        <property name="palette">
-         <palette>
-          <active>
-           <colorrole role="Base">
-            <brush brushstyle="SolidPattern">
-             <color alpha="255">
-              <red>212</red>
-              <green>208</green>
-              <blue>200</blue>
-             </color>
-            </brush>
-           </colorrole>
-          </active>
-          <inactive>
-           <colorrole role="Base">
-            <brush brushstyle="SolidPattern">
-             <color alpha="255">
-              <red>212</red>
-              <green>208</green>
-              <blue>200</blue>
-             </color>
-            </brush>
-           </colorrole>
-          </inactive>
-          <disabled>
-           <colorrole role="Base">
-            <brush brushstyle="SolidPattern">
-             <color alpha="255">
-              <red>212</red>
-              <green>208</green>
-              <blue>200</blue>
-             </color>
-            </brush>
-           </colorrole>
-          </disabled>
-         </palette>
-        </property>
-        <property name="frameShape">
-         <enum>QFrame::Box</enum>
-        </property>
-        <property name="frameShadow">
-         <enum>QFrame::Plain</enum>
-        </property>
-        <property name="showDropIndicator" stdset="0">
-         <bool>false</bool>
-        </property>
-        <property name="alternatingRowColors">
-         <bool>true</bool>
-        </property>
-        <property name="selectionMode">
-         <enum>QAbstractItemView::NoSelection</enum>
-        </property>
-        <attribute name="horizontalHeaderCascadingSectionResizes">
-         <bool>true</bool>
-        </attribute>
-        <attribute name="horizontalHeaderHighlightSections">
-         <bool>false</bool>
-        </attribute>
-        <attribute name="horizontalHeaderStretchLastSection">
-         <bool>true</bool>
-        </attribute>
-        <attribute name="verticalHeaderVisible">
-         <bool>false</bool>
-        </attribute>
-        <column>
-         <property name="text">
-          <string>Stream #</string>
-         </property>
-        </column>
-        <column>
-         <property name="text">
-          <string>Connections</string>
-         </property>
-        </column>
-       </widget>
-       <widget class="QLabel" name="labelTotalConnections">
-        <property name="geometry">
-         <rect>
-          <x>20</x>
-          <y>30</y>
-          <width>401</width>
-          <height>16</height>
-         </rect>
-        </property>
-        <property name="text">
-         <string>Total connections:</string>
-        </property>
-       </widget>
-       <widget class="QLabel" name="labelStartupTime">
-        <property name="geometry">
-         <rect>
-          <x>320</x>
-          <y>110</y>
-          <width>331</width>
-          <height>20</height>
-         </rect>
-        </property>
-        <property name="text">
-         <string>Since startup:</string>
-        </property>
-       </widget>
-       <widget class="QLabel" name="labelMessageCount">
-        <property name="geometry">
-         <rect>
-          <x>350</x>
-          <y>130</y>
-          <width>361</width>
-          <height>16</height>
-         </rect>
-        </property>
-        <property name="text">
-         <string>Processed 0 person-to-person messages.</string>
-        </property>
-       </widget>
-       <widget class="QLabel" name="labelPubkeyCount">
-        <property name="geometry">
-         <rect>
-          <x>350</x>
-          <y>170</y>
-          <width>331</width>
-          <height>16</height>
-         </rect>
-        </property>
-        <property name="text">
-         <string>Processed 0 public keys.</string>
-        </property>
-       </widget>
-       <widget class="QLabel" name="labelBroadcastCount">
-        <property name="geometry">
-         <rect>
-          <x>350</x>
-          <y>150</y>
-          <width>351</width>
-          <height>16</height>
-         </rect>
-        </property>
-        <property name="text">
-         <string>Processed 0 broadcasts.</string>
-        </property>
-       </widget>
-       <widget class="QLabel" name="labelLookupsPerSecond">
-        <property name="geometry">
-         <rect>
-          <x>320</x>
-          <y>250</y>
-          <width>291</width>
-          <height>16</height>
-         </rect>
-        </property>
-        <property name="text">
-         <string>Inventory lookups per second: 0</string>
-        </property>
-       </widget>
-       <widget class="QLabel" name="labelBytesRecvCount">
-        <property name="geometry">
-         <rect>
-          <x>350</x>
-          <y>210</y>
-          <width>251</width>
-          <height>16</height>
-         </rect>
-        </property>
-        <property name="text">
-         <string>Down: 0 KB/s</string>
-        </property>
-       </widget>
-       <widget class="QLabel" name="labelBytesSentCount">
-        <property name="geometry">
-         <rect>
-          <x>350</x>
-          <y>230</y>
-          <width>251</width>
-          <height>16</height>
-         </rect>
-        </property>
-        <property name="text">
-         <string>Up: 0 KB/s</string>
-        </property>
-       </widget>
-      </widget>
-     </widget>
-    </item>
-   </layout>
-  </widget>
-  <widget class="QMenuBar" name="menubar">
-   <property name="geometry">
-    <rect>
-     <x>0</x>
-     <y>0</y>
-     <width>885</width>
-     <height>27</height>
-    </rect>
-   </property>
-   <widget class="QMenu" name="menuFile">
-    <property name="title">
-     <string>File</string>
-    </property>
-    <addaction name="actionManageKeys"/>
-    <addaction name="actionDeleteAllTrashedMessages"/>
-    <addaction name="actionRegenerateDeterministicAddresses"/>
-    <addaction name="actionExit"/>
-   </widget>
-   <widget class="QMenu" name="menuSettings">
-    <property name="title">
-     <string>Settings</string>
-    </property>
-    <addaction name="actionSettings"/>
-   </widget>
-   <widget class="QMenu" name="menuHelp">
-    <property name="title">
-     <string>Help</string>
-    </property>
-    <addaction name="actionHelp"/>
-    <addaction name="actionAbout"/>
-   </widget>
-   <addaction name="menuFile"/>
-   <addaction name="menuSettings"/>
-   <addaction name="menuHelp"/>
-  </widget>
-  <widget class="QStatusBar" name="statusbar">
-   <property name="maximumSize">
-    <size>
-     <width>16777215</width>
-     <height>22</height>
-    </size>
-   </property>
-  </widget>
-  <action name="actionImport_keys">
-   <property name="text">
-    <string>Import keys</string>
-   </property>
-  </action>
-  <action name="actionManageKeys">
-   <property name="checkable">
-    <bool>false</bool>
-   </property>
-   <property name="enabled">
-    <bool>true</bool>
-   </property>
-   <property name="icon">
-    <iconset theme="dialog-password">
-     <normaloff/>
-    </iconset>
-   </property>
-   <property name="text">
-    <string>Manage keys</string>
-   </property>
-  </action>
-  <action name="actionExit">
-   <property name="icon">
-    <iconset theme="application-exit">
-     <normaloff/>
-    </iconset>
-   </property>
-   <property name="text">
-    <string>Quit</string>
-   </property>
-   <property name="shortcut">
-    <string>Ctrl+Q</string>
-   </property>
-  </action>
-  <action name="actionHelp">
-   <property name="icon">
-    <iconset theme="help-contents">
-     <normaloff/>
-    </iconset>
-   </property>
-   <property name="text">
-    <string>Help</string>
-   </property>
-   <property name="shortcut">
-    <string>F1</string>
-   </property>
-  </action>
-  <action name="actionAbout">
-   <property name="icon">
-    <iconset theme="help-about">
-     <normaloff/>
-    </iconset>
-   </property>
-   <property name="text">
-    <string>About</string>
-   </property>
-  </action>
-  <action name="actionSettings">
-   <property name="icon">
-    <iconset theme="document-properties">
-     <normaloff/>
-    </iconset>
-   </property>
-   <property name="text">
-    <string>Settings</string>
-   </property>
-  </action>
-  <action name="actionRegenerateDeterministicAddresses">
-   <property name="icon">
-    <iconset theme="view-refresh">
-     <normaloff/>
-    </iconset>
-   </property>
-   <property name="text">
-    <string>Regenerate deterministic addresses</string>
-   </property>
-  </action>
-  <action name="actionDeleteAllTrashedMessages">
-   <property name="icon">
-    <iconset theme="user-trash">
-     <normaloff/>
-    </iconset>
-   </property>
-   <property name="text">
-    <string>Delete all trashed messages</string>
-   </property>
-  </action>
-  <action name="actionJoinChan">
-   <property name="icon">
-    <iconset theme="contact-new">
-     <normaloff/>
-    </iconset>
-   </property>
-   <property name="text">
-    <string>Join / Create chan</string>
-   </property>
-  </action>
- </widget>
- <tabstops>
-  <tabstop>tableWidgetInbox</tabstop>
-  <tabstop>textEditInboxMessage</tabstop>
-  <tabstop>comboBoxSendFrom</tabstop>
-  <tabstop>lineEditTo</tabstop>
-  <tabstop>lineEditSubject</tabstop>
-  <tabstop>textEditMessage</tabstop>
-  <tabstop>pushButtonSend</tabstop>
-  <tabstop>pushButtonAddSubscription</tabstop>
-  <tabstop>radioButtonBlacklist</tabstop>
-  <tabstop>radioButtonWhitelist</tabstop>
-  <tabstop>pushButtonAddBlacklist</tabstop>
-  <tabstop>tableWidgetBlacklist</tabstop>
-  <tabstop>tableWidgetConnectionCount</tabstop>
-  <tabstop>pushButtonStatusIcon</tabstop>
- </tabstops>
- <resources>
-  <include location="bitmessage_icons.qrc"/>
- </resources>
- <connections/>
-</ui>
diff --git a/src/bitmessageqt/blacklist.py b/src/bitmessageqt/blacklist.py
index 64413ebb..85de47e7 100644
--- a/src/bitmessageqt/blacklist.py
+++ b/src/bitmessageqt/blacklist.py
@@ -1,36 +1,25 @@
 from PyQt4 import QtCore, QtGui
-from tr import _translate
-import l10n
+
 import widgets
 from addresses import addBMIfNotPresent
 from bmconfigparser import BMConfigParser
 from dialogs import AddAddressDialog
 from helper_sql import sqlExecute, sqlQuery
-from retranslateui import RetranslateMixin
+from tr import _translate
 from utils import avatarize
 from uisignaler import UISignaler
 
 
-class Blacklist(QtGui.QWidget, RetranslateMixin):
+class Blacklist(QtGui.QWidget):
     def __init__(self, parent=None):
         super(Blacklist, self).__init__(parent)
         widgets.load('blacklist.ui', self)
 
-        QtCore.QObject.connect(self.radioButtonBlacklist, QtCore.SIGNAL(
-            "clicked()"), self.click_radioButtonBlacklist)
-        QtCore.QObject.connect(self.radioButtonWhitelist, QtCore.SIGNAL(
-            "clicked()"), self.click_radioButtonWhitelist)
-        QtCore.QObject.connect(self.pushButtonAddBlacklist, QtCore.SIGNAL(
-        "clicked()"), self.click_pushButtonAddBlacklist)
-
+        self.blacklistContextMenuToolbar.setVisible(False)
         self.init_blacklist_popup_menu()
 
-        # Initialize blacklist
-        QtCore.QObject.connect(self.tableWidgetBlacklist, QtCore.SIGNAL(
-            "itemChanged(QTableWidgetItem *)"), self.tableWidgetBlacklistItemChanged)
-
         # Set the icon sizes for the identicons
-        identicon_size = 3*7
+        identicon_size = 3 * 7
         self.tableWidgetBlacklist.setIconSize(QtCore.QSize(identicon_size, identicon_size))
 
         self.UISignalThread = UISignaler.get()
@@ -41,16 +30,12 @@ class Blacklist(QtGui.QWidget, RetranslateMixin):
         if BMConfigParser().get('bitmessagesettings', 'blackwhitelist') == 'white':
             BMConfigParser().set('bitmessagesettings', 'blackwhitelist', 'black')
             BMConfigParser().save()
-            # self.tableWidgetBlacklist.clearContents()
-            self.tableWidgetBlacklist.setRowCount(0)
             self.rerenderBlackWhiteList()
 
     def click_radioButtonWhitelist(self):
         if BMConfigParser().get('bitmessagesettings', 'blackwhitelist') == 'black':
             BMConfigParser().set('bitmessagesettings', 'blackwhitelist', 'white')
             BMConfigParser().save()
-            # self.tableWidgetBlacklist.clearContents()
-            self.tableWidgetBlacklist.setRowCount(0)
             self.rerenderBlackWhiteList()
 
     def click_pushButtonAddBlacklist(self):
@@ -105,36 +90,8 @@ class Blacklist(QtGui.QWidget, RetranslateMixin):
                     sqlExecute('''UPDATE whitelist SET label=? WHERE address=?''',
                             str(item.text()), str(addressitem.text()))
 
-    def init_blacklist_popup_menu(self, connectSignal=True):
+    def init_blacklist_popup_menu(self):
         # Popup menu for the Blacklist page
-        self.blacklistContextMenuToolbar = QtGui.QToolBar()
-        # Actions
-        self.actionBlacklistNew = self.blacklistContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Add new entry"), self.on_action_BlacklistNew)
-        self.actionBlacklistDelete = self.blacklistContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Delete"), self.on_action_BlacklistDelete)
-        self.actionBlacklistClipboard = self.blacklistContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Copy address to clipboard"),
-            self.on_action_BlacklistClipboard)
-        self.actionBlacklistEnable = self.blacklistContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Enable"), self.on_action_BlacklistEnable)
-        self.actionBlacklistDisable = self.blacklistContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Disable"), self.on_action_BlacklistDisable)
-        self.actionBlacklistSetAvatar = self.blacklistContextMenuToolbar.addAction(
-            _translate(
-                "MainWindow", "Set avatar..."),
-            self.on_action_BlacklistSetAvatar)
-        self.tableWidgetBlacklist.setContextMenuPolicy(
-            QtCore.Qt.CustomContextMenu)
-        if connectSignal:
-            self.connect(self.tableWidgetBlacklist, QtCore.SIGNAL(
-                'customContextMenuRequested(const QPoint&)'),
-                        self.on_context_menuBlacklist)
         self.popMenuBlacklist = QtGui.QMenu(self)
         # self.popMenuBlacklist.addAction( self.actionBlacklistNew )
         self.popMenuBlacklist.addAction(self.actionBlacklistDelete)
@@ -239,4 +196,3 @@ class Blacklist(QtGui.QWidget, RetranslateMixin):
 
     def on_action_BlacklistSetAvatar(self):
         self.window().on_action_SetAvatar(self.tableWidgetBlacklist)
-
diff --git a/src/bitmessageqt/blacklist.ui b/src/bitmessageqt/blacklist.ui
index 80993fac..d0de5ef0 100644
--- a/src/bitmessageqt/blacklist.ui
+++ b/src/bitmessageqt/blacklist.ui
@@ -10,6 +10,44 @@
     <height>295</height>
    </rect>
   </property>
+  <widget class="QToolBar" name="blacklistContextMenuToolbar">
+    <action name="actionBlacklistNew">
+    <property name="text">
+     <string>Add new entry</string>
+    </property>
+    </action>
+    <action name="actionBlacklistDelete">
+    <property name="text">
+     <string>Delete</string>
+    </property>
+    </action>
+    <action name="actionBlacklistClipboard">
+    <property name="text">
+     <string>Copy address to clipboard</string>
+    </property>
+    </action>
+    <action name="actionBlacklistEnable">
+    <property name="text">
+     <string>Enable</string>
+    </property>
+    </action>
+    <action name="actionBlacklistDisable">
+    <property name="text">
+     <string>Disable</string>
+    </property>
+    </action>
+    <action name="actionBlacklistSetAvatar">
+    <property name="text">
+     <string>Set avatar...</string>
+    </property>
+    </action>
+    <addaction name="actionBlacklistNew"/>
+    <addaction name="actionBlacklistDelete"/>
+    <addaction name="actionBlacklistClipboard"/>
+    <addaction name="actionBlacklistEnable"/>
+    <addaction name="actionBlacklistDisable"/>
+    <addaction name="actionBlacklistSetAvatar"/>
+  </widget>
   <layout class="QGridLayout" name="gridLayout_6">
    <item row="0" column="0" colspan="2">
     <widget class="QRadioButton" name="radioButtonBlacklist">
@@ -62,6 +100,9 @@
      <property name="sortingEnabled">
       <bool>true</bool>
      </property>
+     <property name="contextMenuPolicy">
+       <enum>Qt::CustomContextMenu</enum>
+     </property>
      <attribute name="horizontalHeaderCascadingSectionResizes">
       <bool>true</bool>
      </attribute>
@@ -104,5 +145,72 @@
  <resources>
   <include location="bitmessage_icons.qrc"/>
  </resources>
- <connections/>
+ <connections>
+  <connection>
+   <sender>radioButtonBlacklist</sender>
+   <signal>clicked()</signal>
+   <receiver>blacklist</receiver>
+   <slot>click_radioButtonBlacklist</slot>
+  </connection>
+  <connection>
+   <sender>radioButtonWhitelist</sender>
+   <signal>clicked()</signal>
+   <receiver>blacklist</receiver>
+   <slot>click_radioButtonWhitelist</slot>
+  </connection>
+  <connection>
+   <sender>pushButtonAddBlacklist</sender>
+   <signal>clicked()</signal>
+   <receiver>blacklist</receiver>
+   <slot>click_pushButtonAddBlacklist</slot>
+  </connection>
+  <connection>
+   <sender>tableWidgetBlacklist</sender>
+   <signal>itemChanged(QTableWidgetItem)</signal>
+   <receiver>blacklist</receiver>
+   <slot>tableWidgetBlacklistItemChanged</slot>
+  </connection>
+  <connection>
+   <sender>actionBlacklistNew</sender>
+   <signal>triggered()</signal>
+   <receiver>blacklist</receiver>
+   <slot>on_action_BlacklistNew</slot>
+  </connection>
+  <connection>
+   <sender>actionBlacklistDelete</sender>
+   <signal>triggered()</signal>
+   <receiver>blacklist</receiver>
+   <slot>on_action_BlacklistDelete</slot>
+  </connection>
+  <connection>
+   <sender>actionBlacklistClipboard</sender>
+   <signal>triggered()</signal>
+   <receiver>blacklist</receiver>
+   <slot>on_action_BlacklistClipboard</slot>
+  </connection>
+  <connection>
+   <sender>actionBlacklistEnable</sender>
+   <signal>triggered()</signal>
+   <receiver>blacklist</receiver>
+   <slot>on_action_BlacklistEnable</slot>
+  </connection>
+  <connection>
+   <sender>actionBlacklistDisable</sender>
+   <signal>triggered()</signal>
+   <receiver>blacklist</receiver>
+   <slot>on_action_BlacklistDisable</slot>
+  </connection>
+  <connection>
+   <sender>actionBlacklistSetAvatar</sender>
+   <signal>triggered()</signal>
+   <receiver>blacklist</receiver>
+   <slot>on_action_BlacklistSetAvatar</slot>
+  </connection>
+  <connection>
+   <sender>tableWidgetBlacklist</sender>
+   <signal>customContextMenuRequested(QPoint)</signal>
+   <receiver>blacklist</receiver>
+   <slot>on_context_menuBlacklist</slot>
+  </connection>
+  </connections>
 </ui>
diff --git a/src/bitmessageqt/dialogs.py b/src/bitmessageqt/dialogs.py
index 0dea792f..8661ebf7 100644
--- a/src/bitmessageqt/dialogs.py
+++ b/src/bitmessageqt/dialogs.py
@@ -5,26 +5,28 @@ src/bitmessageqt/dialogs.py
 
 from PyQt4 import QtGui
 
-from version import softwareVersion
-
 import paths
 import widgets
 from address_dialogs import (
-    AddAddressDialog, EmailGatewayDialog, NewAddressDialog, NewSubscriptionDialog, RegenerateAddressesDialog,
+    AddAddressDialog, EmailGatewayDialog, NewAddressDialog,
+    NewSubscriptionDialog, RegenerateAddressesDialog,
     SpecialAddressBehaviorDialog
 )
 from newchandialog import NewChanDialog
-from retranslateui import RetranslateMixin
+from settings import SettingsDialog
 from tr import _translate
+from version import softwareVersion
+
 
 __all__ = [
     "NewChanDialog", "AddAddressDialog", "NewAddressDialog",
     "NewSubscriptionDialog", "RegenerateAddressesDialog",
-    "SpecialAddressBehaviorDialog", "EmailGatewayDialog"
+    "SpecialAddressBehaviorDialog", "EmailGatewayDialog",
+    "SettingsDialog"
 ]
 
 
-class AboutDialog(QtGui.QDialog, RetranslateMixin):
+class AboutDialog(QtGui.QDialog):
     """The `About` dialog"""
     def __init__(self, parent=None):
         super(AboutDialog, self).__init__(parent)
@@ -52,7 +54,7 @@ class AboutDialog(QtGui.QDialog, RetranslateMixin):
         self.setFixedSize(QtGui.QWidget.sizeHint(self))
 
 
-class IconGlossaryDialog(QtGui.QDialog, RetranslateMixin):
+class IconGlossaryDialog(QtGui.QDialog):
     """The `Icon Glossary` dialog, explaining the status icon colors"""
     def __init__(self, parent=None, config=None):
         super(IconGlossaryDialog, self).__init__(parent)
@@ -68,7 +70,7 @@ class IconGlossaryDialog(QtGui.QDialog, RetranslateMixin):
         self.setFixedSize(QtGui.QWidget.sizeHint(self))
 
 
-class HelpDialog(QtGui.QDialog, RetranslateMixin):
+class HelpDialog(QtGui.QDialog):
     """The `Help` dialog"""
     def __init__(self, parent=None):
         super(HelpDialog, self).__init__(parent)
@@ -76,7 +78,7 @@ class HelpDialog(QtGui.QDialog, RetranslateMixin):
         self.setFixedSize(QtGui.QWidget.sizeHint(self))
 
 
-class ConnectDialog(QtGui.QDialog, RetranslateMixin):
+class ConnectDialog(QtGui.QDialog):
     """The `Connect` dialog"""
     def __init__(self, parent=None):
         super(ConnectDialog, self).__init__(parent)
diff --git a/src/bitmessageqt/main.py b/src/bitmessageqt/main.py
new file mode 100644
index 00000000..d3c7037a
--- /dev/null
+++ b/src/bitmessageqt/main.py
@@ -0,0 +1,151 @@
+import locale
+import os
+import sys
+from PyQt4 import QtCore, QtGui
+
+import l10n
+import paths
+import settingsmixin
+import widgets
+from bmconfigparser import BMConfigParser
+from debug import logger
+from foldertree import AddressBookCompleter
+from tr import _translate
+
+
+class Window(settingsmixin.SMainWindow):
+    """The main PyBitmessage's window"""
+    uifile = 'main.ui'
+
+    def __init__(self, parent=None):
+        super(Window, self).__init__(parent)
+        widgets.load(self.uifile, self)
+
+        self.qmytranslator = self.qsystranslator = None
+
+        self.blackwhitelist.rerenderBlackWhiteList()
+
+        addressBookCompleter = AddressBookCompleter()
+        addressBookCompleter.setCompletionMode(
+            QtGui.QCompleter.PopupCompletion)
+        addressBookCompleter.setCaseSensitivity(QtCore.Qt.CaseInsensitive)
+        addressBookCompleterModel = QtGui.QStringListModel()
+        addressBookCompleter.setModel(addressBookCompleterModel)
+        self.lineEditTo.setCompleter(addressBookCompleter)
+
+        self.lineEditTo.cursorPositionChanged.connect(
+            addressBookCompleter.onCursorPositionChanged)
+
+        # Put the colored icon on the status bar
+        self.statusbar.insertPermanentWidget(0, self.pushButtonStatusIcon)
+
+        # Hide all menu action containers
+        for toolbar in (
+            self.inboxContextMenuToolbar,
+            self.addressContextMenuToolbarYourIdentities,
+            self.addressContextMenuToolbar,
+            self.addressBookContextMenuToolbar,
+            self.subscriptionsContextMenuToolbar,
+            self.sentContextMenuToolbar
+        ):
+            toolbar.setVisible(False)
+
+        # splitters
+        for splitter in (
+            self.inboxHorizontalSplitter,
+            self.sendHorizontalSplitter,
+            self.subscriptionsHorizontalSplitter,
+            self.chansHorizontalSplitter
+        ):
+            splitter.setStretchFactor(0, 0)
+            splitter.setStretchFactor(1, 1)
+            splitter.setCollapsible(0, False)
+            splitter.setCollapsible(1, False)
+
+        for splitter in (
+            self.inboxMessagecontrolSplitter,
+            self.subscriptionsMessagecontrolSplitter,
+            self.chansMessagecontrolSplitter
+        ):
+            splitter.setStretchFactor(0, 0)
+            splitter.setStretchFactor(1, 1)
+            splitter.setStretchFactor(2, 2)
+            splitter.setCollapsible(0, False)
+            splitter.setCollapsible(1, False)
+            splitter.setCollapsible(2, False)
+            splitter.handle(1).setEnabled(False)
+
+        self.sendMessagecontrolSplitter.handle(1).setEnabled(False)
+
+    def updateNetworkSwitchMenuLabel(self, dontconnect=None):
+        """
+        Set the label for "Go online"/"Go offline" menu action
+        depending on 'dontconnect' setting
+        """
+        if dontconnect is None:
+            dontconnect = BMConfigParser().safeGetBoolean(
+                'bitmessagesettings', 'dontconnect')
+        self.actionNetworkSwitch.setText(
+            _translate("MainWindow", "Go online", None)
+            if dontconnect else
+            _translate("MainWindow", "Go offline", None)
+        )
+
+    def retranslateUi(self):
+        """Update widgets' texts which is not taken from ui-file"""
+        self.updateHumanFriendlyTTLDescription(int(
+            self.horizontalSliderTTL.tickPosition() ** 3.199 + 3600))
+        self.networkstatus.retranslateUi()
+
+    # FIXME: this is not best place for this func
+    def change_translation(self, newlocale=None):
+        """Change translation language for the application"""
+        if newlocale is None:
+            newlocale = l10n.getTranslationLanguage()
+        try:
+            if not self.qmytranslator.isEmpty():
+                QtGui.QApplication.removeTranslator(self.qmytranslator)
+        except:
+            pass
+        try:
+            if not self.qsystranslator.isEmpty():
+                QtGui.QApplication.removeTranslator(self.qsystranslator)
+        except:
+            pass
+
+        self.qmytranslator = QtCore.QTranslator()
+        translationpath = os.path.join(
+            paths.codePath(), 'translations', 'bitmessage_' + newlocale)
+        self.qmytranslator.load(translationpath)
+        QtGui.QApplication.installTranslator(self.qmytranslator)
+
+        self.qsystranslator = QtCore.QTranslator()
+        if paths.frozen:
+            translationpath = os.path.join(
+                paths.codePath(), 'translations', 'qt_' + newlocale)
+        else:
+            translationpath = os.path.join(
+                str(QtCore.QLibraryInfo.location(
+                    QtCore.QLibraryInfo.TranslationsPath)), 'qt_' + newlocale)
+        self.qsystranslator.load(translationpath)
+        QtGui.QApplication.installTranslator(self.qsystranslator)
+
+        lang = locale.normalize(l10n.getTranslationLanguage())
+        langs = [
+            lang.split(".")[0] + "." + l10n.encoding,
+            lang.split(".")[0] + "." + 'UTF-8',
+            lang
+        ]
+        if 'win32' in sys.platform or 'win64' in sys.platform:
+            langs = [l10n.getWindowsLocale(lang)]
+        for lang in langs:
+            try:
+                l10n.setlocale(locale.LC_ALL, lang)
+                if 'win32' not in sys.platform and 'win64' not in sys.platform:
+                    l10n.encoding = locale.nl_langinfo(locale.CODESET)
+                else:
+                    l10n.encoding = locale.getlocale()[1]
+                logger.info("Successfully set locale to %s", lang)
+                break
+            except:
+                logger.error("Failed to set locale to %s", lang, exc_info=True)
diff --git a/src/bitmessageqt/main.ui b/src/bitmessageqt/main.ui
new file mode 100644
index 00000000..01516539
--- /dev/null
+++ b/src/bitmessageqt/main.ui
@@ -0,0 +1,2962 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<ui version="4.0">
+ <class>MainWindow</class>
+ <widget class="QMainWindow" name="MainWindow">
+  <property name="geometry">
+   <rect>
+    <x>0</x>
+    <y>0</y>
+    <width>885</width>
+    <height>580</height>
+   </rect>
+  </property>
+  <property name="windowTitle">
+   <string>Bitmessage</string>
+  </property>
+  <property name="windowIcon">
+   <iconset resource="bitmessage_icons.qrc">
+    <normaloff>:/newPrefix/images/can-icon-24px.png</normaloff>:/newPrefix/images/can-icon-24px.png</iconset>
+  </property>
+  <property name="tabShape">
+   <enum>QTabWidget::Rounded</enum>
+  </property>
+  <widget class="QWidget" name="centralwidget">
+   <layout class="QVBoxLayout">
+    <property name="leftMargin">
+     <number>8</number>
+    </property>
+    <property name="topMargin">
+     <number>8</number>
+    </property>
+    <property name="rightMargin">
+     <number>8</number>
+    </property>
+    <property name="bottomMargin">
+     <number>8</number>
+    </property>
+    <item>
+     <widget class="QTabWidget" name="tabWidget">
+      <property name="sizePolicy">
+       <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
+        <horstretch>0</horstretch>
+        <verstretch>0</verstretch>
+       </sizepolicy>
+      </property>
+      <property name="minimumSize">
+       <size>
+        <width>0</width>
+        <height>0</height>
+       </size>
+      </property>
+      <property name="baseSize">
+       <size>
+        <width>0</width>
+        <height>0</height>
+       </size>
+      </property>
+      <property name="font">
+       <font>
+        <pointsize>9</pointsize>
+       </font>
+      </property>
+      <property name="tabPosition">
+       <enum>QTabWidget::North</enum>
+      </property>
+      <property name="tabShape">
+       <enum>QTabWidget::Rounded</enum>
+      </property>
+      <property name="currentIndex">
+       <number>0</number>
+      </property>
+      <widget class="QWidget" name="inbox">
+       <attribute name="icon">
+        <iconset resource="bitmessage_icons.qrc">
+         <normaloff>:/newPrefix/images/inbox.png</normaloff>:/newPrefix/images/inbox.png</iconset>
+       </attribute>
+       <attribute name="title">
+        <string>Messages</string>
+       </attribute>
+       <layout class="QVBoxLayout" name="inboxLayout">
+        <property name="leftMargin">
+         <number>8</number>
+        </property>
+        <property name="topMargin">
+         <number>8</number>
+        </property>
+        <property name="rightMargin">
+         <number>8</number>
+        </property>
+        <property name="bottomMargin">
+         <number>8</number>
+        </property>
+        <item>
+         <widget class="SSplitter" name="inboxHorizontalSplitter">
+          <property name="orientation">
+           <enum>Qt::Horizontal</enum>
+          </property>
+          <widget class="QWidget" name="inboxIdentitiesWidget">
+           <layout class="QVBoxLayout">
+            <item>
+             <widget class="STreeWidget" name="treeWidgetYourIdentities">
+              <property name="baseSize">
+               <size>
+                <width>200</width>
+                <height>0</height>
+               </size>
+              </property>
+              <property name="contextMenuPolicy">
+               <enum>Qt::CustomContextMenu</enum>
+              </property>
+              <column>
+               <property name="text">
+                <string>Identities</string>
+               </property>
+               <property name="icon">
+                <iconset>
+                 <selectedoff>:/newPrefix/images/identities.png</selectedoff>
+                </iconset>
+               </property>
+              </column>
+             </widget>
+            </item>
+            <item>
+             <widget class="QPushButton" name="pushButtonNewAddress">
+              <property name="maximumSize">
+               <size>
+                <width>200</width>
+                <height>16777215</height>
+               </size>
+              </property>
+              <property name="text">
+               <string>New Indentitiy</string>
+              </property>
+             </widget>
+            </item>
+           </layout>
+          </widget>
+          <widget class="SSplitter" name="inboxMessagecontrolSplitter">
+           <property name="orientation">
+            <enum>Qt::Vertical</enum>
+           </property>
+           <widget class="QWidget" name="searchWidget">
+            <layout class="QHBoxLayout" name="searchLayout">
+             <item>
+              <widget class="QLineEdit" name="inboxSearchLineEdit">
+               <property name="placeholderText">
+                <string>Search</string>
+               </property>
+              </widget>
+             </item>
+             <item>
+              <widget class="QComboBox" name="inboxSearchOption">
+               <item>
+                <property name="text">
+                 <string>All</string>
+                </property>
+               </item>
+               <item>
+                <property name="text">
+                 <string>To</string>
+                </property>
+               </item>
+               <item>
+                <property name="text">
+                 <string>From</string>
+                </property>
+               </item>
+               <item>
+                <property name="text">
+                 <string>Subject</string>
+                </property>
+               </item>
+               <item>
+                <property name="text">
+                 <string>Message</string>
+                </property>
+               </item>
+              </widget>
+             </item>
+            </layout>
+           </widget>
+           <widget class="STableWidget" name="tableWidgetInbox">
+            <property name="contextMenuPolicy">
+             <enum>Qt::CustomContextMenu</enum>
+            </property>
+            <property name="editTriggers">
+             <set>QAbstractItemView::NoEditTriggers</set>
+            </property>
+            <property name="alternatingRowColors">
+             <bool>true</bool>
+            </property>
+            <property name="selectionMode">
+             <enum>QAbstractItemView::ExtendedSelection</enum>
+            </property>
+            <property name="selectionBehavior">
+             <enum>QAbstractItemView::SelectRows</enum>
+            </property>
+            <property name="sortingEnabled">
+             <bool>true</bool>
+            </property>
+            <property name="wordWrap">
+             <bool>false</bool>
+            </property>
+            <attribute name="horizontalHeaderCascadingSectionResizes">
+             <bool>true</bool>
+            </attribute>
+            <attribute name="horizontalHeaderDefaultSectionSize">
+             <number>200</number>
+            </attribute>
+            <attribute name="horizontalHeaderHighlightSections">
+             <bool>false</bool>
+            </attribute>
+            <attribute name="horizontalHeaderMinimumSectionSize">
+             <number>27</number>
+            </attribute>
+            <attribute name="horizontalHeaderShowSortIndicator" stdset="0">
+             <bool>false</bool>
+            </attribute>
+            <attribute name="horizontalHeaderStretchLastSection">
+             <bool>true</bool>
+            </attribute>
+            <attribute name="verticalHeaderVisible">
+             <bool>false</bool>
+            </attribute>
+            <attribute name="verticalHeaderDefaultSectionSize">
+             <number>26</number>
+            </attribute>
+            <column>
+             <property name="text">
+              <string>To</string>
+             </property>
+            </column>
+            <column>
+             <property name="text">
+              <string>From</string>
+             </property>
+            </column>
+            <column>
+             <property name="text">
+              <string>Subject</string>
+             </property>
+            </column>
+            <column>
+             <property name="text">
+              <string>Received</string>
+             </property>
+            </column>
+           </widget>
+           <widget class="MessageView" name="textEditInboxMessage">
+            <property name="baseSize">
+             <size>
+              <width>0</width>
+              <height>500</height>
+             </size>
+            </property>
+            <property name="readOnly">
+             <bool>true</bool>
+            </property>
+            <property name="plainText">
+             <string>
+        Welcome to easy and secure Bitmessage
+            * send messages to other people
+            * send broadcast messages like twitter or
+            * discuss in chan(nel)s with other people
+	      </string>
+            </property>
+           </widget>
+          </widget>
+         </widget>
+        </item>
+       </layout>
+      </widget>
+      <widget class="QWidget" name="send">
+       <attribute name="icon">
+        <iconset resource="bitmessage_icons.qrc">
+         <normaloff>:/newPrefix/images/send.png</normaloff>:/newPrefix/images/send.png</iconset>
+       </attribute>
+       <attribute name="title">
+        <string>Send</string>
+       </attribute>
+       <layout class="QVBoxLayout" name="sendLayout">
+        <property name="leftMargin">
+         <number>8</number>
+        </property>
+        <property name="topMargin">
+         <number>8</number>
+        </property>
+        <property name="rightMargin">
+         <number>8</number>
+        </property>
+        <property name="bottomMargin">
+         <number>8</number>
+        </property>
+        <item>
+         <widget class="SSplitter" name="sendHorizontalSplitter">
+          <property name="orientation">
+           <enum>Qt::Horizontal</enum>
+          </property>
+          <widget class="QWidget" name="sendIdentitiesWidget">
+           <layout class="QVBoxLayout">
+            <item>
+             <widget class="STableWidget" name="tableWidgetAddressBook">
+              <property name="contextMenuPolicy">
+               <enum>Qt::CustomContextMenu</enum>
+              </property>
+              <property name="alternatingRowColors">
+               <bool>true</bool>
+              </property>
+              <property name="selectionMode">
+               <enum>QAbstractItemView::ExtendedSelection</enum>
+              </property>
+              <property name="selectionBehavior">
+               <enum>QAbstractItemView::SelectRows</enum>
+              </property>
+              <property name="sortingEnabled">
+               <bool>true</bool>
+              </property>
+              <attribute name="horizontalHeaderCascadingSectionResizes">
+               <bool>true</bool>
+              </attribute>
+              <attribute name="horizontalHeaderDefaultSectionSize">
+               <number>200</number>
+              </attribute>
+              <attribute name="horizontalHeaderHighlightSections">
+               <bool>false</bool>
+              </attribute>
+              <attribute name="horizontalHeaderStretchLastSection">
+               <bool>true</bool>
+              </attribute>
+              <attribute name="verticalHeaderVisible">
+               <bool>false</bool>
+              </attribute>
+              <column>
+               <property name="text">
+                <string>Address book</string>
+               </property>
+               <property name="icon">
+                <iconset>
+                 <selectedoff>:/newPrefix/images/addressbook.png</selectedoff>
+                </iconset>
+               </property>
+              </column>
+              <column>
+               <property name="text">
+                <string>Address</string>
+               </property>
+              </column>
+             </widget>
+            </item>
+            <item>
+             <widget class="QPushButton" name="pushButtonAddAddressBook">
+              <property name="maximumSize">
+               <size>
+                <width>200</width>
+                <height>16777215</height>
+               </size>
+              </property>
+              <property name="text">
+               <string>Add Contact</string>
+              </property>
+             </widget>
+            </item>
+            <item>
+             <widget class="QPushButton" name="pushButtonFetchNamecoinID">
+              <property name="maximumSize">
+               <size>
+                <width>200</width>
+                <height>16777215</height>
+               </size>
+              </property>
+              <property name="font">
+               <font>
+                <pointsize>9</pointsize>
+               </font>
+              </property>
+              <property name="text">
+               <string>Fetch Namecoin ID</string>
+              </property>
+             </widget>
+            </item>
+           </layout>
+          </widget>
+          <widget class="SSplitter" name="sendMessagecontrolSplitter">
+           <property name="orientation">
+            <enum>Qt::Vertical</enum>
+           </property>
+           <widget class="QTabWidget" name="tabWidgetSend">
+            <property name="currentIndex">
+             <number>0</number>
+            </property>
+            <widget class="QWidget" name="sendDirect">
+             <attribute name="title">
+              <string>Send ordinary Message</string>
+             </attribute>
+             <layout class="QGridLayout" name="gridLayout_8">
+              <property name="leftMargin">
+               <number>4</number>
+              </property>
+              <property name="topMargin">
+               <number>4</number>
+              </property>
+              <property name="rightMargin">
+               <number>4</number>
+              </property>
+              <property name="bottomMargin">
+               <number>4</number>
+              </property>
+              <item row="0" column="0">
+               <layout class="QVBoxLayout" name="verticalLayout_5">
+                <item>
+                 <layout class="QGridLayout" name="gridLayout_2">
+                  <item row="2" column="0">
+                   <widget class="QLabel" name="label_3">
+                    <property name="text">
+                     <string>Subject:</string>
+                    </property>
+                   </widget>
+                  </item>
+                  <item row="0" column="0">
+                   <widget class="QLabel" name="label_2">
+                    <property name="text">
+                     <string>From:</string>
+                    </property>
+                   </widget>
+                  </item>
+                  <item row="2" column="1">
+                   <widget class="QLineEdit" name="lineEditSubject">
+                    <property name="text">
+                     <string/>
+                    </property>
+                   </widget>
+                  </item>
+                  <item row="1" column="0">
+                   <widget class="QLabel" name="label">
+                    <property name="text">
+                     <string>To:</string>
+                    </property>
+                   </widget>
+                  </item>
+                  <item row="0" column="1">
+                   <widget class="QComboBox" name="comboBoxSendFrom">
+                    <property name="minimumSize">
+                     <size>
+                      <width>300</width>
+                      <height>0</height>
+                     </size>
+                    </property>
+                   </widget>
+                  </item>
+                  <item row="1" column="1">
+                   <widget class="QLineEdit" name="lineEditTo"/>
+                  </item>
+                 </layout>
+                </item>
+                <item>
+                 <widget class="MessageCompose" name="textEditMessage">
+                  <property name="html">
+                   <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
+&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
+p, li { white-space: pre-wrap; }
+&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Sans'; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;
+&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'MS Shell Dlg 2';&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
+                  </property>
+                 </widget>
+                </item>
+               </layout>
+              </item>
+             </layout>
+            </widget>
+            <widget class="QWidget" name="sendBroadcast">
+             <attribute name="title">
+              <string>Send Message to your Subscribers</string>
+             </attribute>
+             <layout class="QGridLayout" name="gridLayout_9">
+              <property name="leftMargin">
+               <number>4</number>
+              </property>
+              <property name="topMargin">
+               <number>4</number>
+              </property>
+              <property name="rightMargin">
+               <number>4</number>
+              </property>
+              <property name="bottomMargin">
+               <number>4</number>
+              </property>
+              <item row="0" column="0">
+               <layout class="QVBoxLayout" name="verticalLayout_6">
+                <item>
+                 <layout class="QGridLayout" name="gridLayout_5">
+                  <item row="0" column="0">
+                   <widget class="QLabel" name="label_8">
+                    <property name="text">
+                     <string>From:</string>
+                    </property>
+                   </widget>
+                  </item>
+                  <item row="1" column="1">
+                   <widget class="QLineEdit" name="lineEditSubjectBroadcast">
+                    <property name="text">
+                     <string/>
+                    </property>
+                   </widget>
+                  </item>
+                  <item row="1" column="0">
+                   <widget class="QLabel" name="label_7">
+                    <property name="text">
+                     <string>Subject:</string>
+                    </property>
+                   </widget>
+                  </item>
+                  <item row="0" column="1">
+                   <widget class="QComboBox" name="comboBoxSendFromBroadcast">
+                    <property name="minimumSize">
+                     <size>
+                      <width>300</width>
+                      <height>0</height>
+                     </size>
+                    </property>
+                   </widget>
+                  </item>
+                 </layout>
+                </item>
+                <item>
+                 <widget class="MessageCompose" name="textEditMessageBroadcast">
+                  <property name="html">
+                   <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
+&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
+p, li { white-space: pre-wrap; }
+&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Sans'; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;
+&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'MS Shell Dlg 2';&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
+                  </property>
+                 </widget>
+                </item>
+               </layout>
+              </item>
+             </layout>
+            </widget>
+           </widget>
+           <widget class="QWidget" name="sendControlsContainer">
+            <layout class="QHBoxLayout" name="sendControlsLayout">
+             <item>
+              <widget class="QPushButton" name="pushButtonTTL">
+               <property name="sizePolicy">
+                <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
+                 <horstretch>0</horstretch>
+                 <verstretch>0</verstretch>
+                </sizepolicy>
+               </property>
+               <property name="maximumSize">
+                <size>
+                 <width>32</width>
+                 <height>16777215</height>
+                </size>
+               </property>
+               <property name="palette">
+                <palette>
+                 <active>
+                  <colorrole role="ButtonText">
+                   <brush brushstyle="SolidPattern">
+                    <color alpha="255">
+                     <red>0</red>
+                     <green>0</green>
+                     <blue>255</blue>
+                    </color>
+                   </brush>
+                  </colorrole>
+                 </active>
+                 <inactive>
+                  <colorrole role="ButtonText">
+                   <brush brushstyle="SolidPattern">
+                    <color alpha="255">
+                     <red>0</red>
+                     <green>0</green>
+                     <blue>255</blue>
+                    </color>
+                   </brush>
+                  </colorrole>
+                 </inactive>
+                 <disabled>
+                  <colorrole role="ButtonText">
+                   <brush brushstyle="SolidPattern">
+                    <color alpha="255">
+                     <red>120</red>
+                     <green>120</green>
+                     <blue>120</blue>
+                    </color>
+                   </brush>
+                  </colorrole>
+                 </disabled>
+                </palette>
+               </property>
+               <property name="font">
+                <font>
+                 <underline>true</underline>
+                </font>
+               </property>
+               <property name="text">
+                <string>TTL:</string>
+               </property>
+               <property name="flat">
+                <bool>true</bool>
+               </property>
+              </widget>
+             </item>
+             <item>
+              <widget class="QSlider" name="horizontalSliderTTL">
+               <property name="minimumSize">
+                <size>
+                 <width>35</width>
+                 <height>0</height>
+                </size>
+               </property>
+               <property name="maximumSize">
+                <size>
+                 <width>70</width>
+                 <height>16777215</height>
+                </size>
+               </property>
+               <property name="orientation">
+                <enum>Qt::Horizontal</enum>
+               </property>
+               <property name="invertedAppearance">
+                <bool>false</bool>
+               </property>
+               <property name="invertedControls">
+                <bool>false</bool>
+               </property>
+              </widget>
+             </item>
+             <item>
+              <widget class="QLabel" name="labelHumanFriendlyTTLDescription">
+               <property name="sizePolicy">
+                <sizepolicy hsizetype="MinimumExpanding" vsizetype="Fixed">
+                 <horstretch>0</horstretch>
+                 <verstretch>0</verstretch>
+                </sizepolicy>
+               </property>
+               <property name="minimumSize">
+                <size>
+                 <width>45</width>
+                 <height>0</height>
+                </size>
+               </property>
+               <property name="maximumSize">
+                <size>
+                 <width>16777215</width>
+                 <height>16777215</height>
+                </size>
+               </property>
+               <property name="text">
+                <string notr="true">X days</string>
+               </property>
+              </widget>
+             </item>
+             <item alignment="Qt::AlignRight">
+              <widget class="QPushButton" name="pushButtonClear">
+               <property name="text">
+                <string>Clear</string>
+               </property>
+              </widget>
+             </item>
+             <item alignment="Qt::AlignRight">
+              <widget class="QPushButton" name="pushButtonSend">
+               <property name="maximumSize">
+                <size>
+                 <width>16777215</width>
+                 <height>16777215</height>
+                </size>
+               </property>
+               <property name="text">
+                <string>Send</string>
+               </property>
+              </widget>
+             </item>
+            </layout>
+           </widget>
+          </widget>
+         </widget>
+        </item>
+       </layout>
+      </widget>
+      <widget class="QWidget" name="subscriptions">
+       <attribute name="icon">
+        <iconset resource="bitmessage_icons.qrc">
+         <normaloff>:/newPrefix/images/subscriptions.png</normaloff>:/newPrefix/images/subscriptions.png</iconset>
+       </attribute>
+       <attribute name="title">
+        <string>Subscriptions</string>
+       </attribute>
+       <layout class="QVBoxLayout">
+        <property name="leftMargin">
+         <number>8</number>
+        </property>
+        <property name="topMargin">
+         <number>8</number>
+        </property>
+        <property name="rightMargin">
+         <number>8</number>
+        </property>
+        <property name="bottomMargin">
+         <number>8</number>
+        </property>
+        <item>
+         <widget class="SSplitter" name="subscriptionsHorizontalSplitter">
+          <property name="orientation">
+           <enum>Qt::Horizontal</enum>
+          </property>
+          <widget class="QWidget" name="subscriptionsIdentitiesWidget">
+           <layout class="QVBoxLayout">
+            <item>
+             <widget class="STreeWidget" name="treeWidgetSubscriptions">
+              <property name="contextMenuPolicy">
+               <enum>Qt::CustomContextMenu</enum>
+              </property>
+              <property name="alternatingRowColors">
+               <bool>true</bool>
+              </property>
+              <property name="selectionMode">
+               <enum>QAbstractItemView::SingleSelection</enum>
+              </property>
+              <property name="selectionBehavior">
+               <enum>QAbstractItemView::SelectRows</enum>
+              </property>
+              <column>
+               <property name="text">
+                <string>Subscriptions</string>
+               </property>
+               <property name="icon">
+                <iconset>
+                 <selectedoff>:/newPrefix/images/subscriptions.png</selectedoff>
+                </iconset>
+               </property>
+              </column>
+             </widget>
+            </item>
+            <item>
+             <widget class="QPushButton" name="pushButtonAddSubscription">
+              <property name="maximumSize">
+               <size>
+                <width>200</width>
+                <height>16777215</height>
+               </size>
+              </property>
+              <property name="text">
+               <string>Add new Subscription</string>
+              </property>
+             </widget>
+            </item>
+           </layout>
+          </widget>
+          <widget class="SSplitter" name="subscriptionsMessagecontrolSplitter">
+           <property name="orientation">
+            <enum>Qt::Vertical</enum>
+           </property>
+           <widget class="QWidget" name="searchWidget">
+            <layout class="QHBoxLayout" name="searchLayout">
+             <item>
+              <widget class="QLineEdit" name="inboxSearchLineEditSubscriptions">
+               <property name="placeholderText">
+                <string>Search</string>
+               </property>
+              </widget>
+             </item>
+             <item>
+              <widget class="QComboBox" name="inboxSearchOptionSubscriptions">
+               <item>
+                <property name="text">
+                 <string>All</string>
+                </property>
+               </item>
+               <item>
+                <property name="text">
+                 <string>To</string>
+                </property>
+               </item>
+               <item>
+                <property name="text">
+                 <string>From</string>
+                </property>
+               </item>
+               <item>
+                <property name="text">
+                 <string>Subject</string>
+                </property>
+               </item>
+               <item>
+                <property name="text">
+                 <string>Message</string>
+                </property>
+               </item>
+              </widget>
+             </item>
+            </layout>
+           </widget>
+           <widget class="STableWidget" name="tableWidgetInboxSubscriptions">
+            <property name="contextMenuPolicy">
+             <enum>Qt::CustomContextMenu</enum>
+            </property>
+            <property name="editTriggers">
+             <set>QAbstractItemView::NoEditTriggers</set>
+            </property>
+            <property name="alternatingRowColors">
+             <bool>true</bool>
+            </property>
+            <property name="selectionMode">
+             <enum>QAbstractItemView::ExtendedSelection</enum>
+            </property>
+            <property name="selectionBehavior">
+             <enum>QAbstractItemView::SelectRows</enum>
+            </property>
+            <property name="sortingEnabled">
+             <bool>true</bool>
+            </property>
+            <property name="wordWrap">
+             <bool>false</bool>
+            </property>
+            <attribute name="horizontalHeaderCascadingSectionResizes">
+             <bool>true</bool>
+            </attribute>
+            <attribute name="horizontalHeaderDefaultSectionSize">
+             <number>200</number>
+            </attribute>
+            <attribute name="horizontalHeaderHighlightSections">
+             <bool>false</bool>
+            </attribute>
+            <attribute name="horizontalHeaderMinimumSectionSize">
+             <number>27</number>
+            </attribute>
+            <attribute name="horizontalHeaderShowSortIndicator" stdset="0">
+             <bool>false</bool>
+            </attribute>
+            <attribute name="horizontalHeaderStretchLastSection">
+             <bool>true</bool>
+            </attribute>
+            <attribute name="verticalHeaderVisible">
+             <bool>false</bool>
+            </attribute>
+            <attribute name="verticalHeaderDefaultSectionSize">
+             <number>26</number>
+            </attribute>
+            <column>
+             <property name="text">
+              <string>To</string>
+             </property>
+            </column>
+            <column>
+             <property name="text">
+              <string>From</string>
+             </property>
+            </column>
+            <column>
+             <property name="text">
+              <string>Subject</string>
+             </property>
+            </column>
+            <column>
+             <property name="text">
+              <string>Received</string>
+             </property>
+            </column>
+           </widget>
+           <widget class="MessageView" name="textEditInboxMessageSubscriptions">
+            <property name="baseSize">
+             <size>
+              <width>0</width>
+              <height>500</height>
+             </size>
+            </property>
+            <property name="readOnly">
+             <bool>true</bool>
+            </property>
+           </widget>
+          </widget>
+         </widget>
+        </item>
+       </layout>
+      </widget>
+      <widget class="QWidget" name="chans">
+       <attribute name="icon">
+        <iconset resource="bitmessage_icons.qrc">
+         <normaloff>:/newPrefix/images/can-icon-16px.png</normaloff>:/newPrefix/images/can-icon-16px.png</iconset>
+       </attribute>
+       <attribute name="title">
+        <string>Chans</string>
+       </attribute>
+       <layout class="QVBoxLayout" name="chansLayout">
+        <property name="leftMargin">
+         <number>8</number>
+        </property>
+        <property name="topMargin">
+         <number>8</number>
+        </property>
+        <property name="rightMargin">
+         <number>8</number>
+        </property>
+        <property name="bottomMargin">
+         <number>8</number>
+        </property>
+        <item>
+         <widget class="SSplitter" name="chansHorizontalSplitter">
+          <property name="orientation">
+           <enum>Qt::Horizontal</enum>
+          </property>
+          <widget class="QWidget" name="chansIdentitiesWidget">
+           <layout class="QVBoxLayout">
+            <item>
+             <widget class="QTreeWidget" name="treeWidgetChans">
+              <property name="contextMenuPolicy">
+               <enum>Qt::CustomContextMenu</enum>
+              </property>
+              <property name="frameShadow">
+               <enum>QFrame::Sunken</enum>
+              </property>
+              <property name="lineWidth">
+               <number>1</number>
+              </property>
+              <property name="alternatingRowColors">
+               <bool>true</bool>
+              </property>
+              <property name="selectionMode">
+               <enum>QAbstractItemView::SingleSelection</enum>
+              </property>
+              <property name="selectionBehavior">
+               <enum>QAbstractItemView::SelectRows</enum>
+              </property>
+              <column>
+               <property name="text">
+                <string>Chans</string>
+               </property>
+               <property name="icon">
+                <iconset>
+                 <selectedoff>:/newPrefix/images/can-icon-16px.png</selectedoff>
+                </iconset>
+               </property>
+              </column>
+             </widget>
+            </item>
+            <item>
+             <widget class="QPushButton" name="pushButtonAddChan">
+              <property name="maximumSize">
+               <size>
+                <width>200</width>
+                <height>16777215</height>
+               </size>
+              </property>
+              <property name="text">
+               <string>Add Chan</string>
+              </property>
+             </widget>
+            </item>
+           </layout>
+          </widget>
+          <widget class="SSplitter" name="chansMessagecontrolSplitter">
+           <property name="orientation">
+            <enum>Qt::Vertical</enum>
+           </property>
+           <widget class="QWidget" name="searchWidget">
+            <layout class="QHBoxLayout" name="searchLayout">
+             <item>
+              <widget class="QLineEdit" name="inboxSearchLineEditChans">
+               <property name="placeholderText">
+                <string>Search</string>
+               </property>
+              </widget>
+             </item>
+             <item>
+              <widget class="QComboBox" name="inboxSearchOptionChans">
+               <item>
+                <property name="text">
+                 <string>All</string>
+                </property>
+               </item>
+               <item>
+                <property name="text">
+                 <string>To</string>
+                </property>
+               </item>
+               <item>
+                <property name="text">
+                 <string>From</string>
+                </property>
+               </item>
+               <item>
+                <property name="text">
+                 <string>Subject</string>
+                </property>
+               </item>
+               <item>
+                <property name="text">
+                 <string>Message</string>
+                </property>
+               </item>
+              </widget>
+             </item>
+            </layout>
+           </widget>
+           <widget class="STableWidget" name="tableWidgetInboxChans">
+            <property name="contextMenuPolicy">
+             <enum>Qt::CustomContextMenu</enum>
+            </property>
+            <property name="editTriggers">
+             <set>QAbstractItemView::NoEditTriggers</set>
+            </property>
+            <property name="alternatingRowColors">
+             <bool>true</bool>
+            </property>
+            <property name="selectionMode">
+             <enum>QAbstractItemView::ExtendedSelection</enum>
+            </property>
+            <property name="selectionBehavior">
+             <enum>QAbstractItemView::SelectRows</enum>
+            </property>
+            <property name="sortingEnabled">
+             <bool>true</bool>
+            </property>
+            <property name="wordWrap">
+             <bool>false</bool>
+            </property>
+            <attribute name="horizontalHeaderCascadingSectionResizes">
+             <bool>true</bool>
+            </attribute>
+            <attribute name="horizontalHeaderDefaultSectionSize">
+             <number>200</number>
+            </attribute>
+            <attribute name="horizontalHeaderHighlightSections">
+             <bool>false</bool>
+            </attribute>
+            <attribute name="horizontalHeaderMinimumSectionSize">
+             <number>27</number>
+            </attribute>
+            <attribute name="horizontalHeaderShowSortIndicator" stdset="0">
+             <bool>false</bool>
+            </attribute>
+            <attribute name="horizontalHeaderStretchLastSection">
+             <bool>true</bool>
+            </attribute>
+            <attribute name="verticalHeaderVisible">
+             <bool>false</bool>
+            </attribute>
+            <attribute name="verticalHeaderDefaultSectionSize">
+             <number>26</number>
+            </attribute>
+            <column>
+             <property name="text">
+              <string>To</string>
+             </property>
+            </column>
+            <column>
+             <property name="text">
+              <string>From</string>
+             </property>
+            </column>
+            <column>
+             <property name="text">
+              <string>Subject</string>
+             </property>
+            </column>
+            <column>
+             <property name="text">
+              <string>Received</string>
+             </property>
+            </column>
+           </widget>
+           <widget class="MessageView" name="textEditInboxMessageChans">
+            <property name="baseSize">
+             <size>
+              <width>0</width>
+              <height>500</height>
+             </size>
+            </property>
+            <property name="readOnly">
+             <bool>true</bool>
+            </property>
+           </widget>
+          </widget>
+         </widget>
+        </item>
+       </layout>
+      </widget>
+      <widget class="Blacklist" name="blackwhitelist">
+       <attribute name="icon">
+        <iconset resource="bitmessage_icons.qrc">
+         <normaloff>:/newPrefix/images/blacklist.png</normaloff>:/newPrefix/images/blacklist.png</iconset>
+       </attribute>
+       <attribute name="title">
+        <string>Blacklist</string>
+       </attribute>
+      </widget>
+      <widget class="NetworkStatus" name="networkstatus">
+       <attribute name="icon">
+        <iconset resource="bitmessage_icons.qrc">
+         <normaloff>:/newPrefix/images/networkstatus.png</normaloff>:/newPrefix/images/networkstatus.png</iconset>
+       </attribute>
+       <attribute name="title">
+        <string>Network Status</string>
+       </attribute>
+      </widget>
+     </widget>
+    </item>
+    <item>
+     <widget class="QPushButton" name="pushButtonStatusIcon">
+      <property name="sizePolicy">
+       <sizepolicy hsizetype="Minimum" vsizetype="Minimum">
+        <horstretch>0</horstretch>
+        <verstretch>0</verstretch>
+       </sizepolicy>
+      </property>
+      <property name="maximumSize">
+       <size>
+        <width>50</width>
+        <height>50</height>
+       </size>
+      </property>
+      <property name="cursor">
+       <cursorShape>ArrowCursor</cursorShape>
+      </property>
+      <property name="focusPolicy">
+       <enum>Qt::NoFocus</enum>
+      </property>
+      <property name="layoutDirection">
+       <enum>Qt::LeftToRight</enum>
+      </property>
+      <property name="text">
+       <string notr="true"/>
+      </property>
+      <property name="icon">
+       <iconset resource="bitmessage_icons.qrc">
+        <normaloff>:/newPrefix/images/redicon.png</normaloff>:/newPrefix/images/redicon.png</iconset>
+      </property>
+      <property name="iconSize">
+       <size>
+        <width>21</width>
+        <height>23</height>
+       </size>
+      </property>
+      <property name="flat">
+       <bool>true</bool>
+      </property>
+     </widget>
+    </item>
+   </layout>
+  </widget>
+  <widget class="QMenuBar" name="menubar">
+   <property name="geometry">
+    <rect>
+     <x>0</x>
+     <y>0</y>
+     <width>885</width>
+     <height>22</height>
+    </rect>
+   </property>
+   <widget class="QMenu" name="menuFile">
+    <property name="title">
+     <string>File</string>
+    </property>
+    <addaction name="actionManageKeys"/>
+    <addaction name="actionDeleteAllTrashedMessages"/>
+    <addaction name="actionRegenerateDeterministicAddresses"/>
+    <addaction name="actionNetworkSwitch"/>
+    <addaction name="actionExit"/>
+   </widget>
+   <widget class="QMenu" name="menuSettings">
+    <property name="title">
+     <string>Settings</string>
+    </property>
+    <addaction name="actionSettings"/>
+   </widget>
+   <widget class="QMenu" name="menuHelp">
+    <property name="title">
+     <string>Help</string>
+    </property>
+    <addaction name="actionHelp"/>
+    <addaction name="actionSupport"/>
+    <addaction name="actionAbout"/>
+   </widget>
+   <addaction name="menuFile"/>
+   <addaction name="menuSettings"/>
+   <addaction name="menuHelp"/>
+  </widget>
+  <widget class="BMStatusBar" name="statusbar">
+   <property name="maximumSize">
+    <size>
+     <width>16777215</width>
+     <height>25</height>
+    </size>
+   </property>
+  </widget>
+  <widget class="QToolBar" name="inboxContextMenuToolbar">
+   <attribute name="toolBarArea">
+    <enum>TopToolBarArea</enum>
+   </attribute>
+   <attribute name="toolBarBreak">
+    <bool>false</bool>
+   </attribute>
+   <action name="actionReply">
+    <property name="text">
+     <string>Reply to sender</string>
+    </property>
+   </action>
+   <action name="actionReplyChan">
+    <property name="text">
+     <string>Reply to channel</string>
+    </property>
+   </action>
+   <action name="actionAddSenderToAddressBook">
+    <property name="text">
+     <string>Add sender to your Address Book</string>
+    </property>
+   </action>
+   <action name="actionAddSenderToBlackList">
+    <property name="text">
+     <string>Add sender to your Blacklist</string>
+    </property>
+   </action>
+   <action name="actionTrashInboxMessage">
+    <property name="text">
+     <string>Move to Trash</string>
+    </property>
+   </action>
+   <action name="actionUndeleteTrashedMessage">
+    <property name="text">
+     <string>Undelete</string>
+    </property>
+   </action>
+   <action name="actionForceHtml">
+    <property name="text">
+     <string>View HTML code as formatted text</string>
+    </property>
+   </action>
+   <action name="actionSaveMessageAs">
+    <property name="text">
+     <string>Save message as...</string>
+    </property>
+   </action>
+   <action name="actionMarkUnread">
+    <property name="text">
+     <string>Mark Unread</string>
+    </property>
+   </action>
+   <addaction name="actionReply"/>
+   <addaction name="actionReplyChan"/>
+   <addaction name="actionAddSenderToAddressBook"/>
+   <addaction name="actionAddSenderToBlackList"/>
+   <addaction name="actionTrashInboxMessage"/>
+   <addaction name="actionUndeleteTrashedMessage"/>
+   <addaction name="actionForceHtml"/>
+   <addaction name="actionSaveMessageAs"/>
+   <addaction name="actionMarkUnread"/>
+  </widget>
+  <widget class="QToolBar" name="addressContextMenuToolbarYourIdentities">
+   <attribute name="toolBarArea">
+    <enum>TopToolBarArea</enum>
+   </attribute>
+   <attribute name="toolBarBreak">
+    <bool>false</bool>
+   </attribute>
+   <action name="actionNewYourIdentities">
+    <property name="text">
+     <string>New</string>
+    </property>
+   </action>
+   <action name="actionEnableYourIdentities">
+    <property name="text">
+     <string>Enable</string>
+    </property>
+   </action>
+   <action name="actionDisableYourIdentities">
+    <property name="text">
+     <string>Disable</string>
+    </property>
+   </action>
+   <action name="actionSetAvatarYourIdentities">
+    <property name="text">
+     <string>Set avatar...</string>
+    </property>
+   </action>
+   <action name="actionClipboardYourIdentities">
+    <property name="text">
+     <string>Copy address to clipboard</string>
+    </property>
+   </action>
+   <action name="actionSpecialAddressBehaviorYourIdentities">
+    <property name="text">
+     <string>Special address behavior...</string>
+    </property>
+   </action>
+   <action name="actionEmailGateway">
+    <property name="text">
+     <string>Email gateway</string>
+    </property>
+   </action>
+   <action name="actionMarkAllRead">
+    <property name="text">
+     <string>Mark all messages as read</string>
+    </property>
+   </action>
+   <addaction name="actionNewYourIdentities"/>
+   <addaction name="actionEnableYourIdentities"/>
+   <addaction name="actionDisableYourIdentities"/>
+   <addaction name="actionSetAvatarYourIdentities"/>
+   <addaction name="actionClipboardYourIdentities"/>
+   <addaction name="actionSpecialAddressBehaviorYourIdentities"/>
+   <addaction name="actionEmailGateway"/>
+   <addaction name="actionMarkAllRead"/>
+  </widget>
+  <widget class="QToolBar" name="addressContextMenuToolbar">
+   <attribute name="toolBarArea">
+    <enum>TopToolBarArea</enum>
+   </attribute>
+   <attribute name="toolBarBreak">
+    <bool>false</bool>
+   </attribute>
+   <action name="actionNew">
+    <property name="text">
+     <string>New</string>
+    </property>
+   </action>
+   <action name="actionDelete">
+    <property name="text">
+     <string>Delete</string>
+    </property>
+   </action>
+   <action name="actionEnable">
+    <property name="text">
+     <string>Enable</string>
+    </property>
+   </action>
+   <action name="actionDisable">
+    <property name="text">
+     <string>Disable</string>
+    </property>
+   </action>
+   <action name="actionSetAvatar">
+    <property name="text">
+     <string>Set avatar...</string>
+    </property>
+   </action>
+   <action name="actionClipboard">
+    <property name="text">
+     <string>Copy address to clipboard</string>
+    </property>
+   </action>
+   <action name="actionSpecialAddressBehavior">
+    <property name="text">
+     <string>Special address behavior...</string>
+    </property>
+   </action>
+   <addaction name="actionNew"/>
+   <addaction name="actionDelete"/>
+   <addaction name="actionEnable"/>
+   <addaction name="actionDisable"/>
+   <addaction name="actionSetAvatar"/>
+   <addaction name="actionClipboard"/>
+   <addaction name="actionSpecialAddressBehavior"/>
+  </widget>
+  <widget class="QToolBar" name="addressBookContextMenuToolbar">
+   <attribute name="toolBarArea">
+    <enum>TopToolBarArea</enum>
+   </attribute>
+   <attribute name="toolBarBreak">
+    <bool>false</bool>
+   </attribute>
+   <action name="actionAddressBookSend">
+    <property name="text">
+     <string>Send message to this address</string>
+    </property>
+   </action>
+   <action name="actionAddressBookClipboard">
+    <property name="text">
+     <string>Copy address to clipboard</string>
+    </property>
+   </action>
+   <action name="actionAddressBookSubscribe">
+    <property name="text">
+     <string>Subscribe to this address</string>
+    </property>
+   </action>
+   <action name="actionAddressBookSetAvatar">
+    <property name="text">
+     <string>Set avatar...</string>
+    </property>
+   </action>
+   <action name="actionAddressBookSetSound">
+    <property name="text">
+     <string>Set notification sound...</string>
+    </property>
+   </action>
+   <action name="actionAddressBookNew">
+    <property name="text">
+     <string>Add New Address</string>
+    </property>
+   </action>
+   <action name="actionAddressBookDelete">
+    <property name="text">
+     <string>Delete</string>
+    </property>
+   </action>
+   <addaction name="actionAddressBookSend"/>
+   <addaction name="actionAddressBookClipboard"/>
+   <addaction name="actionAddressBookSubscribe"/>
+   <addaction name="actionAddressBookSetAvatar"/>
+   <addaction name="actionAddressBookSetSound"/>
+   <addaction name="actionAddressBookNew"/>
+   <addaction name="actionAddressBookDelete"/>
+  </widget>
+  <widget class="QToolBar" name="subscriptionsContextMenuToolbar">
+   <attribute name="toolBarArea">
+    <enum>TopToolBarArea</enum>
+   </attribute>
+   <attribute name="toolBarBreak">
+    <bool>false</bool>
+   </attribute>
+   <action name="actionsubscriptionsNew">
+    <property name="text">
+     <string>New</string>
+    </property>
+   </action>
+   <action name="actionsubscriptionsDelete">
+    <property name="text">
+     <string>Delete</string>
+    </property>
+   </action>
+   <action name="actionsubscriptionsClipboard">
+    <property name="text">
+     <string>Copy address to clipboard</string>
+    </property>
+   </action>
+   <action name="actionsubscriptionsEnable">
+    <property name="text">
+     <string>Enable</string>
+    </property>
+   </action>
+   <action name="actionsubscriptionsDisable">
+    <property name="text">
+     <string>Disable</string>
+    </property>
+   </action>
+   <action name="actionsubscriptionsSetAvatar">
+    <property name="text">
+     <string>Set avatar...</string>
+    </property>
+   </action>
+   <addaction name="actionsubscriptionsNew"/>
+   <addaction name="actionsubscriptionsDelete"/>
+   <addaction name="actionsubscriptionsClipboard"/>
+   <addaction name="actionsubscriptionsEnable"/>
+   <addaction name="actionsubscriptionsDisable"/>
+   <addaction name="actionsubscriptionsSetAvatar"/>
+  </widget>
+  <widget class="QToolBar" name="sentContextMenuToolbar">
+   <attribute name="toolBarArea">
+    <enum>TopToolBarArea</enum>
+   </attribute>
+   <attribute name="toolBarBreak">
+    <bool>false</bool>
+   </attribute>
+   <action name="actionTrashSentMessage">
+    <property name="text">
+     <string>Move to Trash</string>
+    </property>
+   </action>
+   <action name="actionSentClipboard">
+    <property name="text">
+     <string>Copy destination address to clipboard</string>
+    </property>
+   </action>
+   <action name="actionForceSend">
+    <property name="text">
+     <string>Force send</string>
+    </property>
+   </action>
+   <addaction name="actionTrashSentMessage"/>
+   <addaction name="actionSentClipboard"/>
+   <addaction name="actionForceSend"/>
+  </widget>
+  <action name="actionImport_keys">
+   <property name="text">
+    <string>Import keys</string>
+   </property>
+  </action>
+  <action name="actionManageKeys">
+   <property name="checkable">
+    <bool>false</bool>
+   </property>
+   <property name="enabled">
+    <bool>true</bool>
+   </property>
+   <property name="icon">
+    <iconset theme="dialog-password">
+     <normaloff>.</normaloff>.</iconset>
+   </property>
+   <property name="text">
+    <string>Manage keys</string>
+   </property>
+  </action>
+  <action name="actionExit">
+   <property name="icon">
+    <iconset theme="application-exit">
+     <normaloff>.</normaloff>.</iconset>
+   </property>
+   <property name="text">
+    <string>Quit</string>
+   </property>
+   <property name="shortcut">
+    <string>Ctrl+Q</string>
+   </property>
+  </action>
+  <action name="actionHelp">
+   <property name="icon">
+    <iconset theme="help-contents">
+     <normaloff>.</normaloff>.</iconset>
+   </property>
+   <property name="text">
+    <string>Help</string>
+   </property>
+   <property name="shortcut">
+    <string>F1</string>
+   </property>
+  </action>
+  <action name="actionAbout">
+   <property name="icon">
+    <iconset theme="help-about">
+     <normaloff>.</normaloff>.</iconset>
+   </property>
+   <property name="text">
+    <string>About</string>
+   </property>
+  </action>
+  <action name="actionSettings">
+   <property name="icon">
+    <iconset theme="document-properties">
+     <normaloff>.</normaloff>.</iconset>
+   </property>
+   <property name="text">
+    <string>Settings</string>
+   </property>
+  </action>
+  <action name="actionRegenerateDeterministicAddresses">
+   <property name="icon">
+    <iconset theme="view-refresh">
+     <normaloff>.</normaloff>.</iconset>
+   </property>
+   <property name="text">
+    <string>Regenerate deterministic addresses</string>
+   </property>
+  </action>
+  <action name="actionDeleteAllTrashedMessages">
+   <property name="icon">
+    <iconset theme="user-trash">
+     <normaloff>.</normaloff>.</iconset>
+   </property>
+   <property name="text">
+    <string>Delete all trashed messages</string>
+   </property>
+  </action>
+  <action name="actionJoinChan">
+   <property name="icon">
+    <iconset theme="contact-new">
+     <normaloff>.</normaloff>.</iconset>
+   </property>
+   <property name="text">
+    <string>Join / Create chan</string>
+   </property>
+  </action>
+  <action name="actionSupport">
+   <property name="text">
+    <string>Contact Support</string>
+   </property>
+  </action>
+  <action name="actionNetworkSwitch">
+   <property name="text">
+    <string>Go offline</string>
+   </property>
+  </action>
+ </widget>
+ <customwidgets>
+  <customwidget>
+   <class>BMStatusBar</class>
+   <extends>QStatusBar</extends>
+   <header>bitmessageqt.statusbar</header>
+  </customwidget>
+  <customwidget>
+   <class>Blacklist</class>
+   <extends>QWidget</extends>
+   <header>bitmessageqt.blacklist</header>
+  </customwidget>
+  <customwidget>
+   <class>NetworkStatus</class>
+   <extends>QWidget</extends>
+   <header>bitmessageqt.networkstatus</header>
+  </customwidget>
+  <customwidget>
+   <class>MessageView</class>
+   <extends>QTextEdit</extends>
+   <header>bitmessageqt.messageview</header>
+  </customwidget>
+  <customwidget>
+   <class>STreeWidget</class>
+   <extends>QTreeWidget</extends>
+   <header>bitmessageqt.settingsmixin</header>
+  </customwidget>
+  <customwidget>
+   <class>STableWidget</class>
+   <extends>QTableWidget</extends>
+   <header>bitmessageqt.settingsmixin</header>
+  </customwidget>
+  <customwidget>
+   <class>SSplitter</class>
+   <extends>QSplitter</extends>
+   <header>bitmessageqt.settingsmixin</header>
+   <container>1</container>
+  </customwidget>
+  <customwidget>
+   <class>MessageCompose</class>
+   <extends>QTextEdit</extends>
+   <header>bitmessageqt.messagecompose</header>
+  </customwidget>
+ </customwidgets>
+ <tabstops>
+  <tabstop>tableWidgetInbox</tabstop>
+  <tabstop>textEditInboxMessage</tabstop>
+  <tabstop>comboBoxSendFrom</tabstop>
+  <tabstop>lineEditTo</tabstop>
+  <tabstop>lineEditSubject</tabstop>
+  <tabstop>textEditMessage</tabstop>
+  <tabstop>pushButtonSend</tabstop>
+  <tabstop>pushButtonAddSubscription</tabstop>
+ </tabstops>
+ <resources>
+  <include location="bitmessage_icons.qrc"/>
+ </resources>
+ <connections>
+  <connection>
+   <sender>actionExit</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>quit()</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionNetworkSwitch</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>network_switch</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionRegenerateDeterministicAddresses</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>click_actionRegenerateDeterministicAddresses</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionDeleteAllTrashedMessages</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>click_actionDeleteAllTrashedMessages</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionManageKeys</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>click_actionManageKeys</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionSettings</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>click_actionSettings</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionAbout</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>click_actionAbout</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionSupport</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>click_actionSupport</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionHelp</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>click_actionHelp</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>pushButtonNewAddress</sender>
+   <signal>clicked()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>click_NewAddressDialog</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>pushButtonAddAddressBook</sender>
+   <signal>clicked()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>click_pushButtonAddAddressBook</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>pushButtonFetchNamecoinID</sender>
+   <signal>clicked()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>click_pushButtonFetchNamecoinID</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>pushButtonAddSubscription</sender>
+   <signal>clicked()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>click_pushButtonAddSubscription</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>pushButtonAddChan</sender>
+   <signal>clicked()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>click_actionJoinChan</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>pushButtonTTL</sender>
+   <signal>clicked()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>click_pushButtonTTL</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>pushButtonClear</sender>
+   <signal>clicked()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>click_pushButtonClear</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>pushButtonSend</sender>
+   <signal>clicked()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>click_pushButtonSend</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>pushButtonStatusIcon</sender>
+   <signal>clicked()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>click_pushButtonStatusIcon</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>tableWidgetInbox</sender>
+   <signal>customContextMenuRequested(QPoint)</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_context_menuInbox()</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>656</x>
+     <y>366</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>442</x>
+     <y>289</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>tableWidgetInboxSubscriptions</sender>
+   <signal>customContextMenuRequested(QPoint)</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_context_menuInbox()</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>tableWidgetInboxChans</sender>
+   <signal>customContextMenuRequested(QPoint)</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_context_menuInbox()</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>treeWidgetYourIdentities</sender>
+   <signal>customContextMenuRequested(QPoint)</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_context_menuYourIdentities()</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>tableWidgetAddressBook</sender>
+   <signal>customContextMenuRequested(QPoint)</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_context_menuAddressBook()</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>treeWidgetSubscriptions</sender>
+   <signal>customContextMenuRequested(QPoint)</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_context_menuSubscriptions()</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>treeWidgetChans</sender>
+   <signal>customContextMenuRequested(QPoint)</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_context_menuChan()</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionReply</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_InboxReply</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionReplyChan</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_InboxReplyChan</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionAddSenderToAddressBook</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_InboxAddSenderToAddressBook</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionAddSenderToBlackList</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_InboxAddSenderToBlackList</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionTrashInboxMessage</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_InboxTrash</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionUndeleteTrashedMessage</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_TrashUndelete</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionForceHtml</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_InboxMessageForceHtml</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionSaveMessageAs</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_InboxSaveMessageAs</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionMarkUnread</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_InboxMarkUnread</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionNew</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_YourIdentitiesNew</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionDelete</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_YourIdentitiesDelete</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionEnable</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_Enable</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionDisable</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_Disable</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionSetAvatar</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_TreeWidgetSetAvatar</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionClipboard</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_Clipboard</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionSpecialAddressBehavior</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_SpecialAddressBehaviorDialog</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionNewYourIdentities</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_YourIdentitiesNew</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionEnableYourIdentities</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_Enable</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionDisableYourIdentities</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_Disable</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionSetAvatarYourIdentities</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_TreeWidgetSetAvatar</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionClipboardYourIdentities</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_Clipboard</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionSpecialAddressBehaviorYourIdentities</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_SpecialAddressBehaviorDialog</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionEmailGateway</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_EmailGatewayDialog</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionMarkAllRead</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_MarkAllRead</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionAddressBookSend</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_AddressBookSend</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionAddressBookClipboard</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_AddressBookClipboard</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionAddressBookSubscribe</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_AddressBookSubscribe</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionAddressBookSetAvatar</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_AddressBookSetAvatar</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionAddressBookSetSound</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_AddressBookSetSound</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionAddressBookNew</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_AddressBookNew</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionAddressBookDelete</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_AddressBookDelete</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionsubscriptionsNew</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_SubscriptionsNew</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionsubscriptionsDelete</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_SubscriptionsDelete</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionsubscriptionsClipboard</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_SubscriptionsClipboard</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionsubscriptionsEnable</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_SubscriptionsEnable</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionsubscriptionsDisable</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_SubscriptionsDisable</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionsubscriptionsSetAvatar</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_TreeWidgetSetAvatar</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionTrashSentMessage</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_SentTrash</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionSentClipboard</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_SentClipboard</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>actionForceSend</sender>
+   <signal>triggered()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>on_action_ForceSend</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>-1</x>
+     <y>-1</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>inboxSearchLineEdit</sender>
+   <signal>returnPressed()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>inboxSearchLineEditReturnPressed</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>inboxSearchLineEditSubscriptions</sender>
+   <signal>returnPressed()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>inboxSearchLineEditReturnPressed</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>inboxSearchLineEditChans</sender>
+   <signal>returnPressed()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>inboxSearchLineEditReturnPressed</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>inboxSearchLineEdit</sender>
+   <signal>textChanged(QString)</signal>
+   <receiver>MainWindow</receiver>
+   <slot>inboxSearchLineEditUpdated</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>inboxSearchLineEditSubscriptions</sender>
+   <signal>textChanged(QString)</signal>
+   <receiver>MainWindow</receiver>
+   <slot>inboxSearchLineEditUpdated</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>inboxSearchLineEditChans</sender>
+   <signal>textChanged(QString)</signal>
+   <receiver>MainWindow</receiver>
+   <slot>inboxSearchLineEditUpdated</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>tableWidgetAddressBook</sender>
+   <signal>itemChanged(QTableWidgetItem*)</signal>
+   <receiver>MainWindow</receiver>
+   <slot>tableWidgetAddressBookItemChanged</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>67</x>
+     <y>107</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>442</x>
+     <y>289</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>tableWidgetInbox</sender>
+   <signal>itemSelectionChanged()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>tableWidgetInboxItemClicked</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>tableWidgetInboxSubscriptions</sender>
+   <signal>itemSelectionChanged()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>tableWidgetInboxItemClicked</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>tableWidgetInboxChans</sender>
+   <signal>itemSelectionChanged()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>tableWidgetInboxItemClicked</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>treeWidgetYourIdentities</sender>
+   <signal>itemSelectionChanged()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>treeWidgetItemClicked</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>treeWidgetSubscriptions</sender>
+   <signal>itemSelectionChanged()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>treeWidgetItemClicked</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>treeWidgetChans</sender>
+   <signal>itemSelectionChanged()</signal>
+   <receiver>MainWindow</receiver>
+   <slot>treeWidgetItemClicked</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>treeWidgetYourIdentities</sender>
+   <signal>itemChanged(QTreeWidgetItem*,int)</signal>
+   <receiver>MainWindow</receiver>
+   <slot>treeWidgetItemChanged</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>treeWidgetSubscriptions</sender>
+   <signal>itemChanged(QTreeWidgetItem*,int)</signal>
+   <receiver>MainWindow</receiver>
+   <slot>treeWidgetItemChanged</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>treeWidgetChans</sender>
+   <signal>itemChanged(QTreeWidgetItem*,int)</signal>
+   <receiver>MainWindow</receiver>
+   <slot>treeWidgetItemChanged</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>tabWidget</sender>
+   <signal>currentChanged(int)</signal>
+   <receiver>MainWindow</receiver>
+   <slot>tabWidgetCurrentChanged</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>horizontalSliderTTL</sender>
+   <signal>valueChanged(int)</signal>
+   <receiver>MainWindow</receiver>
+   <slot>updateTTL</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+ </connections>
+</ui>
diff --git a/src/bitmessageqt/messageview.py b/src/bitmessageqt/messageview.py
index 45f3a79a..a5c9f584 100644
--- a/src/bitmessageqt/messageview.py
+++ b/src/bitmessageqt/messageview.py
@@ -29,6 +29,10 @@ class MessageView(QtGui.QTextBrowser):
         self.verticalScrollBar().valueChanged.connect(self.lazyRender)
         self.setWrappingWidth()
 
+    def text(self):
+        """A stub for retranslateui"""
+        return self.toPlainText()
+
     def resizeEvent(self, event):
         """View resize event handler"""
         super(MessageView, self).resizeEvent(event)
@@ -66,19 +70,19 @@ class MessageView(QtGui.QTextBrowser):
         """Show a dialog requesting URL opening confirmation"""
         if link.scheme() == "mailto":
             window = QtGui.QApplication.activeWindow()
-            window.ui.lineEditTo.setText(link.path())
+            window.lineEditTo.setText(link.path())
             if link.hasQueryItem("subject"):
-                window.ui.lineEditSubject.setText(
+                window.lineEditSubject.setText(
                     link.queryItemValue("subject"))
             if link.hasQueryItem("body"):
-                window.ui.textEditMessage.setText(
+                window.textEditMessage.setText(
                     link.queryItemValue("body"))
             window.setSendFromComboBox()
-            window.ui.tabWidgetSend.setCurrentIndex(0)
-            window.ui.tabWidget.setCurrentIndex(
-                window.ui.tabWidget.indexOf(window.ui.send)
+            window.tabWidgetSend.setCurrentIndex(0)
+            window.tabWidget.setCurrentIndex(
+                window.tabWidget.indexOf(window.send)
             )
-            window.ui.textEditMessage.setFocus()
+            window.textEditMessage.setFocus()
             return
         reply = QtGui.QMessageBox.warning(
             self,
diff --git a/src/bitmessageqt/networkstatus.py b/src/bitmessageqt/networkstatus.py
index 3d6e6618..5308064d 100644
--- a/src/bitmessageqt/networkstatus.py
+++ b/src/bitmessageqt/networkstatus.py
@@ -15,12 +15,11 @@ import shared
 import widgets
 from inventory import Inventory
 from network.connectionpool import BMConnectionPool
-from retranslateui import RetranslateMixin
 from tr import _translate
 from uisignaler import UISignaler
 
 
-class NetworkStatus(QtGui.QWidget, RetranslateMixin):
+class NetworkStatus(QtGui.QWidget):
     """Network status tab"""
     def __init__(self, parent=None):
         super(NetworkStatus, self).__init__(parent)
@@ -34,8 +33,6 @@ class NetworkStatus(QtGui.QWidget, RetranslateMixin):
             header.setSortIndicator(0, QtCore.Qt.AscendingOrder)
 
         self.startup = time.localtime()
-        self.labelStartupTime.setText(_translate("networkstatus", "Since startup on %1").arg(
-            l10n.formatTimestamp(self.startup)))
 
         self.UISignalThread = UISignaler.get()
         # pylint: disable=no-member
@@ -238,6 +235,7 @@ class NetworkStatus(QtGui.QWidget, RetranslateMixin):
         self.updateNumberOfObjectsToBeSynced()
 
     def retranslateUi(self):
-        super(NetworkStatus, self).retranslateUi()
-        self.labelStartupTime.setText(_translate("networkstatus", "Since startup on %1").arg(
-            l10n.formatTimestamp(self.startup)))
+        """Update widgets' texts which is not taken from ui-file"""
+        self.labelStartupTime.setText(_translate(
+            "networkstatus", "Since startup on %1"
+        ).arg(l10n.formatTimestamp(self.startup)))
diff --git a/src/bitmessageqt/newchandialog.py b/src/bitmessageqt/newchandialog.py
index 8db486c1..21c11458 100644
--- a/src/bitmessageqt/newchandialog.py
+++ b/src/bitmessageqt/newchandialog.py
@@ -9,13 +9,13 @@ from PyQt4 import QtCore, QtGui
 import widgets
 from addresses import addBMIfNotPresent
 from addressvalidator import AddressValidator, PassPhraseValidator
-from queues import UISignalQueue, addressGeneratorQueue, apiAddressGeneratorReturnQueue
-from retranslateui import RetranslateMixin
+from queues import (
+    addressGeneratorQueue, apiAddressGeneratorReturnQueue, UISignalQueue)
 from tr import _translate
 from utils import str_chan
 
 
-class NewChanDialog(QtGui.QDialog, RetranslateMixin):
+class NewChanDialog(QtGui.QDialog):
     """The `New Chan` dialog"""
     def __init__(self, parent=None):
         super(NewChanDialog, self).__init__(parent)
@@ -64,15 +64,27 @@ class NewChanDialog(QtGui.QDialog, RetranslateMixin):
                  self.chanPassPhrase.text().toUtf8(),
                  True))
         addressGeneratorReturnValue = apiAddressGeneratorReturnQueue.get(True)
-        if addressGeneratorReturnValue and addressGeneratorReturnValue[0] != 'chan name does not match address':
-            UISignalQueue.put(('updateStatusBar', _translate(
-                "newchandialog", "Successfully created / joined chan %1").arg(unicode(self.chanPassPhrase.text()))))
-            self.parent.ui.tabWidget.setCurrentIndex(
-                self.parent.ui.tabWidget.indexOf(self.parent.ui.chans)
+        if (
+            addressGeneratorReturnValue and
+            addressGeneratorReturnValue[0] !=
+            'chan name does not match address'
+        ):
+            UISignalQueue.put((
+                'updateStatusBar',
+                _translate(
+                    "newchandialog",
+                    "Successfully created / joined chan %1"
+                ).arg(unicode(self.chanPassPhrase.text()))
+            ))
+            self.parent.tabWidget.setCurrentIndex(
+                self.parent.tabWidget.indexOf(self.parent.chans)
             )
             self.done(QtGui.QDialog.Accepted)
         else:
-            UISignalQueue.put(('updateStatusBar', _translate("newchandialog", "Chan creation / joining failed")))
+            UISignalQueue.put((
+                'updateStatusBar',
+                _translate("newchandialog", "Chan creation / joining failed")
+            ))
             self.done(QtGui.QDialog.Rejected)
 
     def reject(self):
diff --git a/src/bitmessageqt/retranslateui.py b/src/bitmessageqt/retranslateui.py
index e9d5bb3a..7979ab90 100644
--- a/src/bitmessageqt/retranslateui.py
+++ b/src/bitmessageqt/retranslateui.py
@@ -1,18 +1,35 @@
-from os import path
 from PyQt4 import QtGui
-from debug import logger
+
 import widgets
+from debug import logger
+
 
 class RetranslateMixin(object):
+    """
+    Mixin with retranslateUi() method defined to automatically retranslate
+    all widgets.
+    """
     def retranslateUi(self):
-        defaults = QtGui.QWidget()
-        widgets.load(self.__class__.__name__.lower() + '.ui', defaults)
+        logger.debug('retranslateUi on %s', self.__class__)
+        defaults = self.__class__() if isinstance(
+            self, QtGui.QMainWindow) else QtGui.QWidget()
+        try:
+            widgets.load(self.uifile, defaults)
+            # potential AttributeError from widgets.load here ):
+        except AttributeError:
+            self.uifile = self.__class__.__name__.lower() + '.ui'
+            widgets.load(self.uifile, defaults)
         for attr, value in defaults.__dict__.iteritems():
             setTextMethod = getattr(value, "setText", None)
             if callable(setTextMethod):
-                getattr(self, attr).setText(getattr(defaults, attr).text())
+                try:
+                    getattr(self, attr).setText(getattr(defaults, attr).text())
+                except AttributeError:  # MessageView, MessageCompose
+                    pass
             elif isinstance(value, QtGui.QTableWidget):
-                for i in range (value.columnCount()):
-                    getattr(self, attr).horizontalHeaderItem(i).setText(getattr(defaults, attr).horizontalHeaderItem(i).text())
-                for i in range (value.rowCount()):
-                    getattr(self, attr).verticalHeaderItem(i).setText(getattr(defaults, attr).verticalHeaderItem(i).text())
+                for i in range(value.columnCount()):
+                    getattr(self, attr).horizontalHeaderItem(i).setText(
+                        getattr(defaults, attr).horizontalHeaderItem(i).text())
+                for i in range(value.rowCount()):
+                    getattr(self, attr).verticalHeaderItem(i).setText(
+                        getattr(defaults, attr).verticalHeaderItem(i).text())
diff --git a/src/bitmessageqt/settings.py b/src/bitmessageqt/settings.py
index 3a3db962..ca55dbed 100644
--- a/src/bitmessageqt/settings.py
+++ b/src/bitmessageqt/settings.py
@@ -1,630 +1,544 @@
-# -*- coding: utf-8 -*-
-# pylint: disable=too-many-instance-attributes,too-many-locals,too-many-statements,attribute-defined-outside-init
-"""
-src/bitmessageqt/settings.py
-============================
+import os
+import sys
 
-Form implementation generated from reading ui file 'settings.ui'
+from PyQt4 import QtCore, QtGui
 
-Created: Thu Dec 25 23:21:20 2014
-     by: PyQt4 UI code generator 4.10.3
+import debug
+import defaults
+import knownnodes
+import namecoin
+import openclpow
+import paths
+import queues
+import shared
+import state
+import tempfile
+import widgets
+from bmconfigparser import BMConfigParser
+from helper_sql import sqlExecute, sqlStoredProcedure
+from network.asyncore_pollchoose import set_rates
+from tr import _translate
 
-WARNING! All changes made in this file will be lost!
-"""
 
-from sys import platform
+class SettingsDialog(QtGui.QDialog):
+    """The "Settings" dialog"""
+    def __init__(self, parent=None, firstrun=False):
+        super(SettingsDialog, self).__init__(parent)
+        widgets.load('settings.ui', self)
 
-from PyQt4 import QtCore, QtGui
+        self.parent = parent
+        self.firstrun = firstrun
+        self.config = BMConfigParser()
+        self.net_restart_needed = False
+        self.timer = QtCore.QTimer()
 
-from . import bitmessage_icons_rc  # pylint: disable=unused-import
-from .languagebox import LanguageBox
-
-try:
-    _fromUtf8 = QtCore.QString.fromUtf8
-except AttributeError:
-    def _fromUtf8(s):
-        return s
-
-try:
-    _encoding = QtGui.QApplication.UnicodeUTF8
-
-    def _translate(context, text, disambig):
-        return QtGui.QApplication.translate(context, text, disambig, _encoding)
-except AttributeError:
-    def _translate(context, text, disambig):
-        return QtGui.QApplication.translate(context, text, disambig)
-
-
-class Ui_settingsDialog(object):
-    """Encapsulate a UI settings dialog object"""
-
-    def setupUi(self, settingsDialog):
-        """Set up the UI"""
-
-        settingsDialog.setObjectName(_fromUtf8("settingsDialog"))
-        settingsDialog.resize(521, 413)
-        self.gridLayout = QtGui.QGridLayout(settingsDialog)
-        self.gridLayout.setObjectName(_fromUtf8("gridLayout"))
-        self.buttonBox = QtGui.QDialogButtonBox(settingsDialog)
-        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
-        self.buttonBox.setStandardButtons(QtGui.QDialogButtonBox.Cancel | QtGui.QDialogButtonBox.Ok)
-        self.buttonBox.setObjectName(_fromUtf8("buttonBox"))
-        self.gridLayout.addWidget(self.buttonBox, 1, 0, 1, 1)
-        self.tabWidgetSettings = QtGui.QTabWidget(settingsDialog)
-        self.tabWidgetSettings.setObjectName(_fromUtf8("tabWidgetSettings"))
-        self.tabUserInterface = QtGui.QWidget()
-        self.tabUserInterface.setEnabled(True)
-        self.tabUserInterface.setObjectName(_fromUtf8("tabUserInterface"))
-        self.formLayout = QtGui.QFormLayout(self.tabUserInterface)
-        self.formLayout.setObjectName(_fromUtf8("formLayout"))
-        self.checkBoxStartOnLogon = QtGui.QCheckBox(self.tabUserInterface)
-        self.checkBoxStartOnLogon.setObjectName(_fromUtf8("checkBoxStartOnLogon"))
-        self.formLayout.setWidget(0, QtGui.QFormLayout.LabelRole, self.checkBoxStartOnLogon)
-        self.groupBoxTray = QtGui.QGroupBox(self.tabUserInterface)
-        self.groupBoxTray.setObjectName(_fromUtf8("groupBoxTray"))
-        self.formLayoutTray = QtGui.QFormLayout(self.groupBoxTray)
-        self.formLayoutTray.setObjectName(_fromUtf8("formLayoutTray"))
-        self.checkBoxStartInTray = QtGui.QCheckBox(self.groupBoxTray)
-        self.checkBoxStartInTray.setObjectName(_fromUtf8("checkBoxStartInTray"))
-        self.formLayoutTray.setWidget(0, QtGui.QFormLayout.SpanningRole, self.checkBoxStartInTray)
-        self.checkBoxMinimizeToTray = QtGui.QCheckBox(self.groupBoxTray)
-        self.checkBoxMinimizeToTray.setChecked(True)
-        self.checkBoxMinimizeToTray.setObjectName(_fromUtf8("checkBoxMinimizeToTray"))
-        self.formLayoutTray.setWidget(1, QtGui.QFormLayout.LabelRole, self.checkBoxMinimizeToTray)
-        self.checkBoxTrayOnClose = QtGui.QCheckBox(self.groupBoxTray)
-        self.checkBoxTrayOnClose.setChecked(True)
-        self.checkBoxTrayOnClose.setObjectName(_fromUtf8("checkBoxTrayOnClose"))
-        self.formLayoutTray.setWidget(2, QtGui.QFormLayout.LabelRole, self.checkBoxTrayOnClose)
-        self.formLayout.setWidget(1, QtGui.QFormLayout.SpanningRole, self.groupBoxTray)
-        self.checkBoxHideTrayConnectionNotifications = QtGui.QCheckBox(self.tabUserInterface)
-        self.checkBoxHideTrayConnectionNotifications.setChecked(False)
-        self.checkBoxHideTrayConnectionNotifications.setObjectName(
-            _fromUtf8("checkBoxHideTrayConnectionNotifications"))
-        self.formLayout.setWidget(2, QtGui.QFormLayout.LabelRole, self.checkBoxHideTrayConnectionNotifications)
-        self.checkBoxShowTrayNotifications = QtGui.QCheckBox(self.tabUserInterface)
-        self.checkBoxShowTrayNotifications.setObjectName(_fromUtf8("checkBoxShowTrayNotifications"))
-        self.formLayout.setWidget(3, QtGui.QFormLayout.LabelRole, self.checkBoxShowTrayNotifications)
-        self.checkBoxPortableMode = QtGui.QCheckBox(self.tabUserInterface)
-        self.checkBoxPortableMode.setObjectName(_fromUtf8("checkBoxPortableMode"))
-        self.formLayout.setWidget(4, QtGui.QFormLayout.LabelRole, self.checkBoxPortableMode)
-        self.PortableModeDescription = QtGui.QLabel(self.tabUserInterface)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.PortableModeDescription.sizePolicy().hasHeightForWidth())
-        self.PortableModeDescription.setSizePolicy(sizePolicy)
-        self.PortableModeDescription.setWordWrap(True)
-        self.PortableModeDescription.setObjectName(_fromUtf8("PortableModeDescription"))
-        self.formLayout.setWidget(5, QtGui.QFormLayout.SpanningRole, self.PortableModeDescription)
-        self.checkBoxWillinglySendToMobile = QtGui.QCheckBox(self.tabUserInterface)
-        self.checkBoxWillinglySendToMobile.setObjectName(_fromUtf8("checkBoxWillinglySendToMobile"))
-        self.formLayout.setWidget(6, QtGui.QFormLayout.SpanningRole, self.checkBoxWillinglySendToMobile)
-        self.checkBoxUseIdenticons = QtGui.QCheckBox(self.tabUserInterface)
-        self.checkBoxUseIdenticons.setObjectName(_fromUtf8("checkBoxUseIdenticons"))
-        self.formLayout.setWidget(7, QtGui.QFormLayout.LabelRole, self.checkBoxUseIdenticons)
-        self.checkBoxReplyBelow = QtGui.QCheckBox(self.tabUserInterface)
-        self.checkBoxReplyBelow.setObjectName(_fromUtf8("checkBoxReplyBelow"))
-        self.formLayout.setWidget(8, QtGui.QFormLayout.LabelRole, self.checkBoxReplyBelow)
-        self.groupBox = QtGui.QGroupBox(self.tabUserInterface)
-        self.groupBox.setObjectName(_fromUtf8("groupBox"))
-        self.formLayout_2 = QtGui.QFormLayout(self.groupBox)
-        self.formLayout_2.setObjectName(_fromUtf8("formLayout_2"))
-        self.languageComboBox = LanguageBox(self.groupBox)
-        self.languageComboBox.setMinimumSize(QtCore.QSize(100, 0))
-        self.languageComboBox.setObjectName(_fromUtf8("languageComboBox"))  # pylint: disable=not-callable
-        self.formLayout_2.setWidget(0, QtGui.QFormLayout.LabelRole, self.languageComboBox)
-        self.formLayout.setWidget(9, QtGui.QFormLayout.FieldRole, self.groupBox)
-        self.tabWidgetSettings.addTab(self.tabUserInterface, _fromUtf8(""))
-        self.tabNetworkSettings = QtGui.QWidget()
-        self.tabNetworkSettings.setObjectName(_fromUtf8("tabNetworkSettings"))
-        self.gridLayout_4 = QtGui.QGridLayout(self.tabNetworkSettings)
-        self.gridLayout_4.setObjectName(_fromUtf8("gridLayout_4"))
-        self.groupBox1 = QtGui.QGroupBox(self.tabNetworkSettings)
-        self.groupBox1.setObjectName(_fromUtf8("groupBox1"))
-        self.gridLayout_3 = QtGui.QGridLayout(self.groupBox1)
-        self.gridLayout_3.setObjectName(_fromUtf8("gridLayout_3"))
-        self.label = QtGui.QLabel(self.groupBox1)
-        self.label.setObjectName(_fromUtf8("label"))
-        self.gridLayout_3.addWidget(self.label, 0, 0, 1, 1, QtCore.Qt.AlignRight)
-        self.lineEditTCPPort = QtGui.QLineEdit(self.groupBox1)
-        self.lineEditTCPPort.setMaximumSize(QtCore.QSize(70, 16777215))
-        self.lineEditTCPPort.setObjectName(_fromUtf8("lineEditTCPPort"))
-        self.gridLayout_3.addWidget(self.lineEditTCPPort, 0, 1, 1, 1, QtCore.Qt.AlignLeft)
-        self.labelUPnP = QtGui.QLabel(self.groupBox1)
-        self.labelUPnP.setObjectName(_fromUtf8("labelUPnP"))
-        self.gridLayout_3.addWidget(self.labelUPnP, 0, 2, 1, 1, QtCore.Qt.AlignRight)
-        self.checkBoxUPnP = QtGui.QCheckBox(self.groupBox1)
-        self.checkBoxUPnP.setObjectName(_fromUtf8("checkBoxUPnP"))
-        self.gridLayout_3.addWidget(self.checkBoxUPnP, 0, 3, 1, 1, QtCore.Qt.AlignLeft)
-        self.gridLayout_4.addWidget(self.groupBox1, 0, 0, 1, 1)
-        self.groupBox_3 = QtGui.QGroupBox(self.tabNetworkSettings)
-        self.groupBox_3.setObjectName(_fromUtf8("groupBox_3"))
-        self.gridLayout_9 = QtGui.QGridLayout(self.groupBox_3)
-        self.gridLayout_9.setObjectName(_fromUtf8("gridLayout_9"))
-        spacerItem1 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
-        self.gridLayout_9.addItem(spacerItem1, 0, 0, 2, 1)
-        self.label_24 = QtGui.QLabel(self.groupBox_3)
-        self.label_24.setObjectName(_fromUtf8("label_24"))
-        self.gridLayout_9.addWidget(self.label_24, 0, 1, 1, 1)
-        self.lineEditMaxDownloadRate = QtGui.QLineEdit(self.groupBox_3)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.lineEditMaxDownloadRate.sizePolicy().hasHeightForWidth())
-        self.lineEditMaxDownloadRate.setSizePolicy(sizePolicy)
-        self.lineEditMaxDownloadRate.setMaximumSize(QtCore.QSize(60, 16777215))
-        self.lineEditMaxDownloadRate.setObjectName(_fromUtf8("lineEditMaxDownloadRate"))
-        self.gridLayout_9.addWidget(self.lineEditMaxDownloadRate, 0, 2, 1, 1)
-        self.label_25 = QtGui.QLabel(self.groupBox_3)
-        self.label_25.setObjectName(_fromUtf8("label_25"))
-        self.gridLayout_9.addWidget(self.label_25, 1, 1, 1, 1)
-        self.lineEditMaxUploadRate = QtGui.QLineEdit(self.groupBox_3)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.lineEditMaxUploadRate.sizePolicy().hasHeightForWidth())
-        self.lineEditMaxUploadRate.setSizePolicy(sizePolicy)
-        self.lineEditMaxUploadRate.setMaximumSize(QtCore.QSize(60, 16777215))
-        self.lineEditMaxUploadRate.setObjectName(_fromUtf8("lineEditMaxUploadRate"))
-        self.gridLayout_9.addWidget(self.lineEditMaxUploadRate, 1, 2, 1, 1)
-        self.label_26 = QtGui.QLabel(self.groupBox_3)
-        self.label_26.setObjectName(_fromUtf8("label_26"))
-        self.gridLayout_9.addWidget(self.label_26, 2, 1, 1, 1)
-        self.lineEditMaxOutboundConnections = QtGui.QLineEdit(self.groupBox_3)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.lineEditMaxOutboundConnections.sizePolicy().hasHeightForWidth())
-        self.lineEditMaxOutboundConnections.setSizePolicy(sizePolicy)
-        self.lineEditMaxOutboundConnections.setMaximumSize(QtCore.QSize(60, 16777215))
-        self.lineEditMaxOutboundConnections.setObjectName(_fromUtf8("lineEditMaxOutboundConnections"))
         self.lineEditMaxOutboundConnections.setValidator(
             QtGui.QIntValidator(0, 8, self.lineEditMaxOutboundConnections))
-        self.gridLayout_9.addWidget(self.lineEditMaxOutboundConnections, 2, 2, 1, 1)
-        self.gridLayout_4.addWidget(self.groupBox_3, 2, 0, 1, 1)
-        self.groupBox_2 = QtGui.QGroupBox(self.tabNetworkSettings)
-        self.groupBox_2.setObjectName(_fromUtf8("groupBox_2"))
-        self.gridLayout_2 = QtGui.QGridLayout(self.groupBox_2)
-        self.gridLayout_2.setObjectName(_fromUtf8("gridLayout_2"))
-        self.label_2 = QtGui.QLabel(self.groupBox_2)
-        self.label_2.setObjectName(_fromUtf8("label_2"))
-        self.gridLayout_2.addWidget(self.label_2, 0, 0, 1, 1)
-        self.label_3 = QtGui.QLabel(self.groupBox_2)
-        self.label_3.setObjectName(_fromUtf8("label_3"))
-        self.gridLayout_2.addWidget(self.label_3, 1, 1, 1, 1)
-        self.lineEditSocksHostname = QtGui.QLineEdit(self.groupBox_2)
-        self.lineEditSocksHostname.setObjectName(_fromUtf8("lineEditSocksHostname"))
-        self.lineEditSocksHostname.setPlaceholderText(_fromUtf8("127.0.0.1"))
-        self.gridLayout_2.addWidget(self.lineEditSocksHostname, 1, 2, 1, 2)
-        self.label_4 = QtGui.QLabel(self.groupBox_2)
-        self.label_4.setObjectName(_fromUtf8("label_4"))
-        self.gridLayout_2.addWidget(self.label_4, 1, 4, 1, 1)
-        self.lineEditSocksPort = QtGui.QLineEdit(self.groupBox_2)
-        self.lineEditSocksPort.setObjectName(_fromUtf8("lineEditSocksPort"))
-        if platform in ['darwin', 'win32', 'win64']:
-            self.lineEditSocksPort.setPlaceholderText(_fromUtf8("9150"))
+
+        self.adjust_from_config(self.config)
+        if firstrun:
+            # switch to "Network Settings" tab if user selected
+            # "Let me configure special network settings first" on first run
+            self.tabWidgetSettings.setCurrentIndex(
+                self.tabWidgetSettings.indexOf(self.tabNetworkSettings)
+            )
+        # parent.change_translation()
+        QtGui.QWidget.resize(self, QtGui.QWidget.sizeHint(self))
+
+    def adjust_from_config(self, config):
+        """Adjust all widgets state according to config settings"""
+        # pylint: disable=too-many-branches,too-many-statements
+        self.checkBoxStartOnLogon.setChecked(
+            config.getboolean('bitmessagesettings', 'startonlogon'))
+        self.checkBoxMinimizeToTray.setChecked(
+            config.getboolean('bitmessagesettings', 'minimizetotray'))
+        self.checkBoxTrayOnClose.setChecked(
+            config.safeGetBoolean('bitmessagesettings', 'trayonclose'))
+        self.checkBoxHideTrayConnectionNotifications.setChecked(
+            config.getboolean("bitmessagesettings", "hidetrayconnectionnotifications"))
+        self.checkBoxShowTrayNotifications.setChecked(
+            config.getboolean('bitmessagesettings', 'showtraynotifications'))
+        self.checkBoxStartInTray.setChecked(
+            config.getboolean('bitmessagesettings', 'startintray'))
+        self.checkBoxWillinglySendToMobile.setChecked(
+            config.safeGetBoolean('bitmessagesettings', 'willinglysendtomobile'))
+        self.checkBoxUseIdenticons.setChecked(
+            config.safeGetBoolean('bitmessagesettings', 'useidenticons'))
+        self.checkBoxReplyBelow.setChecked(
+            config.safeGetBoolean('bitmessagesettings', 'replybelow'))
+
+        if state.appdata == paths.lookupExeFolder():
+            self.checkBoxPortableMode.setChecked(True)
+        else:
+            try:
+                tempfile.NamedTemporaryFile(
+                    dir=paths.lookupExeFolder(), delete=True
+                ).close()  # should autodelete
+            except:
+                self.checkBoxPortableMode.setDisabled(True)
+
+        if 'darwin' in sys.platform:
+            self.checkBoxStartOnLogon.setDisabled(True)
+            self.checkBoxStartOnLogon.setText(_translate(
+                "MainWindow", "Start-on-login not yet supported on your OS."))
+            self.checkBoxMinimizeToTray.setDisabled(True)
+            self.checkBoxMinimizeToTray.setText(_translate(
+                "MainWindow", "Minimize-to-tray not yet supported on your OS."))
+            self.checkBoxShowTrayNotifications.setDisabled(True)
+            self.checkBoxShowTrayNotifications.setText(_translate(
+                "MainWindow", "Tray notifications not yet supported on your OS."))
+        elif 'linux' in sys.platform:
+            self.checkBoxStartOnLogon.setDisabled(True)
+            self.checkBoxStartOnLogon.setText(_translate(
+                "MainWindow", "Start-on-login not yet supported on your OS."))
+        # On the Network settings tab:
+        self.lineEditTCPPort.setText(str(
+            config.get('bitmessagesettings', 'port')))
+        self.checkBoxUPnP.setChecked(
+            config.safeGetBoolean('bitmessagesettings', 'upnp'))
+        self.checkBoxAuthentication.setChecked(
+            config.getboolean('bitmessagesettings', 'socksauthentication'))
+        self.checkBoxSocksListen.setChecked(
+            config.getboolean('bitmessagesettings', 'sockslisten'))
+
+        socksproxy_type = config.get('bitmessagesettings', 'socksproxytype')
+        if socksproxy_type == 'none':
+            self.comboBoxProxyType.setCurrentIndex(0)
+            self.lineEditSocksHostname.setEnabled(False)
+            self.lineEditSocksPort.setEnabled(False)
+            self.lineEditSocksUsername.setEnabled(False)
+            self.lineEditSocksPassword.setEnabled(False)
+            self.checkBoxAuthentication.setEnabled(False)
+            self.checkBoxSocksListen.setEnabled(False)
+        elif socksproxy_type == 'SOCKS4a':
+            self.comboBoxProxyType.setCurrentIndex(1)
+        elif socksproxy_type == 'SOCKS5':
+            self.comboBoxProxyType.setCurrentIndex(2)
+
+        self.lineEditSocksHostname.setText(
+            config.get('bitmessagesettings', 'sockshostname'))
+        self.lineEditSocksPort.setText(str(
+            config.get('bitmessagesettings', 'socksport')))
+        self.lineEditSocksUsername.setText(
+            config.get('bitmessagesettings', 'socksusername'))
+        self.lineEditSocksPassword.setText(
+            config.get('bitmessagesettings', 'sockspassword'))
+
+        self.lineEditMaxDownloadRate.setText(str(
+            config.get('bitmessagesettings', 'maxdownloadrate')))
+        self.lineEditMaxUploadRate.setText(str(
+            config.get('bitmessagesettings', 'maxuploadrate')))
+        self.lineEditMaxOutboundConnections.setText(str(
+            config.get('bitmessagesettings', 'maxoutboundconnections')))
+
+        # Demanded difficulty tab
+        self.lineEditTotalDifficulty.setText(str((float(
+            config.getint(
+                'bitmessagesettings', 'defaultnoncetrialsperbyte')
+        ) / defaults.networkDefaultProofOfWorkNonceTrialsPerByte)))
+        self.lineEditSmallMessageDifficulty.setText(str((float(
+            config.getint(
+                'bitmessagesettings', 'defaultpayloadlengthextrabytes')
+        ) / defaults.networkDefaultPayloadLengthExtraBytes)))
+
+        # Max acceptable difficulty tab
+        self.lineEditMaxAcceptableTotalDifficulty.setText(str((float(
+            config.getint(
+                'bitmessagesettings', 'maxacceptablenoncetrialsperbyte')
+        ) / defaults.networkDefaultProofOfWorkNonceTrialsPerByte)))
+        self.lineEditMaxAcceptableSmallMessageDifficulty.setText(str((float(
+            config.getint(
+                'bitmessagesettings', 'maxacceptablepayloadlengthextrabytes')
+        ) / defaults.networkDefaultPayloadLengthExtraBytes)))
+
+        # OpenCL
+        self.comboBoxOpenCL.setEnabled(openclpow.openclAvailable())
+        self.comboBoxOpenCL.clear()
+        self.comboBoxOpenCL.addItem("None")
+        self.comboBoxOpenCL.addItems(openclpow.vendors)
+        self.comboBoxOpenCL.setCurrentIndex(0)
+        for i in range(self.comboBoxOpenCL.count()):
+            if self.comboBoxOpenCL.itemText(i) == config.safeGet(
+                    'bitmessagesettings', 'opencl'):
+                self.comboBoxOpenCL.setCurrentIndex(i)
+                break
+
+        # Namecoin integration tab
+        nmctype = config.get('bitmessagesettings', 'namecoinrpctype')
+        self.lineEditNamecoinHost.setText(
+            config.get('bitmessagesettings', 'namecoinrpchost'))
+        self.lineEditNamecoinPort.setText(str(
+            config.get('bitmessagesettings', 'namecoinrpcport')))
+        self.lineEditNamecoinUser.setText(
+            config.get('bitmessagesettings', 'namecoinrpcuser'))
+        self.lineEditNamecoinPassword.setText(
+            config.get('bitmessagesettings', 'namecoinrpcpassword'))
+
+        if nmctype == "namecoind":
+            self.radioButtonNamecoinNamecoind.setChecked(True)
+        elif nmctype == "nmcontrol":
+            self.radioButtonNamecoinNmcontrol.setChecked(True)
+            self.lineEditNamecoinUser.setEnabled(False)
+            self.labelNamecoinUser.setEnabled(False)
+            self.lineEditNamecoinPassword.setEnabled(False)
+            self.labelNamecoinPassword.setEnabled(False)
+        else:
+            assert False
+
+        # Message Resend tab
+        self.lineEditDays.setText(str(
+            config.get('bitmessagesettings', 'stopresendingafterxdays')))
+        self.lineEditMonths.setText(str(
+            config.get('bitmessagesettings', 'stopresendingafterxmonths')))
+
+    def comboBoxProxyTypeChanged(self, comboBoxIndex):
+        """A callback for currentIndexChanged event of comboBoxProxyType"""
+        if comboBoxIndex == 0:
+            self.lineEditSocksHostname.setEnabled(False)
+            self.lineEditSocksPort.setEnabled(False)
+            self.lineEditSocksUsername.setEnabled(False)
+            self.lineEditSocksPassword.setEnabled(False)
+            self.checkBoxAuthentication.setEnabled(False)
+            self.checkBoxSocksListen.setEnabled(False)
+        elif comboBoxIndex in (1, 2):
+            self.lineEditSocksHostname.setEnabled(True)
+            self.lineEditSocksPort.setEnabled(True)
+            self.checkBoxAuthentication.setEnabled(True)
+            self.checkBoxSocksListen.setEnabled(True)
+            if self.checkBoxAuthentication.isChecked():
+                self.lineEditSocksUsername.setEnabled(True)
+                self.lineEditSocksPassword.setEnabled(True)
+
+    def getNamecoinType(self):
+        """
+        Check status of namecoin integration radio buttons
+        and translate it to a string as in the options.
+        """
+        if self.radioButtonNamecoinNamecoind.isChecked():
+            return "namecoind"
+        if self.radioButtonNamecoinNmcontrol.isChecked():
+            return "nmcontrol"
+        assert False
+
+    # Namecoin connection type was changed.
+    def namecoinTypeChanged(self, checked):  # pylint: disable=unused-argument
+        """A callback for toggled event of radioButtonNamecoinNamecoind"""
+        nmctype = self.getNamecoinType()
+        assert nmctype == "namecoind" or nmctype == "nmcontrol"
+
+        isNamecoind = (nmctype == "namecoind")
+        self.lineEditNamecoinUser.setEnabled(isNamecoind)
+        self.labelNamecoinUser.setEnabled(isNamecoind)
+        self.lineEditNamecoinPassword.setEnabled(isNamecoind)
+        self.labelNamecoinPassword.setEnabled(isNamecoind)
+
+        if isNamecoind:
+            self.lineEditNamecoinPort.setText(defaults.namecoinDefaultRpcPort)
         else:
-            self.lineEditSocksPort.setPlaceholderText(_fromUtf8("9050"))
-        self.gridLayout_2.addWidget(self.lineEditSocksPort, 1, 5, 1, 1)
-        self.checkBoxAuthentication = QtGui.QCheckBox(self.groupBox_2)
-        self.checkBoxAuthentication.setObjectName(_fromUtf8("checkBoxAuthentication"))
-        self.gridLayout_2.addWidget(self.checkBoxAuthentication, 2, 1, 1, 1)
-        self.label_5 = QtGui.QLabel(self.groupBox_2)
-        self.label_5.setObjectName(_fromUtf8("label_5"))
-        self.gridLayout_2.addWidget(self.label_5, 2, 2, 1, 1)
-        self.lineEditSocksUsername = QtGui.QLineEdit(self.groupBox_2)
-        self.lineEditSocksUsername.setEnabled(False)
-        self.lineEditSocksUsername.setObjectName(_fromUtf8("lineEditSocksUsername"))
-        self.gridLayout_2.addWidget(self.lineEditSocksUsername, 2, 3, 1, 1)
-        self.label_6 = QtGui.QLabel(self.groupBox_2)
-        self.label_6.setObjectName(_fromUtf8("label_6"))
-        self.gridLayout_2.addWidget(self.label_6, 2, 4, 1, 1)
-        self.lineEditSocksPassword = QtGui.QLineEdit(self.groupBox_2)
-        self.lineEditSocksPassword.setEnabled(False)
-        self.lineEditSocksPassword.setInputMethodHints(
-            QtCore.Qt.ImhHiddenText | QtCore.Qt.ImhNoAutoUppercase | QtCore.Qt.ImhNoPredictiveText)
-        self.lineEditSocksPassword.setEchoMode(QtGui.QLineEdit.Password)
-        self.lineEditSocksPassword.setObjectName(_fromUtf8("lineEditSocksPassword"))
-        self.gridLayout_2.addWidget(self.lineEditSocksPassword, 2, 5, 1, 1)
-        self.checkBoxSocksListen = QtGui.QCheckBox(self.groupBox_2)
-        self.checkBoxSocksListen.setObjectName(_fromUtf8("checkBoxSocksListen"))
-        self.gridLayout_2.addWidget(self.checkBoxSocksListen, 3, 1, 1, 4)
-        self.comboBoxProxyType = QtGui.QComboBox(self.groupBox_2)
-        self.comboBoxProxyType.setObjectName(_fromUtf8("comboBoxProxyType"))  # pylint: disable=not-callable
-        self.comboBoxProxyType.addItem(_fromUtf8(""))
-        self.comboBoxProxyType.addItem(_fromUtf8(""))
-        self.comboBoxProxyType.addItem(_fromUtf8(""))
-        self.gridLayout_2.addWidget(self.comboBoxProxyType, 0, 1, 1, 1)
-        self.gridLayout_4.addWidget(self.groupBox_2, 1, 0, 1, 1)
-        spacerItem2 = QtGui.QSpacerItem(20, 40, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
-        self.gridLayout_4.addItem(spacerItem2, 3, 0, 1, 1)
-        self.tabWidgetSettings.addTab(self.tabNetworkSettings, _fromUtf8(""))
-        self.tabDemandedDifficulty = QtGui.QWidget()
-        self.tabDemandedDifficulty.setObjectName(_fromUtf8("tabDemandedDifficulty"))
-        self.gridLayout_6 = QtGui.QGridLayout(self.tabDemandedDifficulty)
-        self.gridLayout_6.setObjectName(_fromUtf8("gridLayout_6"))
-        self.label_9 = QtGui.QLabel(self.tabDemandedDifficulty)
-        self.label_9.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
-        self.label_9.setObjectName(_fromUtf8("label_9"))
-        self.gridLayout_6.addWidget(self.label_9, 1, 1, 1, 1)
-        self.label_10 = QtGui.QLabel(self.tabDemandedDifficulty)
-        self.label_10.setWordWrap(True)
-        self.label_10.setObjectName(_fromUtf8("label_10"))
-        self.gridLayout_6.addWidget(self.label_10, 2, 0, 1, 3)
-        self.label_11 = QtGui.QLabel(self.tabDemandedDifficulty)
-        self.label_11.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
-        self.label_11.setObjectName(_fromUtf8("label_11"))
-        self.gridLayout_6.addWidget(self.label_11, 3, 1, 1, 1)
-        self.label_8 = QtGui.QLabel(self.tabDemandedDifficulty)
-        self.label_8.setWordWrap(True)
-        self.label_8.setObjectName(_fromUtf8("label_8"))
-        self.gridLayout_6.addWidget(self.label_8, 0, 0, 1, 3)
-        spacerItem3 = QtGui.QSpacerItem(203, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
-        self.gridLayout_6.addItem(spacerItem3, 1, 0, 1, 1)
-        self.label_12 = QtGui.QLabel(self.tabDemandedDifficulty)
-        self.label_12.setWordWrap(True)
-        self.label_12.setObjectName(_fromUtf8("label_12"))
-        self.gridLayout_6.addWidget(self.label_12, 4, 0, 1, 3)
-        self.lineEditSmallMessageDifficulty = QtGui.QLineEdit(self.tabDemandedDifficulty)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.lineEditSmallMessageDifficulty.sizePolicy().hasHeightForWidth())
-        self.lineEditSmallMessageDifficulty.setSizePolicy(sizePolicy)
-        self.lineEditSmallMessageDifficulty.setMaximumSize(QtCore.QSize(70, 16777215))
-        self.lineEditSmallMessageDifficulty.setObjectName(_fromUtf8("lineEditSmallMessageDifficulty"))
-        self.gridLayout_6.addWidget(self.lineEditSmallMessageDifficulty, 3, 2, 1, 1)
-        self.lineEditTotalDifficulty = QtGui.QLineEdit(self.tabDemandedDifficulty)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.lineEditTotalDifficulty.sizePolicy().hasHeightForWidth())
-        self.lineEditTotalDifficulty.setSizePolicy(sizePolicy)
-        self.lineEditTotalDifficulty.setMaximumSize(QtCore.QSize(70, 16777215))
-        self.lineEditTotalDifficulty.setObjectName(_fromUtf8("lineEditTotalDifficulty"))
-        self.gridLayout_6.addWidget(self.lineEditTotalDifficulty, 1, 2, 1, 1)
-        spacerItem4 = QtGui.QSpacerItem(203, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
-        self.gridLayout_6.addItem(spacerItem4, 3, 0, 1, 1)
-        spacerItem5 = QtGui.QSpacerItem(20, 40, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
-        self.gridLayout_6.addItem(spacerItem5, 5, 0, 1, 1)
-        self.tabWidgetSettings.addTab(self.tabDemandedDifficulty, _fromUtf8(""))
-        self.tabMaxAcceptableDifficulty = QtGui.QWidget()
-        self.tabMaxAcceptableDifficulty.setObjectName(_fromUtf8("tabMaxAcceptableDifficulty"))
-        self.gridLayout_7 = QtGui.QGridLayout(self.tabMaxAcceptableDifficulty)
-        self.gridLayout_7.setObjectName(_fromUtf8("gridLayout_7"))
-        self.label_15 = QtGui.QLabel(self.tabMaxAcceptableDifficulty)
-        self.label_15.setWordWrap(True)
-        self.label_15.setObjectName(_fromUtf8("label_15"))
-        self.gridLayout_7.addWidget(self.label_15, 0, 0, 1, 3)
-        spacerItem6 = QtGui.QSpacerItem(102, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
-        self.gridLayout_7.addItem(spacerItem6, 1, 0, 1, 1)
-        self.label_13 = QtGui.QLabel(self.tabMaxAcceptableDifficulty)
-        self.label_13.setLayoutDirection(QtCore.Qt.LeftToRight)
-        self.label_13.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
-        self.label_13.setObjectName(_fromUtf8("label_13"))
-        self.gridLayout_7.addWidget(self.label_13, 1, 1, 1, 1)
-        self.lineEditMaxAcceptableTotalDifficulty = QtGui.QLineEdit(self.tabMaxAcceptableDifficulty)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.lineEditMaxAcceptableTotalDifficulty.sizePolicy().hasHeightForWidth())
-        self.lineEditMaxAcceptableTotalDifficulty.setSizePolicy(sizePolicy)
-        self.lineEditMaxAcceptableTotalDifficulty.setMaximumSize(QtCore.QSize(70, 16777215))
-        self.lineEditMaxAcceptableTotalDifficulty.setObjectName(_fromUtf8("lineEditMaxAcceptableTotalDifficulty"))
-        self.gridLayout_7.addWidget(self.lineEditMaxAcceptableTotalDifficulty, 1, 2, 1, 1)
-        spacerItem7 = QtGui.QSpacerItem(102, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
-        self.gridLayout_7.addItem(spacerItem7, 2, 0, 1, 1)
-        self.label_14 = QtGui.QLabel(self.tabMaxAcceptableDifficulty)
-        self.label_14.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
-        self.label_14.setObjectName(_fromUtf8("label_14"))
-        self.gridLayout_7.addWidget(self.label_14, 2, 1, 1, 1)
-        self.lineEditMaxAcceptableSmallMessageDifficulty = QtGui.QLineEdit(self.tabMaxAcceptableDifficulty)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.lineEditMaxAcceptableSmallMessageDifficulty.sizePolicy().hasHeightForWidth())
-        self.lineEditMaxAcceptableSmallMessageDifficulty.setSizePolicy(sizePolicy)
-        self.lineEditMaxAcceptableSmallMessageDifficulty.setMaximumSize(QtCore.QSize(70, 16777215))
-        self.lineEditMaxAcceptableSmallMessageDifficulty.setObjectName(
-            _fromUtf8("lineEditMaxAcceptableSmallMessageDifficulty"))
-        self.gridLayout_7.addWidget(self.lineEditMaxAcceptableSmallMessageDifficulty, 2, 2, 1, 1)
-        spacerItem8 = QtGui.QSpacerItem(20, 147, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
-        self.gridLayout_7.addItem(spacerItem8, 3, 1, 1, 1)
-        self.labelOpenCL = QtGui.QLabel(self.tabMaxAcceptableDifficulty)
-        self.labelOpenCL.setObjectName(_fromUtf8("labelOpenCL"))
-        self.gridLayout_7.addWidget(self.labelOpenCL, 4, 0, 1, 1)
-        self.comboBoxOpenCL = QtGui.QComboBox(self.tabMaxAcceptableDifficulty)
-        self.comboBoxOpenCL.setObjectName = (_fromUtf8("comboBoxOpenCL"))
-        self.gridLayout_7.addWidget(self.comboBoxOpenCL, 4, 1, 1, 1)
-        self.tabWidgetSettings.addTab(self.tabMaxAcceptableDifficulty, _fromUtf8(""))
-        self.tabNamecoin = QtGui.QWidget()
-        self.tabNamecoin.setObjectName(_fromUtf8("tabNamecoin"))
-        self.gridLayout_8 = QtGui.QGridLayout(self.tabNamecoin)
-        self.gridLayout_8.setObjectName(_fromUtf8("gridLayout_8"))
-        spacerItem9 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
-        self.gridLayout_8.addItem(spacerItem9, 2, 0, 1, 1)
-        self.label_16 = QtGui.QLabel(self.tabNamecoin)
-        self.label_16.setWordWrap(True)
-        self.label_16.setObjectName(_fromUtf8("label_16"))
-        self.gridLayout_8.addWidget(self.label_16, 0, 0, 1, 3)
-        self.label_17 = QtGui.QLabel(self.tabNamecoin)
-        self.label_17.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
-        self.label_17.setObjectName(_fromUtf8("label_17"))
-        self.gridLayout_8.addWidget(self.label_17, 2, 1, 1, 1)
-        self.lineEditNamecoinHost = QtGui.QLineEdit(self.tabNamecoin)
-        self.lineEditNamecoinHost.setObjectName(_fromUtf8("lineEditNamecoinHost"))
-        self.gridLayout_8.addWidget(self.lineEditNamecoinHost, 2, 2, 1, 1)
-        spacerItem10 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
-        self.gridLayout_8.addItem(spacerItem10, 3, 0, 1, 1)
-        spacerItem11 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
-        self.gridLayout_8.addItem(spacerItem11, 4, 0, 1, 1)
-        self.label_18 = QtGui.QLabel(self.tabNamecoin)
-        self.label_18.setEnabled(True)
-        self.label_18.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
-        self.label_18.setObjectName(_fromUtf8("label_18"))
-        self.gridLayout_8.addWidget(self.label_18, 3, 1, 1, 1)
-        self.lineEditNamecoinPort = QtGui.QLineEdit(self.tabNamecoin)
-        self.lineEditNamecoinPort.setObjectName(_fromUtf8("lineEditNamecoinPort"))
-        self.gridLayout_8.addWidget(self.lineEditNamecoinPort, 3, 2, 1, 1)
-        spacerItem12 = QtGui.QSpacerItem(20, 40, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
-        self.gridLayout_8.addItem(spacerItem12, 8, 1, 1, 1)
-        self.labelNamecoinUser = QtGui.QLabel(self.tabNamecoin)
-        self.labelNamecoinUser.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
-        self.labelNamecoinUser.setObjectName(_fromUtf8("labelNamecoinUser"))
-        self.gridLayout_8.addWidget(self.labelNamecoinUser, 4, 1, 1, 1)
-        self.lineEditNamecoinUser = QtGui.QLineEdit(self.tabNamecoin)
-        self.lineEditNamecoinUser.setObjectName(_fromUtf8("lineEditNamecoinUser"))
-        self.gridLayout_8.addWidget(self.lineEditNamecoinUser, 4, 2, 1, 1)
-        spacerItem13 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
-        self.gridLayout_8.addItem(spacerItem13, 5, 0, 1, 1)
-        self.labelNamecoinPassword = QtGui.QLabel(self.tabNamecoin)
-        self.labelNamecoinPassword.setAlignment(
-            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
-        self.labelNamecoinPassword.setObjectName(_fromUtf8("labelNamecoinPassword"))
-        self.gridLayout_8.addWidget(self.labelNamecoinPassword, 5, 1, 1, 1)
-        self.lineEditNamecoinPassword = QtGui.QLineEdit(self.tabNamecoin)
-        self.lineEditNamecoinPassword.setInputMethodHints(
-            QtCore.Qt.ImhHiddenText | QtCore.Qt.ImhNoAutoUppercase | QtCore.Qt.ImhNoPredictiveText)
-        self.lineEditNamecoinPassword.setEchoMode(QtGui.QLineEdit.Password)
-        self.lineEditNamecoinPassword.setObjectName(_fromUtf8("lineEditNamecoinPassword"))
-        self.gridLayout_8.addWidget(self.lineEditNamecoinPassword, 5, 2, 1, 1)
-        self.labelNamecoinTestResult = QtGui.QLabel(self.tabNamecoin)
-        self.labelNamecoinTestResult.setText(_fromUtf8(""))
-        self.labelNamecoinTestResult.setObjectName(_fromUtf8("labelNamecoinTestResult"))
-        self.gridLayout_8.addWidget(self.labelNamecoinTestResult, 7, 0, 1, 2)
-        self.pushButtonNamecoinTest = QtGui.QPushButton(self.tabNamecoin)
-        self.pushButtonNamecoinTest.setObjectName(_fromUtf8("pushButtonNamecoinTest"))
-        self.gridLayout_8.addWidget(self.pushButtonNamecoinTest, 7, 2, 1, 1)
-        self.horizontalLayout = QtGui.QHBoxLayout()
-        self.horizontalLayout.setObjectName(_fromUtf8("horizontalLayout"))
-        self.label_21 = QtGui.QLabel(self.tabNamecoin)
-        self.label_21.setObjectName(_fromUtf8("label_21"))
-        self.horizontalLayout.addWidget(self.label_21)
-        self.radioButtonNamecoinNamecoind = QtGui.QRadioButton(self.tabNamecoin)
-        self.radioButtonNamecoinNamecoind.setObjectName(_fromUtf8("radioButtonNamecoinNamecoind"))
-        self.horizontalLayout.addWidget(self.radioButtonNamecoinNamecoind)
-        self.radioButtonNamecoinNmcontrol = QtGui.QRadioButton(self.tabNamecoin)
-        self.radioButtonNamecoinNmcontrol.setObjectName(_fromUtf8("radioButtonNamecoinNmcontrol"))
-        self.horizontalLayout.addWidget(self.radioButtonNamecoinNmcontrol)
-        self.gridLayout_8.addLayout(self.horizontalLayout, 1, 0, 1, 3)
-        self.tabWidgetSettings.addTab(self.tabNamecoin, _fromUtf8(""))
-        self.tabResendsExpire = QtGui.QWidget()
-        self.tabResendsExpire.setObjectName(_fromUtf8("tabResendsExpire"))
-        self.gridLayout_5 = QtGui.QGridLayout(self.tabResendsExpire)
-        self.gridLayout_5.setObjectName(_fromUtf8("gridLayout_5"))
-        self.label_7 = QtGui.QLabel(self.tabResendsExpire)
-        self.label_7.setWordWrap(True)
-        self.label_7.setObjectName(_fromUtf8("label_7"))
-        self.gridLayout_5.addWidget(self.label_7, 0, 0, 1, 3)
-        spacerItem14 = QtGui.QSpacerItem(212, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
-        self.gridLayout_5.addItem(spacerItem14, 1, 0, 1, 1)
-        self.widget = QtGui.QWidget(self.tabResendsExpire)
-        self.widget.setMinimumSize(QtCore.QSize(231, 75))
-        self.widget.setObjectName(_fromUtf8("widget"))
-        self.label_19 = QtGui.QLabel(self.widget)
-        self.label_19.setGeometry(QtCore.QRect(10, 20, 101, 20))
-        self.label_19.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
-        self.label_19.setObjectName(_fromUtf8("label_19"))
-        self.label_20 = QtGui.QLabel(self.widget)
-        self.label_20.setGeometry(QtCore.QRect(30, 40, 80, 16))
-        self.label_20.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
-        self.label_20.setObjectName(_fromUtf8("label_20"))
-        self.lineEditDays = QtGui.QLineEdit(self.widget)
-        self.lineEditDays.setGeometry(QtCore.QRect(113, 20, 51, 20))
-        self.lineEditDays.setObjectName(_fromUtf8("lineEditDays"))
-        self.lineEditMonths = QtGui.QLineEdit(self.widget)
-        self.lineEditMonths.setGeometry(QtCore.QRect(113, 40, 51, 20))
-        self.lineEditMonths.setObjectName(_fromUtf8("lineEditMonths"))
-        self.label_22 = QtGui.QLabel(self.widget)
-        self.label_22.setGeometry(QtCore.QRect(169, 23, 61, 16))
-        self.label_22.setObjectName(_fromUtf8("label_22"))
-        self.label_23 = QtGui.QLabel(self.widget)
-        self.label_23.setGeometry(QtCore.QRect(170, 41, 71, 16))
-        self.label_23.setObjectName(_fromUtf8("label_23"))
-        self.gridLayout_5.addWidget(self.widget, 1, 2, 1, 1)
-        spacerItem15 = QtGui.QSpacerItem(20, 129, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
-        self.gridLayout_5.addItem(spacerItem15, 2, 1, 1, 1)
-        self.tabWidgetSettings.addTab(self.tabResendsExpire, _fromUtf8(""))
-        self.gridLayout.addWidget(self.tabWidgetSettings, 0, 0, 1, 1)
-
-        self.retranslateUi(settingsDialog)
-        self.tabWidgetSettings.setCurrentIndex(0)
-        QtCore.QObject.connect(  # pylint: disable=no-member
-            self.buttonBox, QtCore.SIGNAL(_fromUtf8("accepted()")), settingsDialog.accept)
-        QtCore.QObject.connect(  # pylint: disable=no-member
-            self.buttonBox, QtCore.SIGNAL(_fromUtf8("rejected()")), settingsDialog.reject)
-        QtCore.QObject.connect(  # pylint: disable=no-member
-            self.checkBoxAuthentication,
-            QtCore.SIGNAL(
-                _fromUtf8("toggled(bool)")),
-            self.lineEditSocksUsername.setEnabled)
-        QtCore.QObject.connect(  # pylint: disable=no-member
-            self.checkBoxAuthentication,
-            QtCore.SIGNAL(
-                _fromUtf8("toggled(bool)")),
-            self.lineEditSocksPassword.setEnabled)
-        QtCore.QMetaObject.connectSlotsByName(settingsDialog)
-        settingsDialog.setTabOrder(self.tabWidgetSettings, self.checkBoxStartOnLogon)
-        settingsDialog.setTabOrder(self.checkBoxStartOnLogon, self.checkBoxStartInTray)
-        settingsDialog.setTabOrder(self.checkBoxStartInTray, self.checkBoxMinimizeToTray)
-        settingsDialog.setTabOrder(self.checkBoxMinimizeToTray, self.lineEditTCPPort)
-        settingsDialog.setTabOrder(self.lineEditTCPPort, self.comboBoxProxyType)
-        settingsDialog.setTabOrder(self.comboBoxProxyType, self.lineEditSocksHostname)
-        settingsDialog.setTabOrder(self.lineEditSocksHostname, self.lineEditSocksPort)
-        settingsDialog.setTabOrder(self.lineEditSocksPort, self.checkBoxAuthentication)
-        settingsDialog.setTabOrder(self.checkBoxAuthentication, self.lineEditSocksUsername)
-        settingsDialog.setTabOrder(self.lineEditSocksUsername, self.lineEditSocksPassword)
-        settingsDialog.setTabOrder(self.lineEditSocksPassword, self.checkBoxSocksListen)
-        settingsDialog.setTabOrder(self.checkBoxSocksListen, self.buttonBox)
-
-    def retranslateUi(self, settingsDialog):
-        """Re-translate the UI into the supported languages"""
-
-        settingsDialog.setWindowTitle(_translate("settingsDialog", "Settings", None))
-        self.checkBoxStartOnLogon.setText(_translate("settingsDialog", "Start Bitmessage on user login", None))
-        self.groupBoxTray.setTitle(_translate("settingsDialog", "Tray", None))
-        self.checkBoxStartInTray.setText(
-            _translate(
-                "settingsDialog",
-                "Start Bitmessage in the tray (don\'t show main window)",
-                None))
-        self.checkBoxMinimizeToTray.setText(_translate("settingsDialog", "Minimize to tray", None))
-        self.checkBoxTrayOnClose.setText(_translate("settingsDialog", "Close to tray", None))
-        self.checkBoxHideTrayConnectionNotifications.setText(
-            _translate("settingsDialog", "Hide connection notifications", None))
-        self.checkBoxShowTrayNotifications.setText(
-            _translate(
-                "settingsDialog",
-                "Show notification when message received",
-                None))
-        self.checkBoxPortableMode.setText(_translate("settingsDialog", "Run in Portable Mode", None))
-        self.PortableModeDescription.setText(
-            _translate(
-                "settingsDialog",
-                "In Portable Mode, messages and config files are stored in the same directory as the"
-                " program rather than the normal application-data folder. This makes it convenient to"
-                " run Bitmessage from a USB thumb drive.",
-                None))
-        self.checkBoxWillinglySendToMobile.setText(
-            _translate(
-                "settingsDialog",
-                "Willingly include unencrypted destination address when sending to a mobile device",
-                None))
-        self.checkBoxUseIdenticons.setText(_translate("settingsDialog", "Use Identicons", None))
-        self.checkBoxReplyBelow.setText(_translate("settingsDialog", "Reply below Quote", None))
-        self.groupBox.setTitle(_translate("settingsDialog", "Interface Language", None))
-        self.languageComboBox.setItemText(0, _translate("settingsDialog", "System Settings", "system"))
-        self.tabWidgetSettings.setTabText(
-            self.tabWidgetSettings.indexOf(
-                self.tabUserInterface),
-            _translate(
-                "settingsDialog", "User Interface", None))
-        self.groupBox1.setTitle(_translate("settingsDialog", "Listening port", None))
-        self.label.setText(_translate("settingsDialog", "Listen for connections on port:", None))
-        self.labelUPnP.setText(_translate("settingsDialog", "UPnP:", None))
-        self.groupBox_3.setTitle(_translate("settingsDialog", "Bandwidth limit", None))
-        self.label_24.setText(_translate("settingsDialog", "Maximum download rate (kB/s): [0: unlimited]", None))
-        self.label_25.setText(_translate("settingsDialog", "Maximum upload rate (kB/s): [0: unlimited]", None))
-        self.label_26.setText(_translate("settingsDialog", "Maximum outbound connections: [0: none]", None))
-        self.groupBox_2.setTitle(_translate("settingsDialog", "Proxy server / Tor", None))
-        self.label_2.setText(_translate("settingsDialog", "Type:", None))
-        self.label_3.setText(_translate("settingsDialog", "Server hostname:", None))
-        self.label_4.setText(_translate("settingsDialog", "Port:", None))
-        self.checkBoxAuthentication.setText(_translate("settingsDialog", "Authentication", None))
-        self.label_5.setText(_translate("settingsDialog", "Username:", None))
-        self.label_6.setText(_translate("settingsDialog", "Pass:", None))
-        self.checkBoxSocksListen.setText(
-            _translate(
-                "settingsDialog",
-                "Listen for incoming connections when using proxy",
-                None))
-        self.comboBoxProxyType.setItemText(0, _translate("settingsDialog", "none", None))
-        self.comboBoxProxyType.setItemText(1, _translate("settingsDialog", "SOCKS4a", None))
-        self.comboBoxProxyType.setItemText(2, _translate("settingsDialog", "SOCKS5", None))
-        self.tabWidgetSettings.setTabText(
-            self.tabWidgetSettings.indexOf(
-                self.tabNetworkSettings),
-            _translate(
-                "settingsDialog", "Network Settings", None))
-        self.label_9.setText(_translate("settingsDialog", "Total difficulty:", None))
-        self.label_10.setText(
-            _translate(
-                "settingsDialog",
-                "The \'Total difficulty\' affects the absolute amount of work the sender must complete."
-                " Doubling this value doubles the amount of work.",
-                None))
-        self.label_11.setText(_translate("settingsDialog", "Small message difficulty:", None))
-        self.label_8.setText(_translate(
-            "settingsDialog",
-            "When someone sends you a message, their computer must first complete some work. The difficulty of this"
-            " work, by default, is 1. You may raise this default for new addresses you create by changing the values"
-            " here. Any new addresses you create will require senders to meet the higher difficulty. There is one"
-            " exception: if you add a friend or acquaintance to your address book, Bitmessage will automatically"
-            " notify them when you next send a message that they need only complete the minimum amount of"
-            " work: difficulty 1. ",
-            None))
-        self.label_12.setText(
-            _translate(
-                "settingsDialog",
-                "The \'Small message difficulty\' mostly only affects the difficulty of sending small messages."
-                " Doubling this value makes it almost twice as difficult to send a small message but doesn\'t really"
-                " affect large messages.",
-                None))
-        self.tabWidgetSettings.setTabText(
-            self.tabWidgetSettings.indexOf(
-                self.tabDemandedDifficulty),
-            _translate(
-                "settingsDialog", "Demanded difficulty", None))
-        self.label_15.setText(
-            _translate(
-                "settingsDialog",
-                "Here you may set the maximum amount of work you are willing to do to send a message to another"
-                " person. Setting these values to 0 means that any value is acceptable.",
-                None))
-        self.label_13.setText(_translate("settingsDialog", "Maximum acceptable total difficulty:", None))
-        self.label_14.setText(_translate("settingsDialog", "Maximum acceptable small message difficulty:", None))
-        self.tabWidgetSettings.setTabText(
-            self.tabWidgetSettings.indexOf(
-                self.tabMaxAcceptableDifficulty),
-            _translate(
-                "settingsDialog", "Max acceptable difficulty", None))
-        self.labelOpenCL.setText(_translate("settingsDialog", "Hardware GPU acceleration (OpenCL):", None))
-        self.label_16.setText(_translate(
-            "settingsDialog",
-            "<html><head/><body><p>Bitmessage can utilize a different Bitcoin-based program called Namecoin to make"
-            " addresses human-friendly. For example, instead of having to tell your friend your long Bitmessage"
-            " address, you can simply tell him to send a message to <span style=\" font-style:italic;\">test."
-            " </span></p><p>(Getting your own Bitmessage address into Namecoin is still rather difficult).</p>"
-            "<p>Bitmessage can use either namecoind directly or a running nmcontrol instance.</p></body></html>",
-            None))
-        self.label_17.setText(_translate("settingsDialog", "Host:", None))
-        self.label_18.setText(_translate("settingsDialog", "Port:", None))
-        self.labelNamecoinUser.setText(_translate("settingsDialog", "Username:", None))
-        self.labelNamecoinPassword.setText(_translate("settingsDialog", "Password:", None))
-        self.pushButtonNamecoinTest.setText(_translate("settingsDialog", "Test", None))
-        self.label_21.setText(_translate("settingsDialog", "Connect to:", None))
-        self.radioButtonNamecoinNamecoind.setText(_translate("settingsDialog", "Namecoind", None))
-        self.radioButtonNamecoinNmcontrol.setText(_translate("settingsDialog", "NMControl", None))
-        self.tabWidgetSettings.setTabText(
-            self.tabWidgetSettings.indexOf(
-                self.tabNamecoin),
-            _translate(
-                "settingsDialog", "Namecoin integration", None))
-        self.label_7.setText(_translate(
-            "settingsDialog",
-            "<html><head/><body><p>By default, if you send a message to someone and he is offline for more than two"
-            " days, Bitmessage will send the message again after an additional two days. This will be continued with"
-            " exponential backoff forever; messages will be resent after 5, 10, 20 days ect. until the receiver"
-            " acknowledges them. Here you may change that behavior by having Bitmessage give up after a certain"
-            " number of days or months.</p><p>Leave these input fields blank for the default behavior."
-            " </p></body></html>",
-            None))
-        self.label_19.setText(_translate("settingsDialog", "Give up after", None))
-        self.label_20.setText(_translate("settingsDialog", "and", None))
-        self.label_22.setText(_translate("settingsDialog", "days", None))
-        self.label_23.setText(_translate("settingsDialog", "months.", None))
-        self.tabWidgetSettings.setTabText(
-            self.tabWidgetSettings.indexOf(
-                self.tabResendsExpire),
-            _translate(
-                "settingsDialog", "Resends Expire", None))
+            self.lineEditNamecoinPort.setText("9000")
+
+    def click_pushButtonNamecoinTest(self):
+        """Test the namecoin settings specified in the settings dialog."""
+        self.labelNamecoinTestResult.setText(
+            _translate("MainWindow", "Testing..."))
+        nc = namecoin.namecoinConnection({
+            'type': self.getNamecoinType(),
+            'host': str(self.lineEditNamecoinHost.text().toUtf8()),
+            'port': str(self.lineEditNamecoinPort.text().toUtf8()),
+            'user': str(self.lineEditNamecoinUser.text().toUtf8()),
+            'password': str(self.lineEditNamecoinPassword.text().toUtf8())
+        })
+        status, text = nc.test()
+        self.labelNamecoinTestResult.setText(text)
+        if status == 'success':
+            self.parent.namecoin = nc
+
+    def accept(self):
+        """A callback for accepted event of buttonBox (OK button pressed)"""
+        # pylint: disable=too-many-branches,too-many-statements
+        super(SettingsDialog, self).accept()
+        if self.firstrun:
+            self.config.remove_option('bitmessagesettings', 'dontconnect')
+        self.config.set('bitmessagesettings', 'startonlogon', str(
+            self.checkBoxStartOnLogon.isChecked()))
+        self.config.set('bitmessagesettings', 'minimizetotray', str(
+            self.checkBoxMinimizeToTray.isChecked()))
+        self.config.set('bitmessagesettings', 'trayonclose', str(
+            self.checkBoxTrayOnClose.isChecked()))
+        self.config.set(
+            'bitmessagesettings', 'hidetrayconnectionnotifications',
+            str(self.checkBoxHideTrayConnectionNotifications.isChecked()))
+        self.config.set('bitmessagesettings', 'showtraynotifications', str(
+            self.checkBoxShowTrayNotifications.isChecked()))
+        self.config.set('bitmessagesettings', 'startintray', str(
+            self.checkBoxStartInTray.isChecked()))
+        self.config.set('bitmessagesettings', 'willinglysendtomobile', str(
+            self.checkBoxWillinglySendToMobile.isChecked()))
+        self.config.set('bitmessagesettings', 'useidenticons', str(
+            self.checkBoxUseIdenticons.isChecked()))
+        self.config.set('bitmessagesettings', 'replybelow', str(
+            self.checkBoxReplyBelow.isChecked()))
+
+        lang = str(self.languageComboBox.itemData(
+            self.languageComboBox.currentIndex()).toString())
+        self.config.set('bitmessagesettings', 'userlocale', lang)
+        self.parent.change_translation()
+
+        if int(self.config.get('bitmessagesettings', 'port')) != int(
+                self.lineEditTCPPort.text()):
+            self.config.set(
+                'bitmessagesettings', 'port', str(self.lineEditTCPPort.text()))
+            if not self.config.safeGetBoolean('bitmessagesettings', 'dontconnect'):
+                self.net_restart_needed = True
+
+        if self.checkBoxUPnP.isChecked() != self.config.safeGetBoolean(
+                'bitmessagesettings', 'upnp'):
+            self.config.set(
+                'bitmessagesettings', 'upnp',
+                str(self.checkBoxUPnP.isChecked()))
+            if self.checkBoxUPnP.isChecked():
+                import upnp
+                upnpThread = upnp.uPnPThread()
+                upnpThread.start()
+
+        if (
+            self.config.get('bitmessagesettings', 'socksproxytype') ==
+            'none' and
+            self.comboBoxProxyType.currentText()[0:5] == 'SOCKS' and
+            shared.statusIconColor != 'red'
+        ):
+                self.net_restart_needed = True
+        if (
+            self.config.get('bitmessagesettings', 'socksproxytype')[0:5] ==
+            'SOCKS' and self.comboBoxProxyType.currentText()[0:5] != 'SOCKS'
+        ):
+            self.parent.statusbar.clearMessage()
+        # just in case we changed something in the network connectivity
+        state.resetNetworkProtocolAvailability()
+        if self.comboBoxProxyType.currentText()[0:5] == 'SOCKS':
+            self.config.set('bitmessagesettings', 'socksproxytype', str(
+                self.comboBoxProxyType.currentText()))
+        else:
+            self.config.set('bitmessagesettings', 'socksproxytype', 'none')
+        self.config.set('bitmessagesettings', 'socksauthentication', str(
+            self.checkBoxAuthentication.isChecked()))
+        self.config.set('bitmessagesettings', 'sockshostname', str(
+            self.lineEditSocksHostname.text()))
+        self.config.set('bitmessagesettings', 'socksport', str(
+            self.lineEditSocksPort.text()))
+        self.config.set('bitmessagesettings', 'socksusername', str(
+            self.lineEditSocksUsername.text()))
+        self.config.set('bitmessagesettings', 'sockspassword', str(
+            self.lineEditSocksPassword.text()))
+        self.config.set('bitmessagesettings', 'sockslisten', str(
+            self.checkBoxSocksListen.isChecked()))
+        try:
+            # Rounding to integers just for aesthetics
+            self.config.set('bitmessagesettings', 'maxdownloadrate', str(
+                int(float(self.lineEditMaxDownloadRate.text()))))
+            self.config.set('bitmessagesettings', 'maxuploadrate', str(
+                int(float(self.lineEditMaxUploadRate.text()))))
+        except ValueError:
+            QtGui.QMessageBox.about(
+                self, _translate("MainWindow", "Number needed"),
+                _translate(
+                    "MainWindow",
+                    "Your maximum download and upload rate must be numbers."
+                    " Ignoring what you typed.")
+            )
+        else:
+            set_rates(
+                self.config.safeGetInt('bitmessagesettings', 'maxdownloadrate'),
+                self.config.safeGetInt('bitmessagesettings', 'maxuploadrate'))
+
+        self.config.set('bitmessagesettings', 'maxoutboundconnections', str(
+            int(float(self.lineEditMaxOutboundConnections.text()))))
+
+        if self.net_restart_needed:
+            self.net_restart_needed = False
+            self.config.set('bitmessagesettings', 'dontconnect', 'true')
+            self.timer.singleShot(
+                5000, lambda:
+                self.config.remove_option(
+                    'bitmessagesettings', 'dontconnect')
+            )
+
+        self.config.set(
+            'bitmessagesettings', 'namecoinrpctype', self.getNamecoinType())
+        self.config.set('bitmessagesettings', 'namecoinrpchost', str(
+            self.lineEditNamecoinHost.text()))
+        self.config.set('bitmessagesettings', 'namecoinrpcport', str(
+            self.lineEditNamecoinPort.text()))
+        self.config.set('bitmessagesettings', 'namecoinrpcuser', str(
+            self.lineEditNamecoinUser.text()))
+        self.config.set('bitmessagesettings', 'namecoinrpcpassword', str(
+            self.lineEditNamecoinPassword.text()))
+        self.parent.resetNamecoinConnection()
+
+        # Demanded difficulty tab
+        if float(self.lineEditTotalDifficulty.text()) >= 1:
+            self.config.set(
+                'bitmessagesettings', 'defaultnoncetrialsperbyte',
+                str(int(
+                    float(self.lineEditTotalDifficulty.text()) *
+                    defaults.networkDefaultProofOfWorkNonceTrialsPerByte)))
+        if float(self.lineEditSmallMessageDifficulty.text()) >= 1:
+            self.config.set(
+                'bitmessagesettings', 'defaultpayloadlengthextrabytes',
+                str(int(
+                    float(self.lineEditSmallMessageDifficulty.text()) *
+                    defaults.networkDefaultPayloadLengthExtraBytes)))
+
+        if self.comboBoxOpenCL.currentText().toUtf8() != self.config.safeGet(
+                'bitmessagesettings', 'opencl'):
+            self.config.set(
+                'bitmessagesettings', 'opencl',
+                str(self.comboBoxOpenCL.currentText()))
+            queues.workerQueue.put(('resetPoW', ''))
+
+        acceptableDifficultyChanged = False
+
+        if (
+            float(self.lineEditMaxAcceptableTotalDifficulty.text()) >= 1 or
+            float(self.lineEditMaxAcceptableTotalDifficulty.text()) == 0
+        ):
+            if self.config.get(
+                'bitmessagesettings', 'maxacceptablenoncetrialsperbyte'
+            ) != str(int(
+                float(self.lineEditMaxAcceptableTotalDifficulty.text()) *
+                defaults.networkDefaultProofOfWorkNonceTrialsPerByte)
+            ):
+                # the user changed the max acceptable total difficulty
+                acceptableDifficultyChanged = True
+                self.config.set(
+                    'bitmessagesettings', 'maxacceptablenoncetrialsperbyte',
+                    str(int(
+                        float(self.lineEditMaxAcceptableTotalDifficulty.text()) *
+                        defaults.networkDefaultProofOfWorkNonceTrialsPerByte))
+                )
+        if (
+            float(self.lineEditMaxAcceptableSmallMessageDifficulty.text()) >= 1 or
+            float(self.lineEditMaxAcceptableSmallMessageDifficulty.text()) == 0
+        ):
+            if self.config.get(
+                'bitmessagesettings', 'maxacceptablepayloadlengthextrabytes'
+            ) != str(int(
+                float(self.lineEditMaxAcceptableSmallMessageDifficulty.text()) *
+                defaults.networkDefaultPayloadLengthExtraBytes)
+            ):
+                # the user changed the max acceptable small message difficulty
+                acceptableDifficultyChanged = True
+                self.config.set(
+                    'bitmessagesettings', 'maxacceptablepayloadlengthextrabytes',
+                    str(int(
+                        float(self.lineEditMaxAcceptableSmallMessageDifficulty.text()) *
+                        defaults.networkDefaultPayloadLengthExtraBytes))
+                )
+        if acceptableDifficultyChanged:
+            # It might now be possible to send msgs which were previously
+            # marked as toodifficult. Let us change them to 'msgqueued'.
+            # The singleWorker will try to send them and will again mark
+            # them as toodifficult if the receiver's required difficulty
+            # is still higher than we are willing to do.
+            sqlExecute(
+                "UPDATE sent SET status='msgqueued'"
+                " WHERE status='toodifficult'")
+            queues.workerQueue.put(('sendmessage', ''))
+
+        # UI setting to stop trying to send messages after X days/months
+        # I'm open to changing this UI to something else if someone has a better idea.
+        if self.lineEditDays.text() == '' and self.lineEditMonths.text() == '':
+            # We need to handle this special case. Bitmessage has its
+            # default behavior. The input is blank/blank
+            self.config.set('bitmessagesettings', 'stopresendingafterxdays', '')
+            self.config.set('bitmessagesettings', 'stopresendingafterxmonths', '')
+            shared.maximumLengthOfTimeToBotherResendingMessages = float('inf')
+
+        try:
+            days = float(self.lineEditDays.text())
+        except ValueError:
+            self.lineEditDays.setText("0")
+            days = 0.0
+        try:
+            months = float(self.lineEditMonths.text())
+        except ValueError:
+            self.lineEditMonths.setText("0")
+            months = 0.0
+
+        if days >= 0 and months >= 0:
+            shared.maximumLengthOfTimeToBotherResendingMessages = \
+                days * 24 * 60 * 60 + months * 60 * 60 * 24 * 365 / 12
+            if shared.maximumLengthOfTimeToBotherResendingMessages < 432000:
+                # If the time period is less than 5 hours, we give
+                # zero values to all fields. No message will be sent again.
+                QtGui.QMessageBox.about(
+                    self,
+                    _translate("MainWindow", "Will not resend ever"),
+                    _translate(
+                        "MainWindow",
+                        "Note that the time limit you entered is less"
+                        " than the amount of time Bitmessage waits for"
+                        " the first resend attempt therefore your"
+                        " messages will never be resent.")
+                )
+                self.config.set(
+                    'bitmessagesettings', 'stopresendingafterxdays', '0')
+                self.config.set(
+                    'bitmessagesettings', 'stopresendingafterxmonths', '0')
+                shared.maximumLengthOfTimeToBotherResendingMessages = 0.0
+            else:
+                self.config.set(
+                    'bitmessagesettings', 'stopresendingafterxdays', str(days))
+                self.config.set(
+                    'bitmessagesettings', 'stopresendingafterxmonths',
+                    str(months))
+
+        self.config.save()
+
+        self.parent.updateStartOnLogon()
+
+        if (
+            state.appdata != paths.lookupExeFolder() and
+            self.checkBoxPortableMode.isChecked()
+        ):
+            # If we are NOT using portable mode now but the user selected
+            # that we should...
+            # Write the keys.dat file to disk in the new location
+            sqlStoredProcedure('movemessagstoprog')
+            with open(paths.lookupExeFolder() + 'keys.dat', 'wb') as configfile:
+                self.config.write(configfile)
+            # Write the knownnodes.dat file to disk in the new location
+            knownnodes.saveKnownNodes(paths.lookupExeFolder())
+            os.remove(state.appdata + 'keys.dat')
+            os.remove(state.appdata + 'knownnodes.dat')
+            previousAppdataLocation = state.appdata
+            state.appdata = paths.lookupExeFolder()
+            debug.resetLogging()
+            try:
+                os.remove(previousAppdataLocation + 'debug.log')
+                os.remove(previousAppdataLocation + 'debug.log.1')
+            except:
+                pass
+
+        if (
+            state.appdata == paths.lookupExeFolder() and
+            not self.checkBoxPortableMode.isChecked()
+        ):
+            # If we ARE using portable mode now but the user selected
+            # that we shouldn't...
+            state.appdata = paths.lookupAppdataFolder()
+            if not os.path.exists(state.appdata):
+                os.makedirs(state.appdata)
+            sqlStoredProcedure('movemessagstoappdata')
+            # Write the keys.dat file to disk in the new location
+            self.config.save()
+            # Write the knownnodes.dat file to disk in the new location
+            knownnodes.saveKnownNodes(state.appdata)
+            os.remove(paths.lookupExeFolder() + 'keys.dat')
+            os.remove(paths.lookupExeFolder() + 'knownnodes.dat')
+            debug.resetLogging()
+            try:
+                os.remove(paths.lookupExeFolder() + 'debug.log')
+                os.remove(paths.lookupExeFolder() + 'debug.log.1')
+            except:
+                pass
diff --git a/src/bitmessageqt/settings.ui b/src/bitmessageqt/settings.ui
index 4aeba3ce..307c06c2 100644
--- a/src/bitmessageqt/settings.ui
+++ b/src/bitmessageqt/settings.ui
@@ -37,6 +37,18 @@
        <string>User Interface</string>
       </attribute>
       <layout class="QFormLayout" name="formLayout">
+       <property name="leftMargin">
+        <number>8</number>
+       </property>
+       <property name="topMargin">
+        <number>8</number>
+       </property>
+       <property name="rightMargin">
+        <number>8</number>
+       </property>
+       <property name="bottomMargin">
+        <number>8</number>
+       </property>
        <item row="0" column="0">
         <widget class="QCheckBox" name="checkBoxStartOnLogon">
          <property name="text">
@@ -44,20 +56,43 @@
          </property>
         </widget>
        </item>
-       <item row="1" column="0" colspan="2">
-        <widget class="QCheckBox" name="checkBoxStartInTray">
-         <property name="text">
-          <string>Start Bitmessage in the tray (don't show main window)</string>
+       <item row="1" column="0">
+        <widget class="QGroupBox" name="groupBoxTray">
+         <property name="title">
+          <string>Tray</string>
          </property>
+         <layout class="QVBoxLayout" name="formLayoutTray">
+          <item>
+           <widget class="QCheckBox" name="checkBoxStartInTray">
+            <property name="text">
+             <string>Start Bitmessage in the tray (don't show main window)</string>
+            </property>
+           </widget>
+          </item>
+          <item>
+           <widget class="QCheckBox" name="checkBoxMinimizeToTray">
+            <property name="text">
+             <string>Minimize to tray</string>
+            </property>
+            <property name="checked">
+             <bool>true</bool>
+            </property>
+           </widget>
+          </item>
+          <item>
+           <widget class="QCheckBox" name="checkBoxTrayOnClose">
+            <property name="text">
+             <string>Close to tray</string>
+            </property>
+           </widget>
+          </item>
+         </layout>
         </widget>
        </item>
        <item row="2" column="0">
-        <widget class="QCheckBox" name="checkBoxMinimizeToTray">
+        <widget class="QCheckBox" name="checkBoxHideTrayConnectionNotifications">
          <property name="text">
-          <string>Minimize to tray</string>
-         </property>
-         <property name="checked">
-          <bool>true</bool>
+          <string>Hide connection notifications</string>
          </property>
         </widget>
        </item>
@@ -117,90 +152,15 @@
          <property name="title">
           <string>Interface Language</string>
          </property>
-         <layout class="QFormLayout" name="formLayout_2">
-          <item row="0" column="0">
-           <widget class="QComboBox" name="languageComboBox">
+         <layout class="QVBoxLayout">
+          <item>
+           <widget class="LanguageBox" name="languageComboBox">
             <property name="minimumSize">
              <size>
               <width>100</width>
               <height>0</height>
              </size>
             </property>
-            <item>
-             <property name="text">
-              <string comment="system">System Settings</string>
-             </property>
-            </item>
-            <item>
-             <property name="text">
-              <string notr="true" comment="en">English</string>
-             </property>
-            </item>
-            <item>
-             <property name="text">
-              <string notr="true" comment="eo">Esperanto</string>
-             </property>
-            </item>
-            <item>
-             <property name="text">
-              <string notr="true" comment="fr">Français</string>
-             </property>
-            </item>
-            <item>
-             <property name="text">
-              <string notr="true" comment="de">Deutsch</string>
-             </property>
-            </item>
-            <item>
-             <property name="text">
-              <string notr="true" comment="es">Español</string>
-             </property>
-            </item>
-            <item>
-             <property name="text">
-              <string notr="true" comment="ru">русский</string>
-             </property>
-            </item>
-            <item>
-             <property name="text">
-              <string notr="true" comment="no">Norsk</string>
-             </property>
-            </item>
-            <item>
-             <property name="text">
-              <string notr="true" comment="ar">العربية</string>
-             </property>
-            </item>
-            <item>
-             <property name="text">
-              <string notr="true" comment="zh_cn">简体中文</string>
-             </property>
-            </item>
-            <item>
-             <property name="text">
-              <string notr="true" comment="ja">日本語</string>
-             </property>
-            </item>
-            <item>
-             <property name="text">
-              <string notr="true" comment="nl">Nederlands</string>
-             </property>
-            </item>
-            <item>
-             <property name="text">
-              <string notr="true" comment="cs">Česky</string>
-             </property>
-            </item>
-            <item>
-             <property name="text">
-              <string comment="en_pirate">Pirate English</string>
-             </property>
-            </item>
-            <item>
-             <property name="text">
-              <string comment="other">Other (set in keys.dat)</string>
-             </property>
-            </item>
            </widget>
           </item>
          </layout>
@@ -213,6 +173,18 @@
        <string>Network Settings</string>
       </attribute>
       <layout class="QGridLayout" name="gridLayout_4">
+       <property name="leftMargin">
+        <number>8</number>
+       </property>
+       <property name="topMargin">
+        <number>8</number>
+       </property>
+       <property name="rightMargin">
+        <number>8</number>
+       </property>
+       <property name="bottomMargin">
+        <number>8</number>
+       </property>
        <item row="0" column="0">
         <widget class="QGroupBox" name="groupBox">
          <property name="title">
@@ -220,26 +192,13 @@
          </property>
          <layout class="QGridLayout" name="gridLayout_3">
           <item row="0" column="0">
-           <spacer name="horizontalSpacer">
-            <property name="orientation">
-             <enum>Qt::Horizontal</enum>
-            </property>
-            <property name="sizeHint" stdset="0">
-             <size>
-              <width>125</width>
-              <height>20</height>
-             </size>
-            </property>
-           </spacer>
-          </item>
-          <item row="0" column="1">
            <widget class="QLabel" name="label">
             <property name="text">
              <string>Listen for connections on port:</string>
             </property>
            </widget>
           </item>
-          <item row="0" column="2">
+          <item row="0" column="1">
            <widget class="QLineEdit" name="lineEditTCPPort">
             <property name="maximumSize">
              <size>
@@ -249,6 +208,26 @@
             </property>
            </widget>
           </item>
+          <item row="0" column="4">
+           <widget class="QCheckBox" name="checkBoxUPnP">
+            <property name="text">
+             <string>UPnP</string>
+            </property>
+           </widget>
+          </item>
+          <item row="0" column="2">
+           <spacer name="horizontalSpacer">
+            <property name="orientation">
+             <enum>Qt::Horizontal</enum>
+            </property>
+            <property name="sizeHint" stdset="0">
+             <size>
+              <width>40</width>
+              <height>20</height>
+             </size>
+            </property>
+           </spacer>
+          </item>
          </layout>
         </widget>
        </item>
@@ -466,6 +445,18 @@
        <string>Demanded difficulty</string>
       </attribute>
       <layout class="QGridLayout" name="gridLayout_6">
+       <property name="leftMargin">
+        <number>8</number>
+       </property>
+       <property name="topMargin">
+        <number>8</number>
+       </property>
+       <property name="rightMargin">
+        <number>8</number>
+       </property>
+       <property name="bottomMargin">
+        <number>8</number>
+       </property>
        <item row="1" column="1">
         <widget class="QLabel" name="label_9">
          <property name="text">
@@ -594,6 +585,18 @@
        <string>Max acceptable difficulty</string>
       </attribute>
       <layout class="QGridLayout" name="gridLayout_7">
+       <property name="leftMargin">
+        <number>8</number>
+       </property>
+       <property name="topMargin">
+        <number>8</number>
+       </property>
+       <property name="rightMargin">
+        <number>8</number>
+       </property>
+       <property name="bottomMargin">
+        <number>8</number>
+       </property>
        <item row="0" column="0" colspan="3">
         <widget class="QLabel" name="label_15">
          <property name="text">
@@ -698,6 +701,33 @@
          </property>
         </spacer>
        </item>
+       <item row="4" column="0" colspan="3">
+        <layout class="QHBoxLayout">
+         <item>
+          <widget class="QLabel" name="labelOpenCL">
+           <property name="text">
+            <string>Hardware GPU acceleration (OpenCL):</string>
+           </property>
+          </widget>
+         </item>
+         <item>
+          <widget class="QComboBox" name="comboBoxOpenCL"/>
+         </item>
+         <item>
+          <spacer name="horizontalSpacer_12">
+           <property name="orientation">
+            <enum>Qt::Horizontal</enum>
+           </property>
+           <property name="sizeHint" stdset="0">
+            <size>
+             <width>40</width>
+             <height>20</height>
+            </size>
+           </property>
+          </spacer>
+         </item>
+        </layout>
+       </item>
       </layout>
      </widget>
      <widget class="QWidget" name="tabNamecoin">
@@ -705,6 +735,18 @@
        <string>Namecoin integration</string>
       </attribute>
       <layout class="QGridLayout" name="gridLayout_8">
+       <property name="leftMargin">
+        <number>8</number>
+       </property>
+       <property name="topMargin">
+        <number>8</number>
+       </property>
+       <property name="rightMargin">
+        <number>8</number>
+       </property>
+       <property name="bottomMargin">
+        <number>8</number>
+       </property>
        <item row="2" column="0">
         <spacer name="horizontalSpacer_6">
          <property name="orientation">
@@ -888,6 +930,18 @@
        <string>Resends Expire</string>
       </attribute>
       <layout class="QGridLayout" name="gridLayout_5">
+       <property name="leftMargin">
+        <number>8</number>
+       </property>
+       <property name="topMargin">
+        <number>8</number>
+       </property>
+       <property name="rightMargin">
+        <number>8</number>
+       </property>
+       <property name="bottomMargin">
+        <number>8</number>
+       </property>
        <item row="0" column="0" colspan="3">
         <widget class="QLabel" name="label_7">
          <property name="text">
@@ -912,91 +966,69 @@
         </spacer>
        </item>
        <item row="1" column="2">
-        <widget class="QWidget" name="widget" native="true">
+        <widget class="QGroupBox">
          <property name="minimumSize">
           <size>
            <width>231</width>
            <height>75</height>
           </size>
          </property>
+	 <layout class="QGridLayout">
+	   <item row="0" column="0">
          <widget class="QLabel" name="label_19">
-          <property name="geometry">
-           <rect>
-            <x>10</x>
-            <y>20</y>
-            <width>101</width>
-            <height>20</height>
-           </rect>
-          </property>
           <property name="text">
            <string>Give up after</string>
           </property>
-          <property name="alignment">
+	  <property name="alignment">
            <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
-          </property>
+         </property>
          </widget>
+	   </item>
+	   <item row="1" column="0">
          <widget class="QLabel" name="label_20">
-          <property name="geometry">
-           <rect>
-            <x>30</x>
-            <y>40</y>
-            <width>80</width>
-            <height>16</height>
-           </rect>
-          </property>
           <property name="text">
            <string>and</string>
           </property>
-          <property name="alignment">
+	  <property name="alignment">
            <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
           </property>
          </widget>
-         <widget class="QLineEdit" name="lineEditDays">
-          <property name="geometry">
-           <rect>
-            <x>113</x>
-            <y>20</y>
-            <width>51</width>
-            <height>20</height>
-           </rect>
-          </property>
+	   </item>
+	   <item row="0" column="1">
+             <widget class="QLineEdit" name="lineEditDays">
+	       <property name="maximumSize">
+             <size>
+               <width>55</width>
+	       <height>100</height>
+	     </size>
+	     </property>
          </widget>
-         <widget class="QLineEdit" name="lineEditMonths">
-          <property name="geometry">
-           <rect>
-            <x>113</x>
-            <y>40</y>
-            <width>51</width>
-            <height>20</height>
-           </rect>
-          </property>
+	   </item>
+	   <item row="1" column="1">
+             <widget class="QLineEdit" name="lineEditMonths">
+	       <property name="maximumSize">
+             <size>
+               <width>55</width>
+	       <height>100</height>
+	     </size>
+	     </property>
          </widget>
-         <widget class="QLabel" name="label_22">
-          <property name="geometry">
-           <rect>
-            <x>169</x>
-            <y>23</y>
-            <width>61</width>
-            <height>16</height>
-           </rect>
-          </property>
+	   </item>
+	   <item row="0" column="2">
+         <widget class="QLabel">
           <property name="text">
            <string>days</string>
           </property>
          </widget>
-         <widget class="QLabel" name="label_23">
-          <property name="geometry">
-           <rect>
-            <x>170</x>
-            <y>41</y>
-            <width>71</width>
-            <height>16</height>
-           </rect>
-          </property>
+	   </item>
+	   <item row="1" column="2">
+         <widget class="QLabel">
           <property name="text">
            <string>months.</string>
           </property>
          </widget>
+	   </item>
+	 </layout>
         </widget>
        </item>
        <item row="2" column="1">
@@ -1017,7 +1049,14 @@
     </widget>
    </item>
   </layout>
- </widget>
+</widget>
+ <customwidgets>
+  <customwidget>
+   <class>LanguageBox</class>
+   <extends>QComboBox</extends>
+   <header>bitmessageqt.languagebox</header>
+  </customwidget>
+  </customwidgets>
  <tabstops>
   <tabstop>tabWidgetSettings</tabstop>
   <tabstop>checkBoxStartOnLogon</tabstop>
@@ -1101,5 +1140,53 @@
     </hint>
    </hints>
   </connection>
+  <connection>
+   <sender>comboBoxProxyType</sender>
+   <signal>currentIndexChanged(int)</signal>
+   <receiver>settingsDialog</receiver>
+   <slot>comboBoxProxyTypeChanged</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>radioButtonNamecoinNamecoind</sender>
+   <signal>toggled(bool)</signal>
+   <receiver>settingsDialog</receiver>
+   <slot>namecoinTypeChanged</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>pushButtonNamecoinTest</sender>
+   <signal>clicked()</signal>
+   <receiver>settingsDialog</receiver>
+   <slot>click_pushButtonNamecoinTest</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>20</x>
+     <y>20</y>
+    </hint>
+   </hints>
+  </connection>
  </connections>
 </ui>
diff --git a/src/bitmessageqt/support.py b/src/bitmessageqt/support.py
index 2a1ddb18..7b10a7b4 100644
--- a/src/bitmessageqt/support.py
+++ b/src/bitmessageqt/support.py
@@ -53,6 +53,7 @@ UPnP: {}
 Connected hosts: {}
 '''
 
+
 def checkAddressBook(myapp):
     sqlExecute('''DELETE from addressbook WHERE address=?''', OLD_SUPPORT_ADDRESS)
     queryreturn = sqlQuery('''SELECT * FROM addressbook WHERE address=?''', SUPPORT_ADDRESS)
@@ -60,6 +61,7 @@ def checkAddressBook(myapp):
         sqlExecute('''INSERT INTO addressbook VALUES (?,?)''', str(QtGui.QApplication.translate("Support", SUPPORT_LABEL)), SUPPORT_ADDRESS)
         myapp.rerenderAddressBook()
 
+
 def checkHasNormalAddress():
     for address in account.getSortedAccounts():
         acct = account.accountClass(address)
@@ -67,6 +69,7 @@ def checkHasNormalAddress():
             return address
     return False
 
+
 def createAddressIfNeeded(myapp):
     if not checkHasNormalAddress():
         queues.addressGeneratorQueue.put(('createRandomAddress', 4, 1, str(QtGui.QApplication.translate("Support", SUPPORT_MY_LABEL)), 1, "", False, defaults.networkDefaultProofOfWorkNonceTrialsPerByte, defaults.networkDefaultPayloadLengthExtraBytes))
@@ -75,18 +78,22 @@ def createAddressIfNeeded(myapp):
     myapp.rerenderComboBoxSendFrom()
     return checkHasNormalAddress()
 
+
 def createSupportMessage(myapp):
     checkAddressBook(myapp)
     address = createAddressIfNeeded(myapp)
     if state.shutdown:
         return
 
-    myapp.ui.lineEditSubject.setText(str(QtGui.QApplication.translate("Support", SUPPORT_SUBJECT)))
-    addrIndex = myapp.ui.comboBoxSendFrom.findData(address, QtCore.Qt.UserRole, QtCore.Qt.MatchFixedString | QtCore.Qt.MatchCaseSensitive)
-    if addrIndex == -1: # something is very wrong
+    myapp.lineEditSubject.setText(
+        str(QtGui.QApplication.translate("Support", SUPPORT_SUBJECT)))
+    addrIndex = myapp.comboBoxSendFrom.findData(
+        address, QtCore.Qt.UserRole,
+        QtCore.Qt.MatchFixedString | QtCore.Qt.MatchCaseSensitive)
+    if addrIndex == -1:  # something is very wrong
         return
-    myapp.ui.comboBoxSendFrom.setCurrentIndex(addrIndex)
-    myapp.ui.lineEditTo.setText(SUPPORT_ADDRESS)
+    myapp.comboBoxSendFrom.setCurrentIndex(addrIndex)
+    myapp.lineEditTo.setText(SUPPORT_ADDRESS)
 
     version = softwareVersion
     commit = paths.lastCommit().get('commit')
@@ -123,13 +130,16 @@ def createSupportMessage(myapp):
     upnp = BMConfigParser().safeGet('bitmessagesettings', 'upnp', "N/A")
     connectedhosts = len(network.stats.connectedHostsList())
 
-    myapp.ui.textEditMessage.setText(str(QtGui.QApplication.translate("Support", SUPPORT_MESSAGE)).format(version, os, architecture, pythonversion, opensslversion, frozen, portablemode, cpow, openclpow, locale, socks, upnp, connectedhosts))
+    myapp.textEditMessage.setText(
+        str(QtGui.QApplication.translate("Support", SUPPORT_MESSAGE)).format(
+            version, os, architecture, pythonversion, opensslversion, frozen,
+            portablemode, cpow, openclpow, locale, socks, upnp, connectedhosts))
 
     # single msg tab
-    myapp.ui.tabWidgetSend.setCurrentIndex(
-        myapp.ui.tabWidgetSend.indexOf(myapp.ui.sendDirect)
+    myapp.tabWidgetSend.setCurrentIndex(
+        myapp.tabWidgetSend.indexOf(myapp.sendDirect)
     )
     # send tab
-    myapp.ui.tabWidget.setCurrentIndex(
-        myapp.ui.tabWidget.indexOf(myapp.ui.send)
+    myapp.tabWidget.setCurrentIndex(
+        myapp.tabWidget.indexOf(myapp.send)
     )
diff --git a/src/bitmessageqt/tests/__init__.py b/src/bitmessageqt/tests/__init__.py
new file mode 100644
index 00000000..cf68b723
--- /dev/null
+++ b/src/bitmessageqt/tests/__init__.py
@@ -0,0 +1,3 @@
+from main import TestMain
+
+__all__ = ["TestMain"]
diff --git a/src/bitmessageqt/tests/main.py b/src/bitmessageqt/tests/main.py
new file mode 100644
index 00000000..c05d1035
--- /dev/null
+++ b/src/bitmessageqt/tests/main.py
@@ -0,0 +1,44 @@
+"""
+A tests for MainWindow
+"""
+
+import unittest
+
+from PyQt4 import QtCore, QtGui, QtTest
+
+import bitmessageqt
+from tr import _translate
+
+app = QtGui.QApplication([])
+
+
+class TestMain(unittest.TestCase):
+    """A test case for MainWindow"""
+
+    def setUp(self):
+        self.window = bitmessageqt.MainWindow()
+
+    def test_defaults(self):
+        tab_widget = self.window.tabWidget
+        self.assertEqual(tab_widget.count(), 6)
+        self.assertEqual(tab_widget.currentIndex(), 0)
+        self.assertEqual(
+            tab_widget.tabText(0), _translate("MainWindow", "Messages"))
+        self.assertEqual(
+            tab_widget.tabText(1), _translate("MainWindow", "Send"))
+        self.assertEqual(
+            tab_widget.tabText(2), _translate("MainWindow", "Subscriptions"))
+        self.assertEqual(
+            tab_widget.tabText(3), _translate("MainWindow", "Chans"))
+        self.assertEqual(
+            tab_widget.tabText(5),
+            _translate("MainWindow", "Network Status"))
+
+        menu_actions = self.window.menubar.actions()
+        self.assertEqual(len(menu_actions), 3)
+        self.assertEqual(
+            menu_actions[0].text(), _translate("MainWindow", "File"))
+        self.assertEqual(
+            menu_actions[1].text(), _translate("MainWindow", "Settings"))
+        self.assertEqual(
+            menu_actions[2].text(), _translate("MainWindow", "Help"))
diff --git a/src/shared.py b/src/shared.py
index 76769a02..86bf6f72 100644
--- a/src/shared.py
+++ b/src/shared.py
@@ -74,7 +74,7 @@ numberOfPubkeysProcessed = 0
 # If True, the singleCleaner will write it to disk eventually.
 needToWriteKnownNodesToDisk = False
 
-maximumLengthOfTimeToBotherResendingMessages = 0
+maximumLengthOfTimeToBotherResendingMessages = 0.0
 timeOffsetWrongCount = 0
 
 
diff --git a/src/tests/core.py b/src/tests/core.py
index 5706f04b..45aaf3c9 100644
--- a/src/tests/core.py
+++ b/src/tests/core.py
@@ -112,7 +112,14 @@ class TestCore(unittest.TestCase):
 
 def run():
     """Starts all tests defined in this module"""
-    loader = unittest.TestLoader()
+    loader = unittest.defaultTestLoader
     loader.sortTestMethodsUsing = None
     suite = loader.loadTestsFromTestCase(TestCore)
+    try:
+        import bitmessageqt.tests
+    except ImportError:
+        pass
+    else:
+        qt_tests = loader.loadTestsFromModule(bitmessageqt.tests)
+        suite.addTests(qt_tests)
     return unittest.TextTestRunner(verbosity=2).run(suite)
diff --git a/src/translations/bitmessage.pro b/src/translations/bitmessage.pro
index ed491b3d..2a1f9396 100644
--- a/src/translations/bitmessage.pro
+++ b/src/translations/bitmessage.pro
@@ -19,18 +19,18 @@ SOURCES	= 	../addresses.py\
 			../bitmessageqt/__init__.py\
 			../bitmessageqt/account.py\
 			../bitmessageqt/address_dialogs.py\
-			../bitmessageqt/bitmessageui.py\
 			../bitmessageqt/blacklist.py\
 			../bitmessageqt/dialogs.py\
 			../bitmessageqt/foldertree.py\
 			../bitmessageqt/languagebox.py\
+                        ../bitmessageqt/main.py\
 			../bitmessageqt/messagecompose.py\
 			../bitmessageqt/messageview.py\
 			../bitmessageqt/networkstatus.py\
 			../bitmessageqt/newchandialog.py\
 			../bitmessageqt/safehtmlparser.py\
 			../bitmessageqt/settings.py\
-                        ../plugins/qrcodeui.py
+                        ../plugins/menu_qrcode.py
 
 FORMS = \
     ../bitmessageqt/about.ui\
@@ -40,11 +40,13 @@ FORMS = \
     ../bitmessageqt/emailgateway.ui\
     ../bitmessageqt/help.ui\
     ../bitmessageqt/iconglossary.ui\
+    ../bitmessageqt/main.ui\
     ../bitmessageqt/networkstatus.ui\
     ../bitmessageqt/newaddressdialog.ui\
     ../bitmessageqt/newchandialog.ui\
     ../bitmessageqt/newsubscriptiondialog.ui\
     ../bitmessageqt/regenerateaddresses.ui\
+    ../bitmessageqt/settings.ui\
     ../bitmessageqt/specialaddressbehavior.ui
 
 TRANSLATIONS = \
